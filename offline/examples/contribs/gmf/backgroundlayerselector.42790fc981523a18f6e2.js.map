{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/examples/backgroundlayerselector.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/backgroundlayerselector/module.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__WEBPACK_IMPORTED_MODULE_5__xml_js__","__webpack_require__","WMSGetFeatureInfo","opt_options","options","this","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","exports","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","listenerKeys_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","map","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","forEach","olEvents","unlistenByKey","$watchCollection","rootCtrl","children","value","traverseDepthFirst","registerTreeCtrl_","bind","push","listen","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","olCollection","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","name","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","view","getView","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","module","angular","service","gmfBase","requires","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","undefined","originalEl","element","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoBase","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","evt","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","olObservable","mapUids_","mapUid","previous","setAt","removeAt","insertAt","event","ngeoCustomEvent","current","dispatchEvent","updateDimensions","dimensions","baseBgLayer","olLayerGroup","getArray","olLayerLayer","hasUpdates","updatedDimensions","getSource","olSourceWMTS","refresh","olSourceTileWMS","olSourceImageWMS","updateParams","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","$eval","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","gmfBackgroundlayerselectorModule","gmfMapComponent","constant","MainController","olMap","olView","center","projection","minZoom","zoom","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","_component","gmfBackgroundlayerselectorComponent","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","$element","component_","bindings","select","component","ngeoBackgroundLayerMgr","bgLayer","bgLayers","backgroundLayerMgr_","detail","handleDestroy_","setLayer","opt_silent","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","serverType","crossOrigin","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","optionsFromCapabilities","isEmpty","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","ol_Image","ImageWMS","source_Image","attributions","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","restrict","link","attrs","prop","setTarget","manageResizeProp","resizeTransitionProp","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","olEventsEvent","factory_","func","wait","invokeApply","_len","args","_key","manager","manager_","index_","setFeatures"],"mappings":"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","file":"backgroundlayerselector.42790fc981523a18f6e2.js","sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module gmfapp.backgroundlayerselector\n*/\nconst exports = {};\n\nimport './backgroundlayerselector.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfBackgroundlayerselectorModule from 'gmf/backgroundlayerselector/module.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBackgroundlayerselectorModule.name,\n  gmfMapComponent.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.module.value(\n  'gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?' +\n        'version=2&background=background');\n\nexports.module.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function(gmfThemes) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [],\n    view: new olView({\n      center: [632464, 185457],\n      projection: 'EPSG:21781',\n      minZoom: 3,\n      zoom: 3\n    })\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/backgroundlayerselector.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmf.backgroundlayerselector.module\n*/\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselectorModule', [\n  gmfBackgroundlayerselectorComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/backgroundlayerselector/module.js","/**\n * @module gmf.backgroundlayerselector.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template URL.\n     */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/backgroundlayerselector/component.html`;\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-dimensions=\"::ctrl.dimensions\"\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {Object.<string, string>} gmf-backgroundlayerselector-dimensions\n *     The dimensions.\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'dimensions': '=gmfBackgroundlayerselectorDimensions',\n    'map': '=gmfBackgroundlayerselectorMap',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  googAsserts.assert(this.dimensions, 'The dimensions object is required');\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers(this.dimensions).then((layers) => {\n    this.bgLayers = layers;\n  });\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/backgroundlayerselector/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}