{"version":3,"sources":["webpack:///./src/datasource/DataSources.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/rule/Rule.js","webpack:///./src/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/misc/Time.js","webpack:///./node_modules/openlayers/src/ol/format/JSONFeature.js","webpack:///./node_modules/openlayers/src/ol/format/GeoJSON.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/query/Querent.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/format/Attribute.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./src/datasource/Helper.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./src/rule/Geometry.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./src/rule/Select.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./node_modules/openlayers/src/ol/format/WMSCapabilities.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./src/misc/swipe.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./contribs/gmf/examples/wfspermalink.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__webpack_require__","exports","_classCallCheck","this","collection_","olCollection","map_","listenerKeys_","olEvents","listen","handleDataSourcesAdd_","_createClass","key","value","map","view","getView","push","handleViewResolutionChange_","resolution","getResolution","googAsserts","assertNumber","syncDataSourcesToResolution_","olObservable","unByKey","evt","target","assertInstanceof","olView","_this","forEach","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","maxResolution","minResolution","inRange","undefined","event","element","ngeoDatasourceDataSource","set","unbindMap_","bindMap_","get","module","angular","service","ngeoBase","requires","name","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","unlistenByKey","$watchCollection","rootCtrl","children","traverseDepthFirst","registerTreeCtrl_","bind","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","gmfBase","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","setCoordinates","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","wrapX","getDefaultStyleFunction","updateWhileInteracting","geometryName_","condition_","condition","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","events","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","ol","Style","createDefaultEditing","originalEvent","EventType","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","Date","now","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","start","setGeometryName","setGeometry","dispatchEvent","last","sketchLineGeom","ring","getLinearRing","getLayout","done","pop","removeLastPoint","splice","sketchFeature","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","getSource","sketchFeatures","overlaySource","addFeatures","getActive","createRegularPolygon","opt_sides","opt_angle","center","angle","atan","createBox","ol_extent","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","transition","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","olInteractionInteraction","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","olLayerVector","olSourceVector","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","olProjEPSG4326","RADIUS","getFormattedArea","format","transform","abs","geodesicArea","getFormattedCircleArea","PI","pow","getFormattedLength","c1","c2","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","addOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","callback","getTooltipElement","RECTANGLE","TEXT","olProjProj4","epsg21781def","proj4","defs","register","setExtent","Proj","projections","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","opt_layout","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","layout","closestPointXY","closestPoint","minSquaredDistance","delta","containsXY","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","intersectsExtent","circleExtent","intersectsCoordinate","setCenter","setLayout","changed","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setFlatCoordinatesInternal","setRadius","active_","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","listenerKeys","getExpression","setExpression","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","olString","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$injector","$filter_","decimals_","has","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","offsetY","font_size","optNumber","attrib","getNumber","opacity","getOpacityProperty","azimut","AZIMUT","line","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","console","zIndex","opt_incGeomFunc","incGeomFunc","olStyleRegularShape","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","assertString","COLOR","fromString","NAME","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","dataProjection","featureProjection","rotation","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","args","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","assertArray","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","__WEBPACK_IMPORTED_MODULE_11__xml_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","defaultDataProjection","__WEBPACK_IMPORTED_MODULE_10__proj_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","readString","RTE_PARSERS","cmt","desc","src","link","parseLink","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","time","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","createElementNS","namespaceURI","GPX_SERIALIZERS","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","setAttributeNS","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","getAllTextContent","exec","hexColor","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","writeCoordinatesTextNode_","dimension","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","getGeometries","GEOMETRY_NODE_FACTORY_","getPoints","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","_index","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","getUTCDate","localDate","getUTCFullYear","getUTCMonth","JSONFeature","format_Feature","getObject","JSON","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GeoJSON","proj","defaultFeatureProjection","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","GEOMETRY_WRITERS","right","rightHanded","geoJSONFeature","geometry_name","geoJSONFeatures","crs","objects","factory_","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","coords","rad","acos","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","olObj","olUri","ngeoRuleHelper","ngeoWMSTime","ngeoRuleHelper_","ngeoWMSTime_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","$inject","promises","cancelStillRunningRequests_","queryableDataSources","dataSources","getQueryableDataSources","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","all","handleCombinedQueryResult_","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","isDataSourceQueryable_","ngeoDatasourceOGC","supportsWFS","err","return","supportsAttributes","ogcLayerNames","getOGCLayerNames","appendParams","wfsUrl","REQUEST","SERVICE","VERSION","TYPENAME","ngeoWFSDescribeFeatureType","read","layerCapabilities","found","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","layerCapability","wmsFindLayerCapability","baseUrl","opt_cache","cache","olFormatWMSCapabilities","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","olFormatWMTSCapabilities","combinedHash","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","hash","dataSourceIdStr","dataSourceId","limit","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","tooManyFeatures","totalFeatureCount","readAndTypeFeatures_","setUniqueIds_","getSetOlFormatTypes_","wmsFormat","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","wfsCount","tolerancePx","buffer","createOrUpdateFromCoordinate","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop","getFeatureCommonOptions","params","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","wfsFeatureNS","wfsFeaturePrefix","wfsOutputFormat","assign","activeDimensions","getInRangeOGCLayerNames","createFilter","incTime","filterRules","timeRangeValue","getFeatureDefer","handleQueryResult_","countPromise","getCountOptions","resultType","featureCountXml","featureCountRequest","canceler","registerCanceler_","headers","Content-Type","readFeatureCollectionMetadata","numberOfFeatures","_iterator6","FEATURE_COUNT","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","LAYERS","INFO_FORMAT","activeDimensionsSet","filterString","filtrableLayerName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmsInfoFormat","wmsUrl","getFiltrableOGCLayerName","createFilterString","timeProperty","formatWMSTimeParam","filterParamValue","filterParamValues","wmsSource","olSourceImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","combinableForWFS","combined","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","combinableDataSource","combinableWithDataSourceForWFS","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","combinableForWMS","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","combinableWithDataSourceForWMS","ds","res","visible","isAnyOGCLayerInRange","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","CombinedDataSources","ngeoFilterRuleHelper","ngeoMiscWMSTime","gettextCatalog","ngeoFeatureHelper","gettextCatalog_","ngeoFeatureHelper_","attributes","opt_isCustom","rules","attribute","createRuleFromAttribute","rule","getString","ngeoFormatAttributeType","DATE","DATETIME","ngeoRuleDate","ngeoRuleRule","GEOMETRY","ngeoRuleGeometry","NUMBER","SELECT","ngeoRuleSelect","choices","ngeoRuleText","optionsList","createRule","selectOptions","sourceRule","destRule","serializeRule","featureProperties","mainFilter","conditions","createFilterFromRule_","filterCondition","ngeoFilterCondition","AND","olFormatFilter","and","OR","NOT","or","not","timeFilter","createTimeFilterFromDataSource_","filterNode","writeFilter","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","during","selectedChoices","equalTo","selectedChoice","contains","intersects","within","numericExpression","greaterThan","greaterThanOrEqualTo","lessThan","lessThanOrEqualTo","between","stringExpression","String","like","notEqualTo","range","timeAttributeName","momentEnd","startValue","ngeoMiscFeatureHelper","sources","total","pending","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","collection","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","queryCountFirst_","queryCountFirst","tolerancePx_","dataSourceNames_","getArray","issue","handleResult_","queried","tooManyResults","idStr","getDataSource","label","querentResultItem","typeSeparatedFeatures","filteredProperties","alias","unset","featuresByType","ngeoDatasourceDataSources","ngeoQueryQuerent","_AttributeType","geomType","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","DOCUMENT","createCDATASection","date","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","toPrecision","nonNegativeInteger","handleDataSourcesRemove_","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","complexType","complexContent","ngeoFormatWFSAttribute","setAttributes","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","_possibleConstructorReturn","__proto__","getPrototypeOf","feature_","format_","olFormatGeoJSON","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","olObject","handleFeatureGeometryChange_","setGeometryFromExpression_","_inherits","_get","registerGeometryChange_","olGeomGeometry","handleGeometryChange_","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","choices_","complexTypeElements","readFromComplexTypeElement_","required","ngeoFormatAttribute","setGeometryType","olFormatXML","readFromDocument","readFromNode","olXml","PARSERS_","readElement_","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","makeObjectPropertyPusher","extension","sequence","__WEBPACK_IMPORTED_MODULE_4__xml_js__","WMSCapabilities","__WEBPACK_IMPORTED_MODULE_2__format_XML_js__","wmsCapabilityObject","readAttribution_","ATTRIBUTION_PARSERS_","readBoundingBox_","__WEBPACK_IMPORTED_MODULE_3__format_XSD_js__","resolutions","readEXGeographicBoundingBox_","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","readCapability_","CAPABILITY_PARSERS_","readService_","SERVICE_PARSERS_","readContactInformation_","CONTACT_INFORMATION_PARSERS_","readContactPersonPrimary_","CONTACT_PERSON_PARSERS_","readContactAddress_","CONTACT_ADDRESS_PARSERS_","readException_","EXCEPTION_PARSERS_","readCapabilityLayer_","LAYER_PARSERS_","readLayer_","parentLayerObject","layerObject","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","readDimension_","units","unitSymbol","default","multipleValues","nearestValue","current","readFormatOnlineresource_","FORMAT_ONLINERESOURCE_PARSERS_","readRequest_","REQUEST_PARSERS_","readDCPType_","DCPTYPE_PARSERS_","readHTTP_","HTTP_PARSERS_","readOperationType_","OPERATIONTYPE_PARSERS_","readSizedFormatOnlineresource_","formatOnlineresource","readAuthorityURL_","authorityObject","readMetadataURL_","metadataObject","readKeywordList_","KEYWORDLIST_PARSERS_","Service","Capability","Request","Exception","Layer","Name","Title","Abstract","KeywordList","OnlineResource","__WEBPACK_IMPORTED_MODULE_1__format_XLink_js__","readHref","ContactInformation","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","ContactPosition","ContactAddress","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","Format","CRS","EX_GeographicBoundingBox","BoundingBox","Dimension","Attribution","AuthorityURL","Identifier","MetadataURL","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","GetCapabilities","GetMap","GetFeatureInfo","DCPType","HTTP","Get","Post","LegendURL","StyleSheetURL","StyleURL","Keyword","ngeoLayerHelper","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","background_layers","itemType","reverse","createBasicGroup","layerGroupCreationFn","olLayerTile","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolutionHint","getNodeMinResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","ngeoMiscSwipe","ngeoQueryMapQuerent","gmfDisplayquerywindowTemplateUrl","$element","$attrs","component_","bindings","draggableContainment","featuresStyleFn","selectedFeatureStyleFn","defaultCollapsedFn","desktop","showUnqueriedLayers","component","$scope","ngeoMapQuerent","collapsed","showUnqueriedLayers_","sourcesFilter","ngeoMapQuerent_","selectedSource","highlightFeatures_","currentResult","isNext","element_","newQueryResult","oldQueryResult","updateQueryResult_","show","close","featuresOverlay","getFeatureOverlay","setFeatures","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","draggable","containment","resizable","minHeight","minWidth","updateFeatures_","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","position","setHighlight","hasChanged","lastFeature","previous","getResultLength","animate_","queryResult","isEmpty","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","POINTER_EVENTS","mouse","touch","pointer","touches","e","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","on","makeSwipeDirective_","directiveName","direction","$parse","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","attr","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","$apply","triggerHandler","$event","isRoot","nodeExpr","state_","oldVal","$eval","mapExpr","$parent","$on","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","dimensionsConfig_","dimensionsConfig","filterCondition_","filterRules_","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeLowerValue_","timeLowerValue","timeProperty_","timeUpperValue_","timeUpperValue","wfsFeatureNS_","WFSFeatureNS","wfsFeaturePrefix_","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","WFSOutputFormat","GML3","wfsUrl_","wmsInfoFormat_","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","ogcLayer","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","updateGeometryNameFromAttributes_","haveTheSameActiveDimensions","queryableOnly","arguments","layerNames","maxRes","minRes","share","myActive","itsActive","lower","upper","config","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","TIME","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","defaultPrefix","ft","count","uri","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readPoint","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","olServerType","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","capabilitiesURL","opt_dimensions","parser","preload","olSourceWMTS","optionsFromCapabilities","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","LAYER","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","readBox_","BOX_PARSERS_","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","gmfMapComponent","gmfQueryWindowComponent","wfsTypes","defaultFeatureNS","defaultFeaturePrefix","constant","MainController","olMap","olSourceOSM","zoom","featureStyle","multiGeom","navigator","userAgent","rgb","r","g","Error","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","olEventsCondition","singleClick","showMessage","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeGetFeature_","handle","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","disposeInternal","featureUidToGroupIndex_","groups_","layer_","styleFunction_","updateWhileAnimating","groupIndex","featureUid","getLayer","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","txt","Parser","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","identity","pt","projs","es","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","tan_phi","f","temp","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","Value","AllowedValues","Phone","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","TileMatrixSet","TileMatrixSetLink","ResourceURL","WGS84BoundingBox","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","defineProperty","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","createAndAddDataSourceFromWMSCapability","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","_defineProperty","_this9","startsWith","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","isNull","initListenerKey_","restrict","attrs","prop","setTarget","manageResizeProp","resizeTransitionProp","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","utc","yearResolution","monthResolution","dayResolution","toISOString","wmsTimeProperty","times","_Event","detail","olEventsEvent","func","wait","invokeApply","_len","_key","manager","manager_","index_"],"mappings":"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,EAAA,YACAK,EAAA,WACA48F,YAAA,aAGAK,MACAt9F,EAAA,QACA21F,GAAA,OACAsH,YAAA,uBAGAM,OACAv9F,EAAA,QACA21F,GAAA,OACAsH,YAAA,4BAGAO,UACAx9F,EAAA,YACAK,EAAA,YACA48F,YAAA,iBAGAQ,QACAz9F,EAAA,WACA21F,GAAA,IACAsH,YAAA,8BAGAS,SACA19F,EAAA,QACA21F,GAAA,OACAsH,YAAA,mCAGAU,OACA39F,EAAA,QACA21F,GAAA,cACAsH,YAAA,qBAGAW,QACA59F,EAAA,YACA21F,GAAA,YACAsH,YAAA,eAGAY,UACA79F,EAAA,YACA21F,GAAA,YACAsH,YAAA,yBAGAa,QACA99F,EAAA,UACAK,EAAA,UACA48F,YAAA,eAGAc,QACA/9F,EAAA,YACA21F,GAAA,SACAsH,YAAA,oBAGAe,QACAh+F,EAAA,kBACA21F,GAAA,kBACAsH,YAAA,eAGAgB,KACAj+F,EAAA,UACA21F,GAAA,OACAsH,YAAA,mCAGAiB,QACAl+F,EAAA,QACA21F,GAAA,MACAsH,YAAA,2BAGAkB,SACAn+F,EAAA,WACA21F,GAAA,SACAsH,YAAA,gBAGAmB,SACAp+F,EAAA,YACA21F,GAAA,SACAsH,YAAA,gBAGAoB,SACAr+F,EAAA,YACA21F,GAAA,SACAsH,YAAA,gBAGAqB,SACAt+F,EAAA,YACA21F,GAAA,SACAsH,YAAA,gBAGAsB,SACAv+F,EAAA,YACA21F,GAAA,SACAsH,YAAA,gBAGAuB,SACAx+F,EAAA,YACA21F,GAAA,SACAsH,YAAA,6BAGAwB,SACAz+F,EAAA,QACA21F,GAAA,MACAsH,YAAA,gCAGAyB,UACA1+F,EAAA,QACA21F,GAAA,MACAsH,YAAA,gBAGA0B,SACA3+F,EAAA,QACA21F,GAAA,MACAsH,YAAA,gBAGA2B,SACA5+F,EAAA,QACA21F,GAAA,MACAsH,YAAA,gBAGA4B,OACA7+F,EAAA,QACA21F,GAAA,IACAsH,YAAA,SAGA6B,MACA9+F,EAAA,QACA21F,GAAA,IACAsH,YAAA,gCAGA8B,OACA/+F,EAAA,QACA21F,GAAA,OA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","file":"wfspermalink.2d69edc28ce0df6411d3.js","sourcesContent":["/**\n * @module ngeo.datasource.DataSources\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 125\n// module chunks = 0 1 2 3 4 5 6 7 8 12 13 14","/**\n * @module ngeo.rule.Rule\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olObservable from 'ol/Observable.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, chaning an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = goog.asserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    olObservable.unByKey(this.listenerKeys);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: '>=',\n  DURING: '..',\n  ENDS: '<=',\n  EQUALS: '='\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Rule.js","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 138\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 139\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/JSONFeature.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection(\n    options.defaultDataProjection ?\n      options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ transformWithOptions(\n      geometryReader(object), false, opt_options)\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {ol.geom.Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    let i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n        opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  let i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GeoJSON.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.MeasureBaseOptions\n*/\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.query.Querent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      goog.asserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = goog.asserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    goog.asserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      goog.asserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    goog.asserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      goog.asserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          goog.asserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      goog.asserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      goog.asserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions =\n            /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                resultType: 'hits'\n              },\n              getFeatureCommonOptions\n            )\n          );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions =\n              /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n              olObj.assign(\n                {\n                  maxFeatures\n                },\n                getFeatureCommonOptions\n              )\n            );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          goog.asserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = goog.asserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = goog.asserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    goog.asserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          goog.asserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          goog.asserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      goog.asserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = goog.asserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/Querent.js","/**\n * @module ngeo.filter.RuleHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: goog.asserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        goog.asserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = olFormatWFS.writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      goog.asserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = goog.asserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = goog.asserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/RuleHelper.js","/**\n * @module ngeo.query.MapQuerent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nngeoBase.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * NOTE: This will replace the ngeo.Query service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      goog.asserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = goog.asserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/query/MapQuerent.js","/**\n * @module ngeo.format.Attribute\n*/\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/Attribute.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Helper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        goog.asserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        goog.asserts.assert(element.name === ogcLayerName);\n        goog.asserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = goog.asserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Helper.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.rule.Geometry\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport olObject from 'ol/Object.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        olObject.getChangeEventType(this.feature.getGeometryName()),\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = goog.asserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = goog.asserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olObservable.unByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Geometry.js","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.rule.Select\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Select.js","/**\n * @module ngeo.format.WFSAttribute\n*/\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = goog.asserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      goog.asserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = goog.asserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/WFSAttribute.js","/**\n * @module ngeo.rule.Date\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Date.js","/**\n * @module ngeo.rule.Text\n*/\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rule/Text.js","/**\n * @module ngeo.WFSDescribeFeatureType\n*/\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = goog.asserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/WFSDescribeFeatureType.js","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  const wmsCapabilityObject = _ol_xml_.pushParseAndPop({\n    'version': this.version\n  }, WMSCapabilities.PARSERS_, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMSCapabilities.readAttribution_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.ATTRIBUTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nWMSCapabilities.readBoundingBox_ = function(node, objectStack) {\n  const extent = [\n    XSD.readDecimalString(node.getAttribute('minx')),\n    XSD.readDecimalString(node.getAttribute('miny')),\n    XSD.readDecimalString(node.getAttribute('maxx')),\n    XSD.readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    XSD.readDecimalString(node.getAttribute('resx')),\n    XSD.readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Extent|undefined} Bounding box object.\n */\nWMSCapabilities.readEXGeographicBoundingBox_ = function(node, objectStack) {\n  const geographicBoundingBox = _ol_xml_.pushParseAndPop(\n    {},\n    WMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Capability object.\n */\nWMSCapabilities.readCapability_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CAPABILITY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Service object.\n */\nWMSCapabilities.readService_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.SERVICE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact information object.\n */\nWMSCapabilities.readContactInformation_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_INFORMATION_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact person object.\n */\nWMSCapabilities.readContactPersonPrimary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_PERSON_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Contact address object.\n */\nWMSCapabilities.readContactAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.CONTACT_ADDRESS_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<string>|undefined} Format array.\n */\nWMSCapabilities.readException_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.EXCEPTION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readCapabilityLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nWMSCapabilities.readLayer_ = function(node, objectStack) {\n  const parentLayerObject = /**  @type {Object.<string,*>} */\n        (objectStack[objectStack.length - 1]);\n\n  const layerObject = _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.LAYER_PARSERS_, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable =\n        XSD.readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = XSD.readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = XSD.readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets =\n        XSD.readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth =\n        XSD.readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight =\n        XSD.readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nWMSCapabilities.readDimension_ = function(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': XSD.readBooleanString(\n      node.getAttribute('multipleValues')),\n    'nearestValue': XSD.readBooleanString(\n      node.getAttribute('nearestValue')),\n    'current': XSD.readBooleanString(node.getAttribute('current')),\n    'values': XSD.readString(node)\n  };\n  return dimensionObject;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readFormatOnlineresource_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nWMSCapabilities.readRequest_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.REQUEST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nWMSCapabilities.readDCPType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.DCPTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nWMSCapabilities.readHTTP_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.HTTP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nWMSCapabilities.readOperationType_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.OPERATIONTYPE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nWMSCapabilities.readSizedFormatOnlineresource_ = function(node, objectStack) {\n  const formatOnlineresource =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      XSD.readNonNegativeIntegerString(node.getAttribute('width')),\n      XSD.readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nWMSCapabilities.readAuthorityURL_ = function(node, objectStack) {\n  const authorityObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nWMSCapabilities.readMetadataURL_ = function(node, objectStack) {\n  const metadataObject =\n        WMSCapabilities.readFormatOnlineresource_(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMSCapabilities.readStyle_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WMSCapabilities.STYLE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nWMSCapabilities.readKeywordList_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WMSCapabilities.KEYWORDLIST_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Service': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readService_),\n    'Capability': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapability_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CAPABILITY_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Request': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readRequest_),\n    'Exception': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readException_),\n    'Layer': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readCapabilityLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.SERVICE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'ContactInformation': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactInformation_),\n    'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AccessConstraints': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'LayerLimit': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_INFORMATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPersonPrimary': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactPersonPrimary_),\n    'ContactPosition': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactAddress': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readContactAddress_),\n    'ContactVoiceTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactFacsimileTelephone': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_PERSON_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'ContactPerson': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'ContactOrganization': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.CONTACT_ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'AddressType': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'StateOrProvince': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EXCEPTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'KeywordList': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readKeywordList_),\n    'CRS': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'EX_GeographicBoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readEXGeographicBoundingBox_),\n    'BoundingBox': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readBoundingBox_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDimension_),\n    'Attribution': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readAttribution_),\n    'AuthorityURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readAuthorityURL_),\n    'Identifier': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'MetadataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readMetadataURL_),\n    'DataURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'FeatureListURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readStyle_),\n    'MinScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'MaxScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readLayer_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.ATTRIBUTION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n      XLink.readHref),\n    'LogoURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readSizedFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'westBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'eastBoundLongitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'southBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal),\n      'northBoundLatitude': _ol_xml_.makeObjectPropertySetter(\n        XSD.readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.REQUEST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'GetCapabilities': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetMap': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_),\n    'GetFeatureInfo': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readOperationType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.OPERATIONTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Format': _ol_xml_.makeObjectPropertyPusher(XSD.readString),\n    'DCPType': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readDCPType_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.DCPTYPE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readHTTP_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'Post': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMSCapabilities.readSizedFormatOnlineresource_),\n    'StyleSheetURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_),\n    'StyleURL': _ol_xml_.makeObjectPropertySetter(\n      WMSCapabilities.readFormatOnlineresource_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.FORMAT_ONLINERESOURCE_PARSERS_ =\n    _ol_xml_.makeStructureNS(WMSCapabilities.NAMESPACE_URIS_, {\n      'Format': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n      'OnlineResource': _ol_xml_.makeObjectPropertySetter(\n        XLink.readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMSCapabilities.KEYWORDLIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMSCapabilities.NAMESPACE_URIS_, {\n    'Keyword': _ol_xml_.makeArrayPusher(XSD.readString)\n  });\nexport default WMSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSCapabilities.js\n// module id = 208\n// module chunks = 0 1 2 4 5 8","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.query.windowComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/query/windowComponent.html`;\n  });\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    goog.asserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    goog.asserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .container').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .container').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      goog.asserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/query/windowComponent.js","/**\n * @module ngeo.misc.swipe\n*/\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/swipe.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.wfspermalink\n*/\nconst exports = {};\n\nimport './wfspermalink.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleCircle from 'ol/style/Circle.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\nexports.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: 'https://geomapfish-demo.camptocamp.net/2.2/wsgi/mapserv_proxy',\n    wfsTypes: [\n      {featureType: 'fuel', label: 'display_name'},\n      {featureType: 'osm_scale', label: 'display_name'}\n    ],\n    defaultFeatureNS: 'http://mapserver.gis.umn.edu/mapserver',\n    defaultFeaturePrefix: 'feature'\n  }));\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  const fill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const stroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.featureStyle = new olStyleStyle({\n    fill: fill,\n    image: new olStyleCircle({\n      fill: fill,\n      radius: 5,\n      stroke: stroke\n    }),\n    stroke: stroke\n  });\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/wfspermalink.js","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 68\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14 15 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.WMSTime\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}