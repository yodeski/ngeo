{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/elevation.js","webpack:///./contribs/gmf/src/raster/module.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__WEBPACK_IMPORTED_MODULE_5__xml_js__","__webpack_require__","WMSGetFeatureInfo","opt_options","options","this","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","exports","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","listenerKeys_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","map","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","forEach","olEvents","unlistenByKey","$watchCollection","rootCtrl","children","value","traverseDepthFirst","registerTreeCtrl_","bind","push","listen","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","olCollection","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","name","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","view","getView","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","module","angular","service","gmfBase","requires","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","undefined","originalEl","element","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoBase","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","evt","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","_index","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","$eval","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","gmfMapComponent","gmfRasterModule","constant","MainController","elevationLayers","selectedElevationLayer","olMap","olSourceOSM","olView","resolutions","center","zoom","gmfRasterComponent","gmfRasterRasterService","ngeoMiscDebounce","component_","restrict","elevation","loading","link","attr","ctrl","toggleActive_","ngeoDebounce","gmfRaster","ngeoDebounce_","gmfRaster_","scope_","inViewport_","e","$apply","pointerStop_","getViewport","getRasterSuccess_","getRasterError_","widgetComponent_","bindings","component","WidgetController_","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","attrs","prop","setTarget","manageResizeProp","resizeTransitionProp","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","factory_","func","wait","invokeApply","_len","args","_key","manager","manager_","index_","setFeatures"],"mappings":"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","file":"elevation.59c5cb7a0f1bb208829b.js","sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.raster.RasterService\n*/\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.elevation\n*/\nconst exports = {};\n\nimport './elevation.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfRasterModule from 'gmf/raster/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n  gmfRasterModule.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/elevation.js","/**\n * @module gmf.raster.module\n*/\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterModule', [\n  gmfRasterComponent.name,\n  gmfRasterRasterService.module.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/module.js","/**\n * @module gmf.raster.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    goog.asserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  goog.asserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/raster/widgetComponent.html`\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}