{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/misc/btnComponent.js","webpack:///./node_modules/openlayers/src/ol/interaction/ModifyEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Modify.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/map/module.js","webpack:///./src/map/recenter.js","webpack:///./src/map/resizemap.js","webpack:///./src/map/scaleselector.js","webpack:///./src/draw/Controller.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/Menu.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/interaction/Translate.js","webpack:///./node_modules/openlayers/src/ol/interaction/TranslateEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Translate.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/draw/component.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/interaction/Modify.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./contribs/gmf/examples/drawfeature.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./src/editing/exportfeaturesComponent.js"],"names":["__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__webpack_require__","MultiLineString","coordinates","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","call","this","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","prototype","appendLineString","lineString","flatCoordinates","__WEBPACK_IMPORTED_MODULE_1__array_js__","getFlatCoordinates","slice","push","length","changed","clone","multiLineString","setFlatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getExtent","getRevision","Math","sqrt","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","stride","getsClosestPoint","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","undefined","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","getCoordinates","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getEnds","getLineString","index","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","ends","lineStrings","i","ii","offset","end","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","XY","getType","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","extent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","node","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","__WEBPACK_IMPORTED_MODULE_9__math_js__","MultiPoint","appendPoint","point","multiPoint","j","squaredDistance","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","points","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","MultiPolygon","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","Array","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getEndss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","endss","polygons","jj","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","olBase","olArray","exports","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","inherits","findGroupByLayerNodeName","themes","name","theme","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","getUid","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","type","gmfLayerWMTS","googAsserts","assert","url","createWMTSLayerFromCapabilitites","then","bind","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","data","promises","background_layers","map","itemType","reverse","all","collection","filter","l","olCollection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","window","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","module","angular","ngeoMapLayerHelper","value","service","requires","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","properties","state_","$watch","newVal","oldVal","$eval","goog","asserts","mapExpr","parent","$parent","$on","indexOf","splice","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","olEvents","listen","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","getLayers","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeoBase","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","XMLSerializer","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","features","readFeaturesFromDocument","readFeatures","readFeaturesFromNode","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","options","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","key","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","active","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","context","prefix","defaultPrefix","ft","nodeName","split","pop","count","uri","candidate","ns","parsersNS","featureTypes","isArray","p","parsers","makeArrayPusher","readFeatureElement","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","XYZ","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","Point","LineString","Polygon","RING_PARSERS","LinearRing","getReadOptions","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","olSourceImageWMS","serverType","crossOrigin","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","result","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","styles","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getView","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","source_","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","unshift","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","includes","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoStatemanagerService","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","getProperties","keys","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","parts","getCoords_","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","olGeomPoint","olGeomMultiPoint","olGeomLineString","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","navigator","userAgent","hex","rgb","r","g","b","Error","colorZeroPadding","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","olEventsCondition","noModifierKeys","singleClick","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","ol","getImage","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","image","unlistenByKey","ol_Image","ImageWMS","source_Image","attributions","projection","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","getProjection","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","floor","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","round","CHANGE","handleImageChange","getImageLoadFunction","size","getCode","WMSServerType","dpi","CARMENTA_SERVER","QGIS","bbox","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","writeOgcFidFilter_","getTypeName_","featurePrefix","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","clear","VisibilityState","ON","OFF","remove","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","cacheSize","opaque","reprojectionErrorThreshold","tileClass","tileGrid","tileLoadFunction","urls","wrapX","transition","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","tileSize","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","ngeoUtils","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","charAt","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","_index","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","GeometryCollection","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","geometries","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","unlisten","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getGeometries","getGeometriesArray","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","GEOMETRY_COLLECTION","rotate","angle","anchor","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","style","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","getLayer","getFeatureOverlay","styleFunction","olStyleStyle","defaultFunction","ngeoMapFeatureOverlay","init","setMap","setStyle","createFunction","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","makeStructureNS","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","template","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","interaction","assertInstanceof","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","element","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","q_","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","ngeoFeatureOverlayMgr","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","gmfTreeManager_","ngeoWfsPermalink_","gmfUser_","map_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","olStyleStroke","width","radius","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillColor","ngeoFormatFeatureProperties","fillOpacity","fontColor","fontSize","isBox","isCircle","isLabel","pointRadius","showLabel","showMeasure","strokeColor","strokeWidth","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","extend","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","zoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","olFeature","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","class","removeOverlay","ngeoPopover","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","$watchCollection","unregisterMap_","getFeature","registerMap_","oeFeature","view","getGeometry","getSize","fit","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","evt","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","timeout_","container","document","body","append","container_","cache_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","html","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","apply","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","listenerKeys_","initListenerKey_","NOT","OR","directive_","restrict","link","scope","attrs","prop","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","detail","olEventsEvent","factory_","func","wait","invokeApply","timeout","_len","args","_key","manager","manager_","features_","index_","setFeatures","handleFeatureAdd_","handleFeatureRemove_","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","layers_","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","featureIdentifier_","layerIdentifier_","readFeatures_","toRemove","layerFeatures","gmlFeatures","http_","mapViewChangePromise_","ensureSnapInteractionsOnTop","removeInteraction","addInteraction","treeCtrlsUnregister_","unregisterAllTreeCtrl_","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","loadAllItems_","calculateExtent","projCode","getFeatureOptions","xmlSerializer","featureRequestXml","featureRequest","post","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","_Overlay","originalEl","closeEl_","contentEl_","olOverlay","getElement","getMap","popover","contentEl","setTimeout","content","one","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","ngeoFormatFeatureHashStyleType","LINE_STRING","POLYGON","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","imageStyle","strokeStyle","textStyle","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","getRadius","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","asArray","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","readLineStringGeometry_","decodeCoordinates_","olGeomGeometryLayout","readMultiLineStringGeometry_","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","readMultiPolygonGeometry_","multipolygon","setStyleInFeature_","getStyleProperties_","olStyleFill","olStyleText","setStyleProperties_","setProperties","castValue_","numProperties","boolProperties","keyVal","writeLineStringGeometry_","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","shift","dx","dy","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","getInExtent","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","min","closestOnCircle","closestOnSegment","distance","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","segmentData","insert","k","kk","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","getDefaultStyleFunction","condition_","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","ol_Object","getChangeEventType","ACTIVE","updateState_","createDefaultEditing","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","setGeometry","last","sketchLineGeom","getLinearRing","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","addFeatures","createRegularPolygon","opt_sides","opt_angle","atan","createBox","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","TileImage","tilePixelRatio","tileUrlFunction","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","olProjEPSG4326","RADIUS","getFormattedArea","transform","abs","geodesicArea","getFormattedCircleArea","pow","getFormattedLength","c1","c2","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","RECTANGLE","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","delta","getRadiusSquared_","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","circleExtent","intersectsCoordinate","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","olString","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","getShowLabelProperty","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","font_size","optNumber","attrib","assertNumber","getNumber","getOpacityProperty","azimut","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","zIndex","opt_incGeomFunc","incGeomFunc","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","fromString","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","GPX_SERIALIZERS","orderedKeys","makeSequence","hasM","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","handleReadExtensions_","extensionsNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","hexColor","readURI_","baseURI","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","INNER_BOUNDARY_IS_PARSERS_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","tessellate","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","writeCoordinatesTextNode_","dimension","writeDataNode_","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","kml","xmlnsUri","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","rad","acos","olObservable","mapUids_","mapUid","previous","setAt","removeAt","insertAt","current","baseBgLayer","hasUpdates","updatedDimensions","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","toolContext","activePropertyName","btnGroupComponent_","$parse","buttons_","buttonModel","newValue","BtnGroupController","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$apply","$setViewValue","$viewValue","$render","toggleClass","ModifyEventType","Modify","handleDragEvent","handleDragEvent_","primaryAction","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","RBush","snappedToVertex_","changingFeature_","dragSegments_","Collection","VectorEventType","handleSourceAdd_","handleSourceRemove_","addFeature_","CollectionEventType","lastPointerEvent_","MODIFY_SEGMENT_CIRCLE_CENTER_INDEX","MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData_","equals","insertVertex_","dragSegment","setGeometryCoordinates_","update","handled","getInteracting","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared_","vertexSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","getClosestPoint","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","left","newIndex","right","deleted","mapBrowserPointerEvent","registerTool","tool","opt_defaultActivate","entries","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterTool","unregisterGroup","activateTool","deactivateTool","hasActiveTool","ngeoMapBackgroundLayerMgr","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","$element","recenter","attr","selected","selectedIndex","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController_","scalesExpr","scales","zoomLevels","newLength","numberSafeCompareFunction","optionsExpr","getOptions_","$scope_","resolutionChangeKey_","currentScale","currentZoom","handleViewChange_","registerResolutionChangeListener_","dropup","changeZoom","handleResolutionChange_","e","ngeoFeatureHelper","ngeoFeatures","interactions_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","ngeoMiscFeatureHelper","br","component_","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","menuOptions","opt_overlayOptions","olOverlayPositioning","clickOutListenerKey_","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","actions","action","data-name","prepend","cls","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","close","closest","Element","keyPressListenerKey_","feature_","coordinate_","centerCoordinate_","olInteractionModify","centerFeatures_","handleDown_","handleDrag_","handleUp_","handleKeyUp_","olGeomGeometry","getCenterCoordinate_","centerFeature","forEachFeatureAtPixel","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","keyCode","featureListenerKeys_","myFeatures_","vectorSource_","olInteractionTranslate","setState_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","handleGeometryChange_","getGeometryCenterPoint_","TranslateEventType","Translate","handleMoveEvent","handleMoveEvent_","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","elem","getViewport","getHitTolerance","setHitTolerance","oldMap","ngeoMiscColorpickerComponent","handleColorSet_","handleFeatureSet_","newFeature","previousFeature","propName","olObject","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","ngeoDrawController","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","drawFeatureCtrl","$compile","contMsg","ngeoInteractionMeasureArea","fromCircle","ngeoInteractionMeasureLength","otherFeatures_","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","TRUE","interactions","getFeatureCollection_","isRectangle","olStructsRBush","boundingExtent","olCoordinate","olMapBrowserPointerEvent","vectorPoints_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","nextFeature","initializeParams_","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","gmfDrawingModule","gmfMapComponent","ngeoMapModule","ngeoMiscToolActivateMgr","constant","MainController","ngeoToolActivateMgr","olView","olSourceOSM","drawFeatureActive","drawFeatureToolActivate","ngeoMiscToolActivate","pointerMoveActive","pointerMoveToolActivate","un","tooltip","trigger","gmfDrawingDrawFeatureComponent","gmfDrawingFeatureStyleComponent","ngeoEditingExportfeaturesComponent","ngeoMiscBtnComponent","ngeoDrawComponent","drawActive","drawToolActivate","mapSelectActive","longPressTimeout_","mapSelectToolActivate","ngeoToolActivateMgr_","selectedFeature","selectedFeatures","modify_","ngeoInteractionModify","menu_","modifyToolActivate","translate_","ngeoInteractionTranslate","rotate_","ngeoInteractionRotate","initializeInteractions_","rotateToolActivate","translateToolActivate","listSelectionInProgress_","handleActiveChange_","unregisterInteractions_","registerInteractions_","handleMapSelectActiveChange_","nameProperty","drawUid","otherUid","toolMgr","handleTranslateEnd_","handleRotateEnd_","selectFeatureFromList","getFeaturesArray","clearFeatures","confirm","mapDiv","assertElement","handleMapClick_","handleMapContextMenu_","handleMapTouchStart_","handleMapTouchEnd_","ret","getEventPixel","ngeoMenu","handleMenuActionClick_","element_","items_","$menu","aria-labelledby","$item","handleMenuItemClick_","formats_","handleElementClick_","handleDestroy_","removeClass","parentElement","off"],"mappings":"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","file":"drawfeature.754fb17c4030bd81d2f0.js","sourcesContent":["/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 68\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14 15 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 125\n// module chunks = 0 1 2 3 4 5 6 7 8 12 13 14","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 138\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 139\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.MeasureBaseOptions\n*/\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ngeo.map.BackgroundLayerMgr\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function() {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? map.getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      map.getLayers().setAt(0, layer);\n    } else {\n      map.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    map.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', []);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/BackgroundLayerMgr.js","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ngeo.misc.ToolActivate\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivate.js","/**\n * @module ngeo.misc.btnComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ol/interaction/ModifyEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature modification start\n   * @event ol.interaction.Modify.Event#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ol.interaction.Modify.Event#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/ModifyEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport ModifyEventType from '../interaction/ModifyEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ol.interaction.Modify.Event\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Modify.handleDownEvent_,\n    handleDragEvent: Modify.handleDragEvent_,\n    handleEvent: Modify.handleEvent,\n    handleUpEvent: Modify.handleUpEvent_\n  });\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.primaryAction;\n\n\n  /**\n   * @private\n   * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return _ol_events_condition_.altKeyOnly(mapBrowserEvent) &&\n      _ol_events_condition_.singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {ol.EventsConditionType}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : _ol_events_condition_.always;\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      Modify.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  _ol_events_.listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {ol.MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * @define {number} The segment index assigned to a circle's center when\n * breaking up a cicrle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX = 0;\n\n/**\n * @define {number} The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n */\nModify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  _ol_events_.listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  _ol_events_.unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.source.Vector.Event} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {ol.Feature} */ (evt.element));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {ol.Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  let coordinates, i, ii, segmentData;\n  for (i = 0, ii = points.length; i < ii; ++i) {\n    coordinates = points[i];\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  let i, ii, segment, segmentData;\n  for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    segment = coordinates.slice(i, i + 2);\n    segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = lines.length; j < jj; ++j) {\n    coordinates = lines[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, k, kk, rings, segment, segmentData;\n  for (k = 0, kk = polygons.length; k < kk; ++k) {\n    rings = polygons[k];\n    for (j = 0, jj = rings.length; j < jj; ++j) {\n      coordinates = rings[j];\n      for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segment = coordinates.slice(i, i + 2);\n        segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link ol.interaction.Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {ol.Feature} feature Feature.\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(\n      this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nModify.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDownEvent_ = function(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(Modify.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = Modify.closestOnSegmentData_(pixelCoordinate, segmentDataMatch);\n        if (_ol_coordinate_.equals(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (_ol_coordinate_.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (_ol_coordinate_.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleDragEvent_ = function(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(_ol_coordinate_.distance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Modify}\n * @private\n */\nModify.handleUpEvent_ = function(evt) {\n  let segmentData;\n  let geometry;\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    segmentData = this.dragSegments_[i][0];\n    geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment),\n        segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Modify}\n * @api\n */\nModify.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, a) -\n        Modify.pointDistanceToSegmentDataSquared_(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = Modify.closestOnSegmentData_(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = _ol_coordinate_.distance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n        const squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((_ol_coordinate_.equals(closestSegment[0], segment[0]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[1]) ||\n              (_ol_coordinate_.equals(closestSegment[0], segment[1]) &&\n              _ol_coordinate_.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nModify.pointDistanceToSegmentDataSquared_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {ol.geom.Circle} */ (geometry);\n\n    if (segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            _ol_coordinate_.squaredDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return _ol_coordinate_.squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n};\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {ol.Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {ol.ModifySegmentDataType} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {ol.Coordinate} The point closest to the specified line segment.\n */\nModify.closestOnSegmentData_ = function(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === Modify.MODIFY_SEGMENT_CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return _ol_coordinate_.closestOnSegment(pointCoordinates, segmentData.segment);\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} segmentData Segment data.\n * @param {ol.Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {ol.ModifySegmentDataType} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment),\n    newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new Modify.Event(\n      ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {ol.ModifySegmentDataType} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nModify.getDefaultStyleFunction = function() {\n  const style = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Modify} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.ModifyEvent}\n * @param {ol.interaction.ModifyEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features modified.\n * @param {ol.MapBrowserPointerEvent} mapBrowserPointerEvent Associated\n *     {@link ol.MapBrowserPointerEvent}.\n */\nModify.Event = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link ol.MapBrowserEvent}.\n   * @type {ol.MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\ninherits(Modify.Event, Event);\nexport default Modify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Modify.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.ToolActivateMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/ToolActivateMgr.js","/**\n * @module ngeo.map.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/module.js","/**\n * @module ngeo.map.recenter\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/recenter.js","/**\n * @module ngeo.map.resizemap\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/resizemap.js","/**\n * @module ngeo.map.scaleselector\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/map/scaleselector.html`;\n  });\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optionnal. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nexports.directive_ = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', exports.directive_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.ScaleselectorController_ = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  goog.asserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = exports.ScaleselectorController_.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nexports.ScaleselectorController_.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nexports.ScaleselectorController_.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nexports.ScaleselectorController_.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nexports.ScaleselectorController_.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nexports.ScaleselectorController_.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController',\n  exports.ScaleselectorController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/scaleselector.js","/**\n * @module ngeo.draw.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        }, this);\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  goog.asserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/Controller.js","/**\n * @module ngeo.interaction.MeasureLength\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.interaction.MeasureArea\n*/\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the polygon.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click starting point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = goog.asserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  goog.asserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureArea.js","/**\n * @module ngeo.misc.colorpickerComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module ngeo.Menu\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  goog.asserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  goog.asserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Menu.js","/**\n * @module ngeo.interaction.Rotate\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(this.addFeature_, this);\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Rotate.js","/**\n * @module ngeo.interaction.Translate\n*/\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  goog.asserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  goog.asserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  goog.asserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olBase.extent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  goog.asserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Translate.js","/**\n * @module ol/interaction/TranslateEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature translation start.\n   * @event ol.interaction.Translate.Event#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event ol.interaction.Translate.Event#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event ol.interaction.Translate.Event#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/TranslateEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport BaseObject from '../Object.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport TranslateEventType from '../interaction/TranslateEventType.js';\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Translate.Event\n * @param {olx.interaction.TranslateOptions=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: Translate.handleDownEvent_,\n    handleDragEvent: Translate.handleDragEvent_,\n    handleMoveEvent: Translate.handleMoveEvent_,\n    handleUpEvent: Translate.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(ol.layer.Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(ol.layer.Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDownEvent_ = function(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleUpEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    Translate.handleMoveEvent_.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleDragEvent_ = function(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new Translate.Event(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @this {ol.interaction.Translate}\n * @private\n */\nTranslate.handleMoveEvent_ = function(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n};\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {ol.Pixel} pixel Pixel coordinate to test for intersection.\n * @param {ol.PluggableMap} map Map to test the intersection on.\n * @return {ol.Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {ol.PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Translate} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.interaction.TranslateEvent}\n * @param {ol.interaction.TranslateEventType} type Type.\n * @param {ol.Collection.<ol.Feature>} features The features translated.\n * @param {ol.Coordinate} coordinate The event coordinate.\n */\nTranslate.Event = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {ol.Collection.<ol.Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {ol.Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\ninherits(Translate.Event, Event);\nexport default Translate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Translate.js\n// module id = null\n// module chunks = ","/**\n * @module gmf.drawing.featureStyleComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return goog.asserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return goog.asserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return goog.asserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  goog.asserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.draw.component\n*/\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/component.js","/**\n * @module ngeo.draw.point\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/point.js","/**\n * @module ngeo.draw.rectangle\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/rectangle.js","/**\n * @module ngeo.draw.text\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/text.js","/**\n * @module ngeo.measure.area\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/area.js","/**\n * @module ngeo.measure.azimut\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = olGeomPolygon.fromCircle(circle, 64);\n          event.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/azimut.js","/**\n * @module ngeo.measure.length\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br/>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/measure/length.js","/**\n * @module ngeo.interaction.Modify\n*/\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  goog.asserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    }, this);\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    }, this);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  }, this);\n\n  if (active && map) {\n    this.features_.forEach(this.addFeature_, this);\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(this.removeFeature_, this);\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  goog.asserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Modify.js","/**\n * @module ngeo.interaction.ModifyCircle\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olCoordinate from 'ol/coordinate.js';\nimport olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      exports.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(this.addFeature_, this);\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry =\n      /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = olGeomPolygon.fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultStyleFunction = function() {\n  const style = olStyleStyle.createDefaultEditing();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyCircle.js","/**\n * @module ngeo.interaction.ModifyRectangle\n*/\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  // Get the style for the box and the points\n  const style = options.style ? options.style : olInteractionModify.getDefaultStyleFunction();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach(this.addFeature_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifystart'), this.features_, evt));\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    this.dispatchEvent(new olInteractionModify.Event(\n      /** @type {ol.interaction.ModifyEventType} */ ('modifyend'), this.features_, evt));\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/ModifyRectangle.js","/**\n * @module gmfapp.drawfeature\n*/\nconst exports = {};\n\nimport './drawfeature.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me when gmf.Theme and other dependencies are in a module\n  gmfDrawingModule.name,\n  gmfMapComponent.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n *     manager\n * @constructor\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper, ngeoFeatures,\n  ngeoToolActivateMgr, ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  const view = new olView({\n    center: [0, 0],\n    zoom: 3\n  });\n\n  ngeoFeatureHelper.setProjection(goog.asserts.assert(view.getProjection()));\n\n  const featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  featureOverlay.setFeatures(ngeoFeatures);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = true;\n\n  const drawFeatureToolActivate = new ngeoMiscToolActivate(\n    this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', drawFeatureToolActivate, true);\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pointerMoveActive = false;\n\n  const pointerMoveToolActivate = new ngeoMiscToolActivate(\n    this, 'pointerMoveActive');\n  ngeoToolActivateMgr.registerTool(\n    'mapTools', pointerMoveToolActivate, false);\n\n  $scope.$watch(\n    () => this.pointerMoveActive,\n    (newVal) => {\n      if (newVal) {\n        this.map.on('pointermove', this.handleMapPointerMove_, this);\n      } else {\n        this.map.un('pointermove', this.handleMapPointerMove_, this);\n        $('#pointermove-feature').html('');\n      }\n    }\n  );\n\n  // initialize tooltips\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body',\n    trigger: 'hover'\n  });\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapPointerMove_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  $('#pointermove-feature').html(\n    (feature) ? feature.get(ngeoFormatFeatureProperties.NAME) : 'None'\n  );\n\n  this.scope_.$apply();\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/drawfeature.js","/**\n * @module gmf.drawing.module\n*/\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/module.js","/**\n * @module gmf.drawing.drawFeatureComponent\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/drawFeatureComponent.html`\n  };\n};\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.addInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach(function(interaction) {\n    this.map.removeInteraction(interaction);\n  }, this);\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  goog.asserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      goog.asserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/drawFeatureComponent.js","/**\n * @module ngeo.editing.exportfeaturesComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nngeoBase.module.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    }, this);\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/editing/exportfeaturesComponent.js"],"sourceRoot":""}