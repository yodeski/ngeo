{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./src/filters.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/contextualdata.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__WEBPACK_IMPORTED_MODULE_5__xml_js__","__webpack_require__","WMSGetFeatureInfo","opt_options","options","this","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","exports","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","listenerKeys_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","map","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","forEach","olEvents","unlistenByKey","$watchCollection","rootCtrl","children","value","traverseDepthFirst","registerTreeCtrl_","bind","push","listen","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","olCollection","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","name","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","view","getView","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","module","angular","service","gmfBase","requires","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","undefined","originalEl","element","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoBase","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","evt","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","Infinity","sign","abs","nb_decimal","log","factor","pow","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","opt_template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","olString","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","Date","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","_index","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","$eval","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","start","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","gmfContextualdataModule","gmfMapComponent","constant","MainController","olMap","olSourceOSM","olView","resolutions","center","zoom","onRasterData","elelvation_diff","_component","gmfContextualdataComponent","olObj","gmfRasterRasterService","restrict","link","attrs","$compile","gmfRaster","overlay_","$compile_","$scope_","gmfRaster_","on","hidePopover","preparePopover_","mapDiv","getTargetElement","assertElement","handleMapContextMenu_","event","$apply","getEventPixel","setContent_","preventDefault","showPopover","setPosition","$new","content_","mapProjection","proj","coord","transform","getRasterSuccess","assign","container","document","createElement","classList","css","arrow","stopEvent","autoPan","autoPanAnimation","duration","positioning","addOverlay","contentDirective_","gmfContextualdatacontentTemplateUrl","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","EventType","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","factory","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","concat","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","prop","setTarget","manageResizeProp","resizeTransitionProp","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","factory_","func","wait","invokeApply","_len","args","_key","manager","manager_","index_","setFeatures"],"mappings":"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","file":"contextualdata.95b68c3b57f009e5114d.js","sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module gmf.raster.RasterService\n*/\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.contextualdata\n*/\nconst exports = {};\n\nimport './contextualdata.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfContextualdataModule.name,\n  gmfMapComponent.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.module.value(\n  'gmfContextualdatacontentTemplateUrl',\n  'partials/contextualdata.html');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate The coordinate for the right-clicked\n *     point.\n * @param {Object} data The data received from the raster service.\n * @return {Object} The additional data to add to the scope for the\n *     contextualdata popover.\n */\nexports.MainController.prototype.onRasterData = function(coordinate, data) {\n  return {\n    'elelvation_diff': data['srtm'] - data['aster']\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/contextualdata.js","/**\n * @module gmf.contextualdata.module\n*/\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/contextualdata/module.js","/**\n * @module gmf.contextualdata.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  goog.asserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n    this.overlay_.setPosition(coordinate);\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/contextualdata/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}