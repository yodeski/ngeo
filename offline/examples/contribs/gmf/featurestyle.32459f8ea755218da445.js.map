{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/GeometryType.js","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/filters.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/download/service.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/featurestyle.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__WEBPACK_IMPORTED_MODULE_5__xml_js__","__webpack_require__","WMSGetFeatureInfo","opt_options","options","this","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","exports","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","listenerKeys_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","map","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","forEach","olEvents","unlistenByKey","$watchCollection","rootCtrl","children","value","traverseDepthFirst","registerTreeCtrl_","bind","push","listen","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","olCollection","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","name","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","view","getView","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","module","angular","service","gmfBase","requires","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","undefined","originalEl","element","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","googAsserts","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoBase","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","evt","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","setCoordinates","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","wrapX","getDefaultStyleFunction","updateWhileInteracting","geometryName_","condition_","condition","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","events","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","ol","Style","createDefaultEditing","resolution","event","originalEvent","EventType","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","Date","now","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","start","setGeometryName","setGeometry","dispatchEvent","last","sketchLineGeom","ring","getLinearRing","getLayout","done","pop","removeLastPoint","splice","sketchFeature","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","getSource","sketchFeatures","overlaySource","addFeatures","getActive","createRegularPolygon","opt_sides","opt_angle","center","angle","atan","createBox","ol_extent","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","transition","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","olInteractionInteraction","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","olLayerVector","olSourceVector","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","SPHERE_WGS84","olProjEPSG4326","RADIUS","getFormattedArea","format","transform","abs","geodesicArea","getFormattedCircleArea","PI","pow","getFormattedLength","c1","c2","haversineDistance","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","addOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","callback","getTooltipElement","RECTANGLE","TEXT","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","opt_layout","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","layout","closestPointXY","closestPoint","minSquaredDistance","delta","containsXY","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","intersectsExtent","circleExtent","intersectsCoordinate","setCenter","setLayout","changed","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setFlatCoordinatesInternal","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","olString","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","olExtent","$injector","$filter_","decimals_","has","get","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","assertFunction","projection_","download_","setProjection","opt_select","getStyle","supportsVertex_","getVertexStyle","getHaloStyle_","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","getRGBAColorProperty","textLabelValues","getMeasure","getNameProperty","textLabelValue","createTextStyle_","getSizeProperty","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","azimut","AZIMUT","line","getRadiusLine","ngeoInteractionMeasure","getLastCoordinate","offsetX","cos","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","console","zIndex","opt_incGeomFunc","incGeomFunc","olStyleRegularShape","innerMultiCoordinates","multiCoordinates","supported","haloSize","getFilteredFeatureValues","getColorProperty","assertString","COLOR","fromString","NAME","assertBoolean","export","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","export_","olFormatKML","fileName","opt_mimeType","mimeType","clones","writeOptions","dataProjection","featureProjection","rotation","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","args","_toConsumableArray","panMapToFeature","opt_panDuration","panDuration","assertArray","mapCenter","featureCenter","getCoordinateAt","getInteriorPoint","animate","duration","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","__WEBPACK_IMPORTED_MODULE_11__xml_js__","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","defaultDataProjection","__WEBPACK_IMPORTED_MODULE_10__proj_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","readString","RTE_PARSERS","cmt","desc","src","link","parseLink","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","time","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","createElementNS","namespaceURI","GPX_SERIALIZERS","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","setAttributeNS","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","findStyle_","styleValue","readColor_","getAllTextContent","exec","hexColor","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","test","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","description","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","doc","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","writeCoordinatesTextNode_","dimension","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","getGeometries","GEOMETRY_NODE_FACTORY_","getPoints","POINT_NODE_FACTORY_","LINE_STRING_NODE_FACTORY_","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","factory_","opt_fileType","fileType","isSafari","blob","Blob","saveAs","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","olGeomGeometryCollection","olProjProjection","formatLength","formatAzimut","output","getFormattedAzimut","getAzimut","coords","rad","acos","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","olFunctions","olInteractionPointer","started_","sketchLayer_","olInteractionDraw","finishDrawing_","mapBrowserEvent","sketchPointGeom","olGeomCircle","getLength","FALSE","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","DOCUMENT","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","toPrecision","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","_index","attrs","component_","ngeoColorpickerTemplateUrl","restrict","colors","DEFAULT_COLORS","$scope","$element","$attrs","setColor","ngeoMiscColorpickerComponent","ngeoMiscFeatureHelper","ngeoFeatureHelper","scope_","featureHelper_","handleColorSet_","featureListenerKeys_","handleFeatureSet_","newFeature","previousFeature","propName","olObject","handleGeometryChange_","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","$apply","isRoot","nodeExpr","state_","oldVal","$eval","mapExpr","$parent","$on","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","ogcLayer","err","return","supportsWFS","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","gmfDrawingFeatureStyleComponent","gmfMapComponent","constant","MainController","pointProperties","textProperties","lineProperties","poly1Properties","poly2Properties","rectProperties","fromExtent","circleProperties","fromCircle","olView","zoom","olMap","olSourceOSM","selectedFeature","on","handleMapSingleClick_","forEachFeatureAtPixel","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","defaultPrefix","ft","count","uri","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","readPoint","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","removeAll","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","readBox_","BOX_PARSERS_","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","rgb","r","g","Error","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","olEventsCondition","singleClick","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","version","compareVersions","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","overflow_","overflow","stroke_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","featureUidToGroupIndex_","groups_","layer_","styleFunction_","updateWhileAnimating","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","defineProperty","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","f","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","addListenerKey","handleNgeoFeaturesChange_","clearListenerKey","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","prop","setTarget","manageResizeProp","resizeTransitionProp","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","addTheme","getThemeName","isLoading","$emit","gmfLayertreeTreeManager","_Event","detail","olEventsEvent","func","wait","invokeApply","_len","_key","manager","manager_","index_","setFeatures"],"mappings":"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","file":"featurestyle.32459f8ea755218da445.js","sourcesContent":["/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n*/\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ?\n    options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\nexports.SPHERE_WGS84 = new olSphere(olProjEPSG4326.RADIUS);\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(\n  polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (\n    polygon.clone().transform(projection, 'EPSG:4326'));\n  const coordinates = geom.getLinearRing(0).getCoordinates();\n  const area = Math.abs(exports.SPHERE_WGS84.geodesicArea(coordinates));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(\n  circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection,\n  precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += exports.SPHERE_WGS84.haversineDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(\n  point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.GeometryType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/GeometryType.js","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 125\n// module chunks = 0 1 2 3 4 5 6 7 8 12 13 14","/**\n * @module ngeo.filters\n*/\nconst exports = {};\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nngeoBase.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoScalify', ngeoBase.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nngeoBase.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoNumber', ngeoBase.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nngeoBase.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nngeoBase.module.filter('ngeoUnitPrefix', ngeoBase.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nngeoBase.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', ngeoBase.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nngeoBase.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoDMSCoordinates', ngeoBase.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nngeoBase.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nngeoBase.module.filter('ngeoTrustHtml', ngeoBase.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filters.js","/**\n * @module ngeo.misc.FeatureHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilters from 'ngeo/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    goog.asserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return goog.asserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return goog.asserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            offsetY: -(8 / 2 + 4),\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  goog.asserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  goog.asserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  goog.asserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = goog.asserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  goog.asserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return goog.asserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      goog.asserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  goog.asserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  goog.asserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    goog.asserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoFeatureHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/FeatureHelper.js","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 138\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 139\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ngeo.download.service\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/download/service.js","/**\n * @module ngeo.interaction.MeasureAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, opt_options) {\n\n  const options = opt_options || {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureAzimut.js","/**\n * @module ngeo.interaction.MeasureBaseOptions\n*/\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.interaction.DrawAzimut\n*/\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style !== undefined ?\n      options.style : olInteractionDraw.getDefaultStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return olInteractionPointer.handleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), sketchFeature));\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/DrawAzimut.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.misc.colorpickerComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/misc/colorpickerComponent.html`;\n  });\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/colorpickerComponent.js","/**\n * @module gmf.drawing.featureStyleComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/drawing/featureStyleComponent.html`\n  };\n};\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          olObject.getChangeEventType(propName),\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    goog.asserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return goog.asserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return goog.asserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return goog.asserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return goog.asserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  goog.asserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/drawing/featureStyleComponent.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.featurestyle\n*/\nconst exports = {};\n\nimport './featurestyle.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfDrawingFeatureStyleComponent.name,\n  gmfMapComponent.name,\n  ngeoBase.module.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.module.value('ngeoMeasureDecimals', 2);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @ngInject\n */\nexports.MainController = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  // create features\n  const features = [];\n\n  const pointProperties = {\n    geometry: new olGeomPoint([-8458215, 6672646])\n  };\n  pointProperties[ngeoFormatFeatureProperties.COLOR] = '#009D57';\n  pointProperties[ngeoFormatFeatureProperties.NAME] = 'Point1';\n  pointProperties[ngeoFormatFeatureProperties.SIZE] = '6';\n  features.push(new olFeature(pointProperties));\n\n  const textProperties = {\n    geometry: new olGeomPoint([-8007848, 6209744])\n  };\n  textProperties[ngeoFormatFeatureProperties.ANGLE] = '0';\n  textProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  textProperties[ngeoFormatFeatureProperties.IS_TEXT] = true;\n  textProperties[ngeoFormatFeatureProperties.NAME] = 'Text 1';\n  textProperties[ngeoFormatFeatureProperties.SIZE] = '16';\n  textProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(textProperties));\n\n  const lineProperties = {\n    geometry: new olGeomLineString([\n      [-8321240, 6523441],\n      [-8103547, 6726458],\n      [-8091318, 6408480],\n      [-7973910, 6631065]\n    ])\n  };\n  lineProperties[ngeoFormatFeatureProperties.COLOR] = '#0BA9CC';\n  lineProperties[ngeoFormatFeatureProperties.NAME] = 'LineString 1';\n  lineProperties[ngeoFormatFeatureProperties.STROKE] = '4';\n  features.push(new olFeature(lineProperties));\n\n  const poly1Properties = {\n    geometry: new olGeomPolygon([\n      [\n        [-8512027, 6359560],\n        [-8531595, 6080718],\n        [-8267428, 6031798],\n        [-8238077, 6247045],\n        [-8512027, 6359560]\n      ]\n    ])\n  };\n  poly1Properties[ngeoFormatFeatureProperties.COLOR] = '#4186F0';\n  poly1Properties[ngeoFormatFeatureProperties.NAME] = 'Polygon 1';\n  poly1Properties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  poly1Properties[ngeoFormatFeatureProperties.SHOW_MEASURE] = true;\n  poly1Properties[ngeoFormatFeatureProperties.STROKE] = '1';\n  features.push(new olFeature(poly1Properties));\n\n  const poly2Properties = {\n    geometry: new olGeomPolygon([\n      [\n        [-7952508, 6096617],\n        [-8051570, 5959642],\n        [-7848554, 5926621],\n        [-7754383, 6025683],\n        [-7952508, 6096617]\n      ]\n    ])\n  };\n  poly2Properties[ngeoFormatFeatureProperties.COLOR] = '#CCCCCC';\n  poly2Properties[ngeoFormatFeatureProperties.NAME] = 'Polygon 2';\n  poly2Properties[ngeoFormatFeatureProperties.OPACITY] = '1';\n  poly2Properties[ngeoFormatFeatureProperties.STROKE] = '3';\n  features.push(new olFeature(poly2Properties));\n\n  const rectProperties = {\n    geometry: olGeomPolygon.fromExtent([-7874848, 6496535, -7730535, 6384020])\n  };\n  rectProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  rectProperties[ngeoFormatFeatureProperties.IS_RECTANGLE] = true;\n  rectProperties[ngeoFormatFeatureProperties.NAME] = 'Rectangle 1';\n  rectProperties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  rectProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(rectProperties));\n\n  const circleProperties = {\n    geometry: olGeomPolygon.fromCircle(\n      new olGeomCircle([-7691093, 6166327], 35000), 64)\n  };\n  circleProperties[ngeoFormatFeatureProperties.COLOR] = '#000000';\n  circleProperties[ngeoFormatFeatureProperties.IS_CIRCLE] = true;\n  circleProperties[ngeoFormatFeatureProperties.NAME] = 'Circle 1';\n  circleProperties[ngeoFormatFeatureProperties.OPACITY] = '0.5';\n  circleProperties[ngeoFormatFeatureProperties.STROKE] = '2';\n  features.push(new olFeature(circleProperties));\n\n  const view = new olView({\n    center: [-8174482, 6288627],\n    zoom: 6\n  });\n\n  ngeoFeatureHelper.setProjection(goog.asserts.assert(view.getProjection()));\n\n  // set style\n  features.forEach((feature) => {\n    ngeoFeatureHelper.setStyle(feature);\n  }, this);\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      }),\n      new olLayerVector({\n        source: new olSourceVector({\n          wrapX: false,\n          features: features\n        })\n      })\n    ],\n    view: view\n  });\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  this.map.on('singleclick', this.handleMapSingleClick_, this);\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt MapBrowser event\n * @private\n */\nexports.MainController.prototype.handleMapSingleClick_ = function(evt) {\n  const pixel = evt.pixel;\n\n  const feature = this.map.forEachFeatureAtPixel(pixel, feature => feature);\n\n  if (this.selectedFeature) {\n    this.featureHelper_.setStyle(this.selectedFeature);\n  }\n\n  if (feature) {\n    if (this.selectedFeature !== feature) {\n      this.selectedFeature = feature;\n      this.featureHelper_.setStyle(feature, true);\n    }\n  } else {\n    this.selectedFeature = null;\n  }\n\n  this.scope_.$apply();\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/featurestyle.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 68\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14 15 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n*/\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}