{"version":3,"sources":["webpack:///./src/datasource/DataSources.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/GPX.js","webpack:///./node_modules/openlayers/src/ol/format/KML.js","webpack:///./src/datasource/File.js","webpack:///./src/message/popupComponent.js","webpack:///./src/misc/Time.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/message/Popup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/layertree/component.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./src/utils/File.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./src/datasource/FileGroup.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/misc/syncArrays.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./contribs/gmf/src/disclaimer/module.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./src/message/Disclaimer.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./contribs/gmf/examples/layertreeadd.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./node_modules/openlayers/src/ol/geom/GeometryCollection.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js"],"names":["__webpack_require__","exports","_classCallCheck","this","collection_","olCollection","map_","listenerKeys_","olEvents","listen","handleDataSourcesAdd_","_createClass","key","value","map","view","getView","push","handleViewResolutionChange_","resolution","getResolution","googAsserts","assertNumber","syncDataSourcesToResolution_","olObservable","unByKey","evt","target","assertInstanceof","olView","_this","forEach","dataSource","syncDataSourceToResolution_","supportsDynamicInRange","maxResolution","minResolution","inRange","undefined","event","element","ngeoDatasourceDataSource","set","unbindMap_","bindMap_","get","module","angular","service","ngeoBase","requires","name","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","call","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","prototype","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","features","childNodes","length","i","ii","layer","nodeType","Node","ELEMENT_NODE","context","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","feature","writeFeaturesNode","writeGeometryNode","geometry","__webpack_exports__","olBase","$http","$q","$rootScope","$timeout","gmfThemes","gmfTreeManager","http_","q_","rootScope_","timeout_","gmfThemes_","gmfTreeManager_","cache_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","goog","asserts","assert","item","uid","active","interaction","removeInteraction","addInteraction","setMap","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","unlistenByKey","$watchCollection","rootCtrl","children","traverseDepthFirst","registerTreeCtrl_","bind","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","geometryName","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","clear","resolve","loadAllItems_","size","getSize","extent","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","srsName","outputFormat","bbox","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","timeout","promise","response","data","extend","cancel","gmfBase","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","directive_","scope","manageResize","resizeTransition","controller","bindToController","templateUrl","baseModuleTemplateUrl","directive","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","end","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","apply","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","ngeoStatemanagerService","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","features_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","addFeature","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","removeFeature","getFeatures_","getFeatures","handleFeatureAdd_","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handleFeatureRemove_","handlingDownUpSequence","updateFeature_","opt_unlisten","unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","slice","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","ol","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","proj4","defs","register","setExtent","Proj","projections","add","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_11__xml_js__","GPX","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","defaultDataProjection","__WEBPACK_IMPORTED_MODULE_10__proj_js__","readExtensions_","readExtensions","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","readString","RTE_PARSERS","cmt","desc","src","link","parseLink","number","readNonNegativeInteger","extensions","parseExtensions","rtept","values","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","readDecimal","time","readDateTime","TRK_PARSERS","trkseg","parseNode","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","makeChildAppender","writeStringTextNode","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeNonNegativeIntegerTextNode","makeArraySerializer","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","getLayout","pushSerializeAndPop","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","makeSimpleNodeFactory","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","writeDecimalTextNode","writeDateTimeTextNode","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","opt_nodeName","nodeName","parentNode","createElementNS","namespaceURI","GPX_SERIALIZERS","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","orderedKeys","makeSequence","OBJECT_PROPERTY_NODE_FACTORY","getLineStrings","getAttribute","hasZ","hasM","href","layout","applyLayoutOptions_","__WEBPACK_IMPORTED_MODULE_7__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_1__Feature_js__","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_Point_js__","setAttributeNS","__WEBPACK_IMPORTED_MODULE_6__geom_GeometryLayout_js__","XYZM","XYM","handleReadExtensions_","extensionsNode","readFeatureFromNode","__WEBPACK_IMPORTED_MODULE_2__array_js__","featureReader","readProjection","adaptOptions","gpx","__WEBPACK_IMPORTED_MODULE_26__xml_js__","KML","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","DEFAULT_STYLE_ARRAY_","createStyleDefaults_","__WEBPACK_IMPORTED_MODULE_18__proj_js__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS_","NAMESPACE_URIS_","SCHEMA_LOCATION_","DEFAULT_COLOR_","DEFAULT_FILL_STYLE_","__WEBPACK_IMPORTED_MODULE_19__style_Fill_js__","DEFAULT_IMAGE_STYLE_ANCHOR_","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_","__WEBPACK_IMPORTED_MODULE_21__style_IconAnchorUnits_js__","PIXELS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_","DEFAULT_IMAGE_STYLE_SIZE_","DEFAULT_IMAGE_STYLE_SRC_","DEFAULT_IMAGE_SCALE_MULTIPLIER_","DEFAULT_IMAGE_STYLE_","__WEBPACK_IMPORTED_MODULE_20__style_Icon_js__","anchor","anchorOrigin","__WEBPACK_IMPORTED_MODULE_22__style_IconOrigin_js__","BOTTOM_LEFT","anchorXUnits","anchorYUnits","rotation","scale","DEFAULT_NO_IMAGE_STYLE_","DEFAULT_STROKE_STYLE_","__WEBPACK_IMPORTED_MODULE_23__style_Stroke_js__","DEFAULT_TEXT_STROKE_STYLE_","DEFAULT_TEXT_STYLE_","__WEBPACK_IMPORTED_MODULE_25__style_Text_js__","DEFAULT_STYLE_","__WEBPACK_IMPORTED_MODULE_24__style_Style_js__","zIndex","ICON_ANCHOR_UNITS_MAP_","fraction","FRACTION","pixels","insetPixels","createNameStyleFunction_","foundStyle","textOffset","textAlign","imageSize","getImageSize","imageScale","getScale","foundText","setFont","setScale","setFill","setStroke","setText","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction_","styleUrl","sharedStyles","nameStyle","drawName","__WEBPACK_IMPORTED_MODULE_10__geom_GeometryType_js__","concat","findStyle_","styleValue","readColor_","s","getAllTextContent","m","exec","hexColor","parseInt","substr","readFlatCoordinates_","re","z","readURI_","trim","baseURI","location","URL","readVec2_","xunits","yunits","origin","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","readScale_","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","readStyleMapValue_","STYLE_MAP_PARSERS_","IconStyleParser_","object","ICON_STYLE_PARSERS_","styleObject","IconObject","drawIcon","hotSpot","w","h","heading","__WEBPACK_IMPORTED_MODULE_17__math_js__","offsetOrigin","LabelStyleParser_","LABEL_STYLE_PARSERS_","LineStyleParser_","LINE_STYLE_PARSERS_","PolyStyleParser_","POLY_STYLE_PARSERS_","outline","readFlatLinearRing_","FLAT_LINEAR_RING_PARSERS_","gxCoordParser_","readGxMultiTrack_","GX_MULTITRACK_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_MultiLineString_js__","setLineStrings","readGxTrack_","gxTrackObject","whens","GX_TRACK_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_LineString_js__","__WEBPACK_IMPORTED_MODULE_9__geom_GeometryLayout_js__","readIcon_","iconObject","ICON_PARSERS_","readFlatCoordinatesFromNode_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLineString_","EXTRUDE_AND_ALTITUDE_MODE_PARSERS_","readLinearRing_","__WEBPACK_IMPORTED_MODULE_16__geom_Polygon_js__","readMultiGeometry_","MULTI_GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryCollection_js__","multiGeometry","homogeneous","__WEBPACK_IMPORTED_MODULE_13__geom_MultiPoint_js__","setCommonGeometryProperties_","__WEBPACK_IMPORTED_MODULE_14__geom_MultiPolygon_js__","setPolygons","GEOMETRY_COLLECTION","__WEBPACK_IMPORTED_MODULE_3__asserts_js__","readPoint_","__WEBPACK_IMPORTED_MODULE_15__geom_Point_js__","readPolygon_","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readStyle_","STYLE_PARSERS_","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DataParser_","DATA_PARSERS_","featureObject","displayName","ExtendedDataParser_","EXTENDED_DATA_PARSERS_","RegionParser_","REGION_PARSERS_","PairDataParser_","pairObject","PAIR_PARSERS_","Style","PlacemarkStyleMapParser_","styleMapValue","placemarkObject","SchemaDataParser_","SCHEMA_DATA_PARSERS_","SimpleDataParser_","LatLonAltBoxParser_","LAT_LON_ALT_BOX_PARSERS_","regionObject","LodParser_","LOD_PARSERS_","lodObject","innerBoundaryIsParser_","flatLinearRing","INNER_BOUNDARY_IS_PARSERS_","outerBoundaryIsParser_","OUTER_BOUNDARY_IS_PARSERS_","LinkParser_","LINK_PARSERS_","whenParser_","when","Date","parse","isNaN","Data","SchemaData","LatLonAltBox","Lod","altitudeMode","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","extrude","readBoolean","tessellate","makeReplacer","innerBoundaryIs","outerBoundaryIs","coord","Icon","MultiGeometry","Track","NETWORK_LINK_PARSERS_","ExtendedData","Region","Link","address","open","phoneNumber","visibility","PLACEMARK_PARSERS_","StyleMap","MultiTrack","SimpleData","IconStyle","LabelStyle","LineStyle","PolyStyle","Pair","readDocumentOrFolder_","Document","makeArrayExtender","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","id","setId","__WEBPACK_IMPORTED_MODULE_5__format_Feature_js__","setGeometry","styleUri","n","firstElementChild","nextElementSibling","fs","readName","isDocument","readNameFromDocument","isNode","readNameFromNode","firstChild","nextSibling","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeColorTextNode_","rgba","__WEBPACK_IMPORTED_MODULE_4__color_js__","abgr","hex","writeCoordinatesTextNode_","dimension","d","writeDataNode_","pair","EXTENDEDDATA_NODE_SERIALIZERS_","writeDataNodeName_","writeCDATASection","writeDataNodeValue_","writeDocument_","DOCUMENT_SERIALIZERS_","DOCUMENT_NODE_FACTORY_","writeExtendedData_","namesAndValues","names","DATA_NODE_FACTORY_","writeIcon_","icon","ICON_SEQUENCE_","ICON_SERIALIZERS_","GX_NODE_FACTORY_","writeIconStyle_","getSrc","iconImageSize","iconProperties","getAnchor","getOrigin","getRotation","ICON_STYLE_SEQUENCE_","ICON_STYLE_SERIALIZERS_","writeLabelStyle_","LABEL_STYLE_SEQUENCE_","LABEL_STYLE_SERIALIZERS_","writeLineStyle_","LINE_STYLE_SEQUENCE_","LINE_STYLE_SERIALIZERS_","writeMultiGeometry_","factory","getGeometries","GEOMETRY_NODE_FACTORY_","MULTI_POINT","getPoints","POINT_NODE_FACTORY_","MULTI_LINE_STRING","LINE_STRING_NODE_FACTORY_","MULTI_POLYGON","getPolygons","POLYGON_NODE_FACTORY_","MULTI_GEOMETRY_SERIALIZERS_","writeBoundaryIs_","linearRing","BOUNDARY_IS_SERIALIZERS_","LINEAR_RING_NODE_FACTORY_","writePlacemark_","getId","v","PLACEMARK_SERIALIZERS_","EXTENDEDDATA_NODE_FACTORY_","PLACEMARK_SEQUENCE_","writePrimitiveGeometry_","PRIMITIVE_GEOMETRY_SEQUENCE_","PRIMITIVE_GEOMETRY_SERIALIZERS_","writePolygon_","linearRings","getLinearRings","outerRing","POLYGON_SERIALIZERS_","INNER_BOUNDARY_NODE_FACTORY_","OUTER_BOUNDARY_NODE_FACTORY_","writePolyStyle_","POLY_STYLE_SERIALIZERS_","COLOR_NODE_FACTORY_","writeScaleTextNode_","writeStyle_","STYLE_SEQUENCE_","STYLE_SERIALIZERS_","writeVec2_","vec2","KML_SEQUENCE_","KML_SERIALIZERS_","GEOMETRY_TYPE_TO_NODENAME_","writeBooleanTextNode","kml","xmlnsUri","_possibleConstructorReturn","__proto__","getPrototypeOf","featuresCollection_","olSourceVector","layer_","olLayerVector","_inherits","getArray","_index","attrs","ngeoPopupTemplateUrl","restrict","addClass","close","stopPropagation","preventDefault","oldVal","css","getOptions","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","mode","getTime","getUTCDate","localDate","getUTCFullYear","getUTCMonth","ngeoLayerHelper","ngeoWMSTime","layerHelper_","ngeoWMSTime_","ogcServersObject_","ogcServersObject","$on","firstParent","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","depth","metadata","opacity","setOpacity","updateLayerState_","setVisible","olLayerImage","getSource","updateParams","LAYERS","reverse","groupNode","isRoot","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","getLayer","_this3","createBasicGroup","timeParam","getTimeParam_","imageType","createBasicWMSLayer","credential","hasActiveChildren","ctrl","updateLayerReferences_","isChecked","setState","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","refreshState","gmfLayerWMTS","newLayer","olLayerTile","createWMTSLayerFromCapabilitites","dimensions","setSource","querySourceIds","disclaimer","disclaimers","wmsTime","VisitorDecision","STOP","timeValues","formatWMSTimeParam","start","tree","isOneParentNotMix","ngeoMiscWMSTime","$compile","$sce","$new","autoDestroy_","destroy","sce_","element_","document","body","getOpen","setOpen","$destroy","setTitle","title","trustedTitle","trustAsHtml","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","cls","fail","Factory","ngeoMessagePopupComponent","gettextCatalog","$injector","ngeoDataSources","ngeoFile","injector_","dataSources_","collection","ngeoFile_","ngeoLayerHelper_","extDataSources_","files_","fileGroup_","ngeoDatasourceFileGroup","dataSources","injector","getString","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","$inject","wmsGroup","wmsGroupsCollection","found","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","wmsGroups","Symbol","iterator","next","done","err","return","wmtsGroup","wmtsGroupsCollection","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","wmtsGroups","layerGroup","capabilities","req","formats","ogcImageType","wmsInfoFormat","ngeoDatasourceOGC","WMSInfoFormat","GML","ogcLayers","ogcType","Type","visible","wmsUrl","getWMSGroup","addDataSource","ngeoDatasourceWMSGroup","addLayer_","addWMSGroup_","wmtsUrl","assertString","wmtsLayer","WMTS","getWMTSGroup","ngeoDatasourceOGCGroup","addWMTSGroup_","layerObj","createWMTSLayerFromCapabilititesObj","unregister","handleWMTSDataSourceVisibleChange_","file","getFileDataSource_","fileGroup","fit","rejections","read","readOptions","featureProjection","isKml","olFormatKML","isGpx","olFormatGPX","ngeoDatasourceFile","reject","oldValue","removeFileDataSource_","removeOGCDataSource_","removeLayer_","removeDataSource","removeWMSGroup_","removeWMTSGroup_","getGroupFromMap","EXTERNALLAYERGROUP_NAME","ngeoUtilsFile","ngeoDatasourceDataSources","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","ngeoLayertreeTemplateUrl","olObj","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeSyncLayertreeMap","gmfLayertreeTreeManager","ngeoLayertreeComponent","ngeoMapLayerHelper","ngeoMessagePopup","gmfLayertreeTemplate","$element","$attrs","component_","bindings","openLinksInNewWindow","component","$scope","ngeoCreatePopup","gmfDataSourceBeingFiltered","gmfExternalDataSourcesManager","gmfSyncLayertreeMap","scope_","$http_","$sce_","root","gmfSyncLayertreeMap_","infoPopup_","promises_","groupNodeStates_","dataLayerGroup_","on","$apply","DATALAYERGROUP_NAME","_syncArrays2","default","render","updateDimensions_","olLayerLayer","updateLayerDimensions_","_this4","isEmpty","olSourceWMTS","updateDimensions","olSourceTileWMS","olSourceImageWMS","once","numberOfGroupsToAddInThisDigestLoop","listeners","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getDataSource","timeRangeValue","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getOgcServer","getWMSLegendURL","getLegendsObject","_this5","legendsObject","gmfLayerDefaultName","legendImage","wmtsLegendURL","getWMTSLegendURL","layersNames","getScale_","ServerType","QGISSERVER","getNumberOfLegendsObject","getMetersPerUnit","displayMetadata","_this6","treeUid","metadataURL","resp","infoPopup","afterReorder","groupNodes","currentTreeCtrls","treeCtrls","some","child","refreshFirstLevelGroups","removeNode","removeGroup","removeAllNodes","removeAll","nodesCount","getResolutionStyle","getNodeMinResolution","getNodeMaxResolution","zoomToResolution","setResolution","constrainResolution","toggleNodeLegend","legendNodeId","toggle","toggleFiltrableDataSource","ds","isNodeLegendVisible","is","supportsCustomization","supportsLegend","supportsOpacityChange","legend","NgeoFile","gettext","fileReader","canceler","isValidFileSize","fileSize","isWmsGetCap","fileContent","isWmtsGetCap","readyState","FileReader","LOADING","abort","onload","onerror","error","console","message","code","reason","onprogress","notify","readAsText","load","opt_cancelP","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","__WEBPACK_IMPORTED_MODULE_0__xml_js__","readBooleanString","string","dateTime","readDecimalString","readNonNegativeIntegerString","bool","appendChild","DOCUMENT","createCDATASection","date","padNumber","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","decimal","toPrecision","nonNegativeInteger","unregister_","ngeoDatasourceGroup","_get","registerDataSource_","handleDataSourceVisibleChange_","unregisterDataSource_","_class","group","toggleVisibilityState","arr1","arr2","dereg1","dereg2","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","treeUrl_","has","cacheVersion_","ngeoLocation_","deferred_","promise_","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","theme","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","ids","getIds","array","layerLayerCreationFn","server","promiseSuccessFn","promises","background_layers","itemType","all","layerGroupCreationFn","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","hasNodeEditableLayers_","editable","maxResolutionHint","minResolutionHint","loadThemes","opt_roleId","params","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","MIXED_GROUP","NOT_MIXED_GROUP","nodeExpr","state_","$eval","mapExpr","$parent","splice","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","state","opt_broadcast","setStateInternal_","firstParents","newState","getCalculateState","childState","previousChildState","getSetActive","addLayer","removeLayer","setDataSource","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","readFeatureFromDocument","readFeaturesFromDocument","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","_component","gmfDisclaimerComponent","ngeoDisclaimer","ngeoEventHelper","external","popup","msg","msgs_","createPopup_","disclaimer_","eventHelper_","registerLayer_","handleLayersAdd_","olLayerBase","handleLayersRemove_","unregisterLayer_","layerUid","addListenerKey","showDisclaimerMessage_","clearListenerKey","closeDisclaimerMessage_","$onDestroy","ngeoMessageMessage","WARNING","gettextCatalog_","container","container_","messages_","show","getMessageObjects","closeMessage_","showMessage","getMessageUid_","classNames","ERROR","INFORMATION","SUCCESS","el","button","hasClass","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcLayers_","ogcServerType_","ogcServerType","MAPSERVER","ogcType_","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmtsLayer_","wmtsUrl_","ogcLayer","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","range","lower","upper","config","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","readFeaturesInternal","featureMembers","ONLY_WHITESPACE_RE_","prefix","defaultPrefix","ft","pop","count","uri","candidate","ns","readGeometryElement","GEOMETRY_PARSERS_","fid","getAttributeNS","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","readPoint","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","ring","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","gmfLayertreeComponent","gmfMapComponent","gmfThemeManager","gmfDisclaimerModule","constant","MainController","ngeoLocation","olMap","olSourceOSM","resolutions","center","zoom","modal","getParam","groups","getSetTheme","addTheme","getSetGroup","addFirstLevelGroups","getSetLayers","addGroupByLayerName","getSetRemoveTree","flatNodes","getDistinctFlatNodes_","alreadyAdded","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","olServerType","serverType","createBasicWMSLayerFromDataSource","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","optionsFromCapabilities","elt","layerCap","capabilitiesStyles","opt_layers","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","sublayers","legendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getParams","random","updateWMSLayerState","getQuerySourceIds","ngeoNotification","ngeoStateManager","$timeout_","$injector_","ngeoNotification_","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","groupID","rootChild","grp","unshift","addGroupByName","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","cloneGroupNode_","assign","toggleNodeCheck_","childNode","correspondingTreeCtrl","firstLevelGroupCtrl","gmfGroup","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","legendElement","_this8","ngeoMessageNotification","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","coords","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","Box","multiSurface","surface","multiCurve","writeFeatureElement","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","dataProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","getCoords_","line","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","rgb","r","g","Error","colorZeroPadding","queryData","pairs","indexOfEquals","queryItem","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","info","success","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","LOADED","events","listenOnce","EventType","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","compareVersions","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","begin","writeTimeInstant_","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","timeInstant","timePosition","Query","During","And","Or","Not","BBOX","Contains","Intersects","Within","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","and","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","dataSourcesCollection_","title_","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotation","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","geom","opt_geometries","__WEBPACK_IMPORTED_MODULE_4__geom_Geometry_js__","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","__WEBPACK_IMPORTED_MODULE_1__events_js__","__WEBPACK_IMPORTED_MODULE_2__events_EventType_js__","geometryCollection","setGeometries","computeExtent","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryType_js__","rotate","angle","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","featureUidToGroupIndex_","groups_","useSpatialIndex","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","f","temp","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","configurable","getOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","THEME_NAME_SET","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","setThemeName","modeFlush","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","DEFAULT_DELAY_","clearMessageByCacheItem_","delay","wmsDataSourceUnregister_","init_","updateLayer_","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","filter_Contains","Comparison","filter_Comparison","filter_During","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","filter_Intersects","IsBetween","filter_IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","filter_Not","NotEqualTo","filter_NotEqualTo","filter_Or","filter_Within","_ol_format_filter_","Function","or","not","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","initListenerKey_","NOT","OR","prop","setTarget","manageResizeProp","resizeTransitionProp","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","gmfTreeManagerModeFlush","$rootScope_","themeName_","getThemeName","isLoading","$emit","$filter","$filter_","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","utc","yearResolution","monthResolution","dayResolution","toISOString","wmsTimeProperty","times","factory_","func","wait","invokeApply","_len","args","_key","manager","manager_","index_","setFeatures"],"mappings":"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","file":"layertreeadd.d373696d7cdaa4962ef8.js","sourcesContent":["/**\n * @module ngeo.datasource.DataSources\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olEvents from 'ol/events.js';\nimport olObservable from 'ol/Observable.js';\nimport olView from 'ol/View.js';\nimport googAsserts from 'goog/asserts.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    olObservable.unByKey(this.listenerKeys_);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSources.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 103\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      goog.asserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  goog.asserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  goog.asserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  goog.asserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n*/\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n*/\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 112\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n*/\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n*/\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 124\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.GPXOptions=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(ol.Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (ol.Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst GPX_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeArrayPusher(readRte),\n    'trk': _ol_xml_.makeArrayPusher(readTrk),\n    'wpt': _ol_xml_.makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst LINK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkText'),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTE_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst RTEPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRK_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'number': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKSEG_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst TRKPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n */\nconst WPT_PARSERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'time': _ol_xml_.makeObjectPropertySetter(XSD.readDateTime),\n    'magvar': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'geoidheight': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'cmt': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'desc': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'src': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'link': parseLink,\n    'sym': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'type': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'fix': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'sat': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'hdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'vdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'pdop': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'ageofdgpsdata': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'dgpsid': _ol_xml_.makeObjectPropertySetter(XSD.readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst LINK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst RTE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'rtept': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRK_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'number': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'trkseg': _ol_xml_.makeArraySerializer(_ol_xml_.makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst TRKSEG_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': _ol_xml_.makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'time': _ol_xml_.makeChildAppender(XSD.writeDateTimeTextNode),\n    'magvar': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'geoidheight': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'cmt': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'desc': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'src': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'link': _ol_xml_.makeChildAppender(writeLink),\n    'sym': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'type': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'fix': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'sat': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode),\n    'hdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'vdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'pdop': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'ageofdgpsdata': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'dgpsid': _ol_xml_.makeChildAppender(XSD.writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {ol.Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return _ol_xml_.createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n */\nconst GPX_SERIALIZERS = _ol_xml_.makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': _ol_xml_.makeChildAppender(writeRte),\n    'trk': _ol_xml_.makeChildAppender(writeTrk),\n    'wpt': _ol_xml_.makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {ol.LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {ol.geom.GeometryLayout} Layout.\n */\nGPX.applyLayoutOptions_ = function(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  _ol_xml_.parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop(\n    {}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = _ol_xml_.pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */\n        (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {ol.LayoutOptions} */\n        (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  _ol_xml_.parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {ol.LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = GPX.applyLayoutOptions_(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n  const values = _ol_xml_.pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {ol.LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = GPX.applyLayoutOptions_(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<ol.Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<ol.Feature>} */\n    const features = _ol_xml_.pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  _ol_xml_.setAttributeNS(node, null, 'lat', coordinate[1]);\n  _ol_xml_.setAttributeNS(node, null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    RTE_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    TRK_SERIALIZERS, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  _ol_xml_.pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {ol.geom.Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = _ol_xml_.createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(gpx, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(gpx, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GPX.js\n// module id = 138\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.KMLOptions=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!KML.DEFAULT_STYLE_ARRAY_) {\n    KML.createStyleDefaults_();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<ol.style.Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : KML.DEFAULT_STYLE_ARRAY_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {Object.<string, (Array.<ol.style.Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.GX_NAMESPACE_URIS_ = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nKML.NAMESPACE_URIS_ = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nKML.SCHEMA_LOCATION_ = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @return {Array.<ol.style.Style>} Default style.\n * @private\n */\nKML.createStyleDefaults_ = function() {\n  /**\n   * @const\n   * @type {ol.Color}\n   * @private\n   */\n  KML.DEFAULT_COLOR_ = [255, 255, 255, 1];\n\n  /**\n   * @const\n   * @type {ol.style.Fill}\n   * @private\n   */\n  KML.DEFAULT_FILL_STYLE_ = new Fill({\n    color: KML.DEFAULT_COLOR_\n  });\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_ = [20, 2]; // FIXME maybe [8, 32] ?\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.style.IconAnchorUnits}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_ = IconAnchorUnits.PIXELS;\n\n  /**\n   * @const\n   * @type {ol.Size}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SIZE_ = [64, 64];\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_SRC_ =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_ = 0.5;\n\n  /**\n   * @const\n   * @type {ol.style.Image}\n   * @private\n   */\n  KML.DEFAULT_IMAGE_STYLE_ = new Icon({\n    anchor: KML.DEFAULT_IMAGE_STYLE_ANCHOR_,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_,\n    anchorYUnits: KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_,\n    size: KML.DEFAULT_IMAGE_STYLE_SIZE_,\n    src: KML.DEFAULT_IMAGE_STYLE_SRC_\n  });\n\n  /**\n   * @const\n   * @type {string}\n   * @private\n   */\n  KML.DEFAULT_NO_IMAGE_STYLE_ = 'NO_IMAGE';\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_STROKE_STYLE_ = new Stroke({\n    color: KML.DEFAULT_COLOR_,\n    width: 1\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Stroke}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STROKE_STYLE_ = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Text}\n   * @private\n   */\n  KML.DEFAULT_TEXT_STYLE_ = new Text({\n    font: 'bold 16px Helvetica',\n    fill: KML.DEFAULT_FILL_STYLE_,\n    stroke: KML.DEFAULT_TEXT_STROKE_STYLE_,\n    scale: 0.8\n  });\n\n  /**\n   * @const\n   * @type {ol.style.Style}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ = new Style({\n    fill: KML.DEFAULT_FILL_STYLE_,\n    image: KML.DEFAULT_IMAGE_STYLE_,\n    text: KML.DEFAULT_TEXT_STYLE_,\n    stroke: KML.DEFAULT_STROKE_STYLE_,\n    zIndex: 0\n  });\n\n  /**\n   * @const\n   * @type {Array.<ol.style.Style>}\n   * @private\n   */\n  KML.DEFAULT_STYLE_ARRAY_ = [KML.DEFAULT_STYLE_];\n\n  return KML.DEFAULT_STYLE_ARRAY_;\n};\n\n\n/**\n * @const\n * @type {Object.<string, ol.style.IconAnchorUnits>}\n * @private\n */\nKML.ICON_ANCHOR_UNITS_MAP_ = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {ol.style.Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {ol.style.Style} style Style.\n * @private\n */\nKML.createNameStyleFunction_ = function(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || KML.DEFAULT_TEXT_STYLE_.getFont());\n    textStyle.setScale(foundText.getScale() || KML.DEFAULT_TEXT_STYLE_.getScale());\n    textStyle.setFill(foundText.getFill() || KML.DEFAULT_TEXT_STYLE_.getFill());\n    textStyle.setStroke(foundText.getStroke() || KML.DEFAULT_TEXT_STROKE_STYLE_);\n  } else {\n    textStyle = KML.DEFAULT_TEXT_STYLE_.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles Shared\n *          styles.\n * @param {boolean|undefined} showPointNames true to show names for point\n *          placemarks.\n * @return {ol.FeatureStyleFunction} Feature style function.\n * @private\n */\nKML.createFeatureStyleFunction_ = function(style, styleUrl,\n  defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n         * @param {number} resolution Resolution.\n         * @return {Array.<ol.style.Style>} Style.\n         * @this {ol.Feature}\n         */\n    function(resolution) {\n      let drawName = showPointNames;\n      /** @type {ol.style.Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        if (this.getGeometry()) {\n          drawName = (this.getGeometry().getType() ===\n                        GeometryType.POINT);\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (this.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(style[0],\n            name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = KML.findStyle_(styleUrl, defaultStyle,\n          sharedStyles);\n        if (drawName) {\n          nameStyle = KML.createNameStyleFunction_(foundStyle[0],\n            name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = KML.createNameStyleFunction_(defaultStyle[0],\n          name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n};\n\n\n/**\n * @param {Array.<ol.style.Style>|string|undefined} styleValue Style value.\n * @param {Array.<ol.style.Style>} defaultStyle Default style.\n * @param {Object.<string, (Array.<ol.style.Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<ol.style.Style>} Style.\n * @private\n */\nKML.findStyle_ = function(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return KML.findStyle_(\n      sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.Color|undefined} Color.\n */\nKML.readColor_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nKML.readFlatCoordinates_ = function(node) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {string} URI.\n */\nKML.readURI_ = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {ol.KMLVec2_} Vec2.\n */\nKML.readVec2_ = function(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: KML.ICON_ANCHOR_UNITS_MAP_[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: KML.ICON_ANCHOR_UNITS_MAP_[yunits],\n    origin: origin\n  };\n};\n\n\n/**\n * @param {Node} node Node.\n * @private\n * @return {number|undefined} Scale.\n */\nKML.readScale_ = function(node) {\n  return XSD.readDecimal(node);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>|string|undefined} StyleMap.\n */\nKML.readStyleMapValue_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(undefined,\n    KML.STYLE_MAP_PARSERS_, node, objectStack);\n};\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.IconStyleParser_ = function(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = KML.DEFAULT_IMAGE_STYLE_SRC_;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {ol.KMLVec2_|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === KML.DEFAULT_IMAGE_STYLE_SRC_) {\n    anchor = KML.DEFAULT_IMAGE_STYLE_ANCHOR_;\n    anchorXUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS_;\n    anchorYUnits = KML.DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS_;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == KML.DEFAULT_IMAGE_STYLE_SRC_) {\n      size = KML.DEFAULT_IMAGE_STYLE_SIZE_;\n      if (scale === undefined) {\n        scale = KML.DEFAULT_IMAGE_SCALE_MULTIPLIER_;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = KML.DEFAULT_NO_IMAGE_STYLE_;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LabelStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LABEL_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {ol.Color} */\n          ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LineStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.LINE_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PolyStyleParser_ = function(node, objectStack) {\n  // FIXME colorMode\n  const object = _ol_xml_.pushParseAndPop(\n    {}, KML.POLY_STYLE_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {ol.Color} */\n        ('color' in object ? object['color'] : KML.DEFAULT_COLOR_)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline =\n      /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nKML.readFlatLinearRing_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.FLAT_LINEAR_RING_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.gxCoordParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nKML.readGxMultiTrack_ = function(node, objectStack) {\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    KML.GX_MULTITRACK_GEOMETRY_PARSERS_, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readGxTrack_ = function(node, objectStack) {\n  const gxTrackObject = _ol_xml_.pushParseAndPop(\n    /** @type {ol.KMLGxTrackObject_} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), KML.GX_TRACK_PARSERS_, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  let i, ii;\n  for (i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii;\n    ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object} Icon object.\n */\nKML.readIcon_ = function(node, objectStack) {\n  const iconObject = _ol_xml_.pushParseAndPop(\n    {}, KML.ICON_PARSERS_, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nKML.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    KML.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nKML.readLineString_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readLinearRing_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\nKML.readMultiGeometry_ = function(node, objectStack) {\n  const geometries = _ol_xml_.pushParseAndPop([],\n    KML.MULTI_GEOMETRY_PARSERS_, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {ol.geom.Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry, i, ii;\n  for (i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      KML.setCommonGeometryProperties_(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {ol.geom.Geometry} */ (multiGeometry);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Point|undefined} Point.\n */\nKML.readPoint_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop({},\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatCoordinates =\n      KML.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nKML.readPolygon_ = function(node, objectStack) {\n  const properties = _ol_xml_.pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    KML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_, node,\n    objectStack);\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    KML.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.style.Style>} Style.\n */\nKML.readStyle_ = function(node, objectStack) {\n  const styleObject = _ol_xml_.pushParseAndPop(\n    {}, KML.STYLE_PARSERS_, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {ol.style.Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : KML.DEFAULT_FILL_STYLE_);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {ol.style.Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : KML.DEFAULT_IMAGE_STYLE_);\n  if (imageStyle == KML.DEFAULT_NO_IMAGE_STYLE_) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {ol.style.Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : KML.DEFAULT_TEXT_STYLE_);\n  let strokeStyle = /** @type {ol.style.Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : KML.DEFAULT_STROKE_STYLE_);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n};\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {ol.geom.MultiPoint|ol.geom.MultiLineString|ol.geom.MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<ol.geom.Geometry>} geometries List of geometries.\n * @private\n */\nKML.setCommonGeometryProperties_ = function(multiGeometry,\n  geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let geometry, i, hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (i = 0; i < ii; ++i) {\n    geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.DataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  _ol_xml_.parseNode(KML.DATA_PARSERS_, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.ExtendedDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.EXTENDED_DATA_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.RegionParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.REGION_PARSERS_, node, objectStack);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PairDataParser_ = function(node, objectStack) {\n  const pairObject = _ol_xml_.pushParseAndPop(\n    {}, KML.PAIR_PARSERS_, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {ol.style.Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.PlacemarkStyleMapParser_ = function(node, objectStack) {\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SchemaDataParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.SCHEMA_DATA_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.SimpleDataParser_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = XSD.readString(node);\n    const featureObject =\n        /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LatLonAltBoxParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LAT_LON_ALT_BOX_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LodParser_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({}, KML.LOD_PARSERS_, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.INNER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    KML.OUTER_BOUNDARY_IS_PARSERS_, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.LinkParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(KML.LINK_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.whenParser_ = function(node, objectStack) {\n  const gxTrackObject = /** @type {ol.KMLGxTrackObject_} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'displayName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'value': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTENDED_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': KML.DataParser_,\n    'SchemaData': KML.SchemaDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.REGION_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LatLonAltBox': KML.LatLonAltBoxParser_,\n    'Lod': KML.LodParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LAT_LON_ALT_BOX_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'minAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxAltitude': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'north': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'south': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'east': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'west': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'minLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxLodPixels': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'minFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'maxFadeExtent': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.EXTRUDE_AND_ALTITUDE_MODE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'tessellate': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'altitudeMode': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RING_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.FLAT_LINEAR_RINGS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'innerBoundaryIs': KML.innerBoundaryIsParser_,\n    'outerBoundaryIs': KML.outerBoundaryIsParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_TRACK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'when': KML.whenParser_\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'coord': KML.gxCoordParser_\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GEOMETRY_FLAT_COORDINATES_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'coordinates': _ol_xml_.makeReplacer(KML.readFlatCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'y': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'w': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n      'h': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.ICON_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeObjectPropertySetter(KML.readIcon_),\n    'heading': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal),\n    'hotSpot': _ol_xml_.makeObjectPropertySetter(KML.readVec2_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.INNER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LABEL_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'scale': _ol_xml_.makeObjectPropertySetter(KML.readScale_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINE_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'width': _ol_xml_.makeObjectPropertySetter(XSD.readDecimal)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.MULTI_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeArrayPusher(KML.readLineString_),\n    'LinearRing': _ol_xml_.makeArrayPusher(KML.readLinearRing_),\n    'MultiGeometry': _ol_xml_.makeArrayPusher(KML.readMultiGeometry_),\n    'Point': _ol_xml_.makeArrayPusher(KML.readPoint_),\n    'Polygon': _ol_xml_.makeArrayPusher(KML.readPolygon_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.GX_MULTITRACK_GEOMETRY_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.GX_NAMESPACE_URIS_, {\n    'Track': _ol_xml_.makeArrayPusher(KML.readGxTrack_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.NETWORK_LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'Link': KML.LinkParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.LINK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.OUTER_BOUNDARY_IS_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeReplacer(KML.readFlatLinearRing_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PAIR_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'key': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.PLACEMARK_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': KML.ExtendedDataParser_,\n    'Region': KML.RegionParser_,\n    'MultiGeometry': _ol_xml_.makeObjectPropertySetter(\n      KML.readMultiGeometry_, 'geometry'),\n    'LineString': _ol_xml_.makeObjectPropertySetter(\n      KML.readLineString_, 'geometry'),\n    'LinearRing': _ol_xml_.makeObjectPropertySetter(\n      KML.readLinearRing_, 'geometry'),\n    'Point': _ol_xml_.makeObjectPropertySetter(\n      KML.readPoint_, 'geometry'),\n    'Polygon': _ol_xml_.makeObjectPropertySetter(\n      KML.readPolygon_, 'geometry'),\n    'Style': _ol_xml_.makeObjectPropertySetter(KML.readStyle_),\n    'StyleMap': KML.PlacemarkStyleMapParser_,\n    'address': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'description': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'name': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'open': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'phoneNumber': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'styleUrl': _ol_xml_.makeObjectPropertySetter(KML.readURI_),\n    'visibility': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'MultiTrack': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxMultiTrack_, 'geometry'),\n      'Track': _ol_xml_.makeObjectPropertySetter(\n        KML.readGxTrack_, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.POLY_STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeObjectPropertySetter(KML.readColor_),\n    'fill': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean),\n    'outline': _ol_xml_.makeObjectPropertySetter(XSD.readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.SCHEMA_DATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'SimpleData': KML.SimpleDataParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': KML.IconStyleParser_,\n    'LabelStyle': KML.LabelStyleParser_,\n    'LineStyle': KML.LineStyleParser_,\n    'PolyStyle': KML.PolyStyleParser_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nKML.STYLE_MAP_PARSERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Pair': KML.PairDataParser_\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<ol.Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = _ol_xml_.makeStructureNS(\n    KML.NAMESPACE_URIS_, {\n      'Document': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': _ol_xml_.makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': _ol_xml_.makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<ol.Feature>} */\n  const features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = _ol_xml_.pushParseAndPop({'geometry': null},\n    KML.PLACEMARK_PARSERS_, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {olx.format.ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = KML.createFeatureStyleFunction_(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = KML.readStyle_(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = KML.readStyleMapValue_(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(KML.NAMESPACE_URIS_, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    let n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Souce.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'name') {\n      return XSD.readString(n);\n    }\n  }\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.NETWORK_LINK_PARSERS_,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (_ol_xml_.isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (_ol_xml_.isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = _ol_xml_.pushParseAndPop({}, KML.REGION_PARSERS_,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(KML.NAMESPACE_URIS_, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {ol.Color|string} color Color.\n * @private\n */\nKML.writeColorTextNode_ = function(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  let i;\n  for (i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  XSD.writeStringTextNode(node, abgr.join(''));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeCoordinatesTextNode_ = function(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  let d, i;\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  XSD.writeStringTextNode(node, text);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeDataNode_ = function(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n        _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n * @private\n */\nKML.writeDataNodeName_ = function(node, name) {\n  XSD.writeCDATASection(node, name);\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n * @private\n */\nKML.writeDataNodeValue_ = function(node, value) {\n  XSD.writeStringTextNode(node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writeDocument_ = function(node, features, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.DOCUMENT_SERIALIZERS_,\n    KML.DOCUMENT_NODE_FACTORY_, features, objectStack, undefined,\n    this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeExtendedData_ = function(node, namesAndValues, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    _ol_xml_.pushSerializeAndPop(context, KML.EXTENDEDDATA_NODE_SERIALIZERS_,\n      KML.DATA_NODE_FACTORY_, [{name: names[i], value: values[i]}], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIcon_ = function(node, icon, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = KML.ICON_SEQUENCE_[parentNode.namespaceURI];\n  let values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.ICON_SERIALIZERS_, _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      KML.ICON_SEQUENCE_[KML.GX_NAMESPACE_URIS_[0]];\n  values = _ol_xml_.makeSequence(icon, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_SERIALIZERS_,\n    KML.GX_NODE_FACTORY_, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeIconStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {ol.KMLVec2_} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.ICON_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.ICON_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLabelStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      KML.LABEL_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LABEL_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeLineStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.LINE_STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.LINE_STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeMultiGeometry_ = function(node, geometry, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<ol.geom.Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {ol.geom.GeometryCollection} */ (geometry).getGeometries();\n    factory = KML.GEOMETRY_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {ol.geom.MultiPoint} */ (geometry).getPoints();\n    factory = KML.POINT_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {ol.geom.MultiLineString} */ (geometry)).getLineStrings();\n    factory = KML.LINE_STRING_NODE_FACTORY_;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {ol.geom.MultiPolygon} */ (geometry)).getPolygons();\n    factory = KML.POLYGON_NODE_FACTORY_;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.MULTI_GEOMETRY_SERIALIZERS_, factory,\n    geometries, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeBoundaryIs_ = function(node, linearRing, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.BOUNDARY_IS_SERIALIZERS_,\n    KML.LINEAR_RING_NODE_FACTORY_, [linearRing], objectStack);\n};\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {ol.format.KML}\n * @private\n */\nKML.writePlacemark_ = function(node, feature, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = _ol_xml_.makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n      KML.EXTENDEDDATA_NODE_FACTORY_, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction.call(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PLACEMARK_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {olx.format.WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  _ol_xml_.pushSerializeAndPop(context, KML.PLACEMARK_SERIALIZERS_,\n    KML.GEOMETRY_NODE_FACTORY_, [geometry], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePrimitiveGeometry_ = function(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.PRIMITIVE_GEOMETRY_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.PRIMITIVE_GEOMETRY_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolygon_ = function(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  // inner rings\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.INNER_BOUNDARY_NODE_FACTORY_,\n    linearRings, objectStack);\n  // outer ring\n  _ol_xml_.pushSerializeAndPop(context,\n    KML.POLYGON_SERIALIZERS_,\n    KML.OUTER_BOUNDARY_NODE_FACTORY_,\n    [outerRing], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writePolyStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  _ol_xml_.pushSerializeAndPop(context, KML.POLY_STYLE_SERIALIZERS_,\n    KML.COLOR_NODE_FACTORY_, [style.getColor()], objectStack);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n * @private\n */\nKML.writeScaleTextNode_ = function(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  XSD.writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.style.Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.writeStyle_ = function(node, style, objectStack) {\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = KML.STYLE_SEQUENCE_[parentNode.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.STYLE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {ol.KMLVec2_} vec2 Vec2.\n * @private\n */\nKML.writeVec2_ = function(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.KML_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.KML_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Document': _ol_xml_.makeChildAppender(KML.writeDocument_),\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.DOCUMENT_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Placemark': _ol_xml_.makeChildAppender(KML.writePlacemark_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.EXTENDEDDATA_NODE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Data': _ol_xml_.makeChildAppender(KML.writeDataNode_),\n    'value': _ol_xml_.makeChildAppender(KML.writeDataNodeValue_),\n    'displayName': _ol_xml_.makeChildAppender(KML.writeDataNodeName_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nKML.GEOMETRY_TYPE_TO_NODENAME_ = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'href'\n  ],\n  _ol_xml_.makeStructureNS(KML.GX_NAMESPACE_URIS_, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'href': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }, _ol_xml_.makeStructureNS(\n    KML.GX_NAMESPACE_URIS_, {\n      'x': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'y': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'w': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n      'h': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.ICON_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.ICON_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'Icon': _ol_xml_.makeChildAppender(KML.writeIcon_),\n    'heading': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode),\n    'hotSpot': _ol_xml_.makeChildAppender(KML.writeVec2_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LABEL_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LABEL_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'scale': _ol_xml_.makeChildAppender(KML.writeScaleTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.LINE_STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.LINE_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_),\n    'width': _ol_xml_.makeChildAppender(XSD.writeDecimalTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.BOUNDARY_IS_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.MULTI_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'GeometryCollection': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PLACEMARK_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PLACEMARK_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'ExtendedData': _ol_xml_.makeChildAppender(\n      KML.writeExtendedData_),\n    'MultiGeometry': _ol_xml_.makeChildAppender(\n      KML.writeMultiGeometry_),\n    'LineString': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Point': _ol_xml_.makeChildAppender(\n      KML.writePrimitiveGeometry_),\n    'Polygon': _ol_xml_.makeChildAppender(KML.writePolygon_),\n    'Style': _ol_xml_.makeChildAppender(KML.writeStyle_),\n    'address': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'description': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'name': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'open': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'phoneNumber': _ol_xml_.makeChildAppender(\n      XSD.writeStringTextNode),\n    'styleUrl': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'visibility': _ol_xml_.makeChildAppender(\n      XSD.writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.PRIMITIVE_GEOMETRY_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'extrude': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'tessellate': _ol_xml_.makeChildAppender(XSD.writeBooleanTextNode),\n    'altitudeMode': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'coordinates': _ol_xml_.makeChildAppender(\n      KML.writeCoordinatesTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLYGON_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(\n      KML.writeBoundaryIs_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.POLY_STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'color': _ol_xml_.makeChildAppender(KML.writeColorTextNode_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n * @private\n */\nKML.STYLE_SEQUENCE_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nKML.STYLE_SERIALIZERS_ = _ol_xml_.makeStructureNS(\n  KML.NAMESPACE_URIS_, {\n    'IconStyle': _ol_xml_.makeChildAppender(KML.writeIconStyle_),\n    'LabelStyle': _ol_xml_.makeChildAppender(KML.writeLabelStyle_),\n    'LineStyle': _ol_xml_.makeChildAppender(KML.writeLineStyle_),\n    'PolyStyle': _ol_xml_.makeChildAppender(KML.writePolyStyle_)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GX_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  return _ol_xml_.createElementNS(KML.GX_NAMESPACE_URIS_[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.DOCUMENT_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nKML.GEOMETRY_NODE_FACTORY_ = function(value, objectStack,\n  opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      KML.GEOMETRY_TYPE_TO_NODENAME_[/** @type {ol.geom.Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.COLOR_NODE_FACTORY_ = _ol_xml_.makeSimpleNodeFactory('color');\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.DATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Data');\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n * @private\n */\nKML.EXTENDEDDATA_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.INNER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POINT_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINE_STRING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.LINEAR_RING_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.POLYGON_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('Polygon');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n * @private\n */\nKML.OUTER_BOUNDARY_NODE_FACTORY_ =\n    _ol_xml_.makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = _ol_xml_.createElementNS(KML.NAMESPACE_URIS_[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  const xmlSchemaInstanceUri = 'http://www.w3.org/2001/XMLSchema-instance';\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:gx',\n    KML.GX_NAMESPACE_URIS_[0]);\n  _ol_xml_.setAttributeNS(kml, xmlnsUri, 'xmlns:xsi', xmlSchemaInstanceUri);\n  _ol_xml_.setAttributeNS(kml, xmlSchemaInstanceUri, 'xsi:schemaLocation',\n    KML.SCHEMA_LOCATION_);\n\n  const /** @type {ol.XmlNodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML.KML_SEQUENCE_[kml.namespaceURI];\n  const values = _ol_xml_.makeSequence(properties, orderedKeys);\n  _ol_xml_.pushSerializeAndPop(context, KML.KML_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\nexport default KML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/KML.js\n// module id = 139\n// module chunks = 0 1 2 3 4 5 6 7 8 10 11 14","/**\n * @module ngeo.datasource.File\n*/\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/File.js","/**\n * @module ngeo.message.popupComponent\n*/\nimport ngeoBase from 'ngeo/index.js';\nconst exports = angular.module('ngeoPopup', []);\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/message/popupcomponent.html`;\n  });\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intented to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/popupComponent.js","/**\n * @module ngeo.misc.Time\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/Time.js","/**\n * @module gmf.layertree.SyncLayertreeMap\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    goog.asserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    goog.asserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    goog.asserts.assert(ogcServer);\n    goog.asserts.assert(ogcServer.url);\n    goog.asserts.assert(ogcServer.type);\n    goog.asserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    goog.asserts.assert(ogcServer);\n    goog.asserts.assert(ogcServer.url);\n    goog.asserts.assert(ogcServer.type);\n    goog.asserts.assert(gmfLayerWMS.layers);\n    goog.asserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  goog.asserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  goog.asserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  goog.asserts.assert(gmfLayerWMTS.url);\n  goog.asserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/SyncLayertreeMap.js","/**\n * @module ngeo.message.Popup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Popup.js","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n*/\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport ngeoUtilsFile from 'ngeo/utils/File.js';\n\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.utils.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.utils.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    goog.asserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      });\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = goog.asserts.assertString(layer['Title']);\n      const wmtsLayer = goog.asserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        goog.asserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      goog.asserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      goog.asserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoUtilsFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n*/\nconst exports = {};\nimport gmfBase from 'gmf/index.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","/**\n * @module ngeo.layertree.component\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\nngeoBase.module.requires.push(exports.name);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${ngeoBase.baseModuleTemplateUrl}/layertree/component.html`;\n  });\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {angular.$compile} $compile Angular compile service.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function($compile, ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/component.js","/**\n * @module gmf.layertree.component\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessagePopup.module.name,\n  ngeoMessagePopupComponent.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const subTemplateUrl = `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`;\n    return `${'<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          'ngeo-layertree-templateurl=\"'}${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nngeoLayertreeComponent.value('ngeoLayertreeTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} Template URL.\n     */\n  (element, attrs) => `${gmfBase.baseModuleTemplateUrl}/layertree/component.html`);\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overrided by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup.\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow'\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.$http} $http Angular http service.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $http, $sce, $scope,\n  ngeoCreatePopup, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager,\n  gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @private\n   * @type {!angular.$http}\n   */\n  this.$http_ = $http;\n\n  /**\n   * @private\n   * @type {!angular.$sce}\n   */\n  this.$sce_ = $sce;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  goog.asserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @private\n   * @type {!ngeo.message.Popup}\n   */\n  this.infoPopup_ = ngeoCreatePopup();\n\n  /**\n   * @type {!Object.<string, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      goog.asserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          goog.asserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    goog.asserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Mutliple urls for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Display a ngeo.infoPopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const treeUid = treeCtrl.uid.toString();\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    if (!(treeUid in this.promises_)) {\n      this.promises_[treeUid] = this.$http_.get(metadataURL).then(\n        (resp) => {\n          const html = this.$sce_.trustAsHtml(resp.data);\n          return html;\n        });\n    }\n    const infoPopup = this.infoPopup_;\n    this.promises_[treeUid].then((html) => {\n      infoPopup.setTitle(node.name);\n      infoPopup.setContent(html);\n      infoPopup.setOpen(true);\n    });\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  }, this);\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach(function(child) {\n    this.layers.push(child.layer);\n  }, this);\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/component.js","/**\n * @module ngeo.utils.File\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst NgeoFile = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nconst name = 'ngeoFile';\nNgeoFile.module = angular.module(name, []).service(name, NgeoFile);\nngeoBase.module.requires.push(name);\n\nconst exports = NgeoFile;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/File.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.FileGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/FileGroup.js","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n*/\nimport gmfBase from 'gmf/index.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module(\n  'gmfLayertreeDatasourceGroupTreeComponent', [\n    ngeoDatasourceDataSources.module.name,\n  ]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/layertree/datasourceGroupTreeComponent.html`\n});\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","/**\n * @module ngeo.misc.syncArrays\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/syncArrays.js","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n*/\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    goog.asserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  goog.asserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      goog.asserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    goog.asserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  goog.asserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      goog.asserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    goog.asserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      goog.asserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 28\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmf.disclaimer.module\n*/\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDisclaimerModule', [\n  gmfDisclaimerComponent.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/module.js","/**\n * @module gmf.disclaimer.component\n*/\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    goog.asserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  goog.asserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach(function(layer) {\n      this.registerLayer_(layer);\n    }, this);\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.showDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(this.unregisterLayer_, this);\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach(function(disclaimer) {\n        this.closeDisclaimerMessage_(disclaimer);\n      }, this);\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/disclaimer/component.js","/**\n * @module ngeo.message.Disclaimer\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Disclaimer.js","/**\n * @module ngeo.datasource.OGC\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 39\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.layertreeadd\n*/\nconst exports = {};\n\nimport './layertreeadd.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDisclaimerModule from 'gmf/disclaimer/module.js';\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name, // Change me other dependencies are in a module\n  gmfLayertreeComponent.name,\n  gmfMapComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerLocation.module.name,\n  gmfDisclaimerModule.name,\n]);\n\n\nexports.module.value('gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?version=2&background=background&interface=desktop');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('gmfTreeManagerModeFlush', false);\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.theme.Manager} gmfThemeManager gmf Tree Manager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n */\nexports.MainController = function(gmfTreeManager, gmfThemes, gmfThemeManager, ngeoLocation) {\n\n  gmfThemes.loadThemes();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  // How should disclaimer message be displayed: in modals or alerts\n  const modal = ngeoLocation.getParam('modal');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modal = modal === 'true';\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @export\n   */\n  this.gmfTreeManager = gmfTreeManager;\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {Array.<gmfThemes.GmfTheme>}\n   * @export\n   */\n  this.themes = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @export\n   */\n  this.groups = [];\n\n  /**\n   * @type {Array.<gmfThemes.GmfLayer>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @param {gmfThemes.GmfTheme|undefined} value A theme or undefined to get Themes.\n   * @return {Array.<gmfThemes.GmfTheme>} All themes.\n   * @export\n   */\n  this.getSetTheme = function(value) {\n    if (value) {\n      this.gmfThemeManager.addTheme(value);\n    }\n    return this.themes;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in all themes.\n   * @export\n   */\n  this.getSetGroup = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.addFirstLevelGroups([value]);\n    }\n    return this.groups;\n  };\n\n  /**\n   * @param {gmfThemes.GmfLayer|undefined} value A group or undefined to get groups.\n   * @return {Array.<gmfThemes.GmfLayer>} All groups in all themes.\n   * @export\n   */\n  this.getSetLayers = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.addGroupByLayerName(value.name);\n    }\n    return this.layers;\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|undefined} value A GeoMapFish group node, or undefined\n   *     to get the groups of the tree manager.\n   * @return {Array.<gmfThemes.GmfGroup>} All groups in the tree manager.\n   * @export\n   */\n  this.getSetRemoveTree = function(value) {\n    if (value !== undefined) {\n      this.gmfTreeManager.removeGroup(value);\n    }\n    return this.gmfTreeManager.root.children;\n  };\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      this.themes = themes;\n\n      // Get an array with all nodes entities existing in \"themes\".\n      const flatNodes = [];\n      this.themes.forEach((theme) => {\n        theme.children.forEach((group) => {\n          this.groups.push(group); // get a list of all groups\n          this.getDistinctFlatNodes_(group, flatNodes);\n        });\n      });\n      flatNodes.forEach((node) => {\n        // Get an array of all layers\n        if (node.children === undefined) {\n          this.layers.push(node);\n        }\n      });\n    }\n  });\n\n  /**\n   * Just for this example\n   * @param {gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer} node A theme, group or layer node.\n   * @param {Array.<gmfThemes.GmfTheme|gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An Array of nodes.\n   * @export\n   */\n  this.getDistinctFlatNodes_ = function(node, nodes) {\n    let i;\n    const children = node.children;\n    if (children !== undefined) {\n      for (i = 0; i < children.length; i++) {\n        this.getDistinctFlatNodes_(children[i], nodes);\n      }\n    }\n    let alreadyAdded = false;\n    nodes.some((n) => {\n      if (n.id === node.id) {\n        return alreadyAdded = true;\n      }\n    });\n    if (!alreadyAdded) {\n      nodes.push(node);\n    }\n  };\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/layertreeadd.js","/**\n * @module ngeo.map.LayerHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    goog.asserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    goog.asserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n*/\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n*/\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 57\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    goog.asserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  goog.asserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 64\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 65\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\nGeometryCollection.cloneGeometries_ = function(geometries) {\n  const clonedGeometries = [];\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  let i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return GeometryCollection.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n    GeometryCollection.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/GeometryCollection.js\n// module id = 68\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 14 15 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 70\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 72\n// module chunks = 0 1 2 3 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n*/\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n*/\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    goog.asserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    goog.asserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n*/\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n*/\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n*/\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.WMSTime\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/WMSTime.js","/**\n * @module ngeo.misc.debounce\n*/\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n*/\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js"],"sourceRoot":""}