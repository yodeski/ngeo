{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/CustomEvent.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/interaction/DrawEventType.js","webpack:///./node_modules/openlayers/src/ol/interaction/Draw.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/interaction/Measure.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/geom/Circle.js","webpack:///./src/misc/filters.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./src/interaction/MeasureBaseOptions.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/layertree/Controller.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/interaction/MobileDraw.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./contribs/gmf/examples/mobilemeasure.js","webpack:///./contribs/gmf/src/mobile/measure/lengthComponent.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/interaction/MeasureLengthMobile.js","webpack:///./contribs/gmf/src/mobile/measure/pointComponent.js","webpack:///./src/interaction/MeasurePointMobile.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","olBase","_Event","type","detail","olEventsEvent","inherits","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","DrawEventType","Draw","Pointer","handleDownEvent_","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode_","getMode_","stopClick_","stopClick","minPoints_","minPoints","Mode_","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","functions","geometryFunction","GeometryType","opt_geometry","circle","NaN","squaredLength","ol_coordinate","setCenterAndRadius","Constructor","mode","setCoordinates","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","wrapX","getDefaultStyleFunction","updateWhileInteracting","geometryName_","condition_","noModifierKeys","freehandCondition_","freehand","always","freehandCondition","shiftKeyOnly","events","ol_Object","getChangeEventType","Property","ACTIVE","updateState_","Style","createDefaultEditing","resolution","event","originalEvent","CONTEXTMENU","preventDefault","move","MapBrowserEventType","POINTERMOVE","pass","POINTERDRAG","clearTimeout","addToDrawing_","POINTERDOWN","handlePointerMove_","pointerEvent","pointerType","MouseSource","POINTER_TYPE","DBLCLICK","startDrawing_","MapBrowserPointerEvent","frameState","circleMode","finishDrawing","atFinish_","abortDrawing_","stopPropagation","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","setGeometryName","setGeometry","dispatchEvent","last","sketchLineGeom","ring","getLinearRing","getLayout","done","pop","removeLastPoint","splice","sketchFeature","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","getSource","sketchFeatures","overlaySource","addFeatures","getActive","createRegularPolygon","opt_sides","opt_angle","center","angle","atan","createBox","ol_extent","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","transition","source_XYZ","OSM","ATTRIBUTION","olDom","olProj","olSphere","olInteractionInteraction","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","olLayerVector","olSourceVector","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","getFormattedArea","format","geom","transform","abs","getArea","getFormattedCircleArea","PI","pow","getFormattedLength","getFormattedPoint","opt_template","dragging","helpMsg","removeChildren","appendChild","setPosition","getDrawInteraction","prevMap","createMeasureTooltip_","handleMeasure","measure","coord","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","positioning","addOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","setActive","callback","getTooltipElement","olProjProj4","epsg21781def","proj4","defs","register","get","setExtent","Proj","projections","somerc","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_5__geom_flat_deflate_js__","opt_radius","opt_layout","__WEBPACK_IMPORTED_MODULE_4__geom_SimpleGeometry_js__","layout","closestPointXY","closestPoint","minSquaredDistance","delta","containsXY","getRadiusSquared_","getCenter","computeExtent","__WEBPACK_IMPORTED_MODULE_1__extent_js__","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryType_js__","intersectsExtent","circleExtent","intersectsCoordinate","setCenter","setLayout","changed","__WEBPACK_IMPORTED_MODULE_2__geom_GeometryLayout_js__","setFlatCoordinatesInternal","setRadius","olMath","Scalify","$filter","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","log","factor","decimal","unit","str_number","groups","str_unit","unshift","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","opt_type","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","modulo","dms","d","m","s","olString","padNumber","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","appendLineString","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setLineStrings","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","btnGroupComponent_","$parse","assign","buttons_","buttonModel","newValue","BtnGroupController","$scope","scope_","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","on","$apply","$setViewValue","$viewValue","$render","toggleClass","ngeoInteractionMeasure","br","olInteractionDraw","proj","getLastCoordinate","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","olFunctions","TRUE","sketchPoints_","updateWhileAnimating","handleViewCenterChange_","getDirty","getDrawing","getValid","getFeature","addToDrawing","drawing","sketchFeatureGeom","getSketchPointGeometry_","olGeomSimpleGeometry","valid","clearDrawing","getCenter_","assertArray","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","ogcLayer","err","return","supportsWFS","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","defaultPrefix","ft","nodeName","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","gmfMapComponent","gmfMobileMeasureLengthComponent","gmfMobileMeasurePointComponent","ngeoMiscBtnComponent","constant","MainController","getMapCenter","zoom","getMapZoom","olSourceOSM","olView","resolutions","addControl","olControlScaleLine","measureLengthActive","measurePointLayersConfig","aster","srtm","measurePointActive","ngeoMiscFilters","component_","gmfMobileMeasureLengthTemplateUrl","filter_","lineDash","olStyleRegularShape","radius2","drawInteraction","dirty","ngeoInteractionMeasureLengthMobile","defineProperty","olObject","addPoint","finish","deactivate","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","obj","ngeoInteractionMeasureLength","ngeoInteractionMobileDraw","gmfRasterRasterService","gmfMobileMeasurePointTemplateUrl","getCoordinateDecimalsFn","getLayersConfigFn","gmfRaster","ngeoDebounce","gmfRaster_","ngeoDebounce_","gettextCatalog_","$filter_","handleMeasureActiveChange_","coordinateDecimalsFn","coordinateDecimals","layersConfig","mapViewPropertyChangeEventKey_","ngeoInteractionMeasurePointMobile","translate","str","getMeasure_","el","ctn","className","childEl","previousCtn","getElementsByClassName","LayerConfig","coordFormat","format_","coordFormat_","dec","ngeoNotification","$timeout_","$injector_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","olEventsCondition","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","featureUidToGroupIndex_","groups_","layer_","styleFunction_","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","tan","phi2z","ts","dphi","eccnth","sin","identity","pt","projs","es","e","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoEventHelper","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"mobilemeasure.87468ea78cbe05eddab7.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/CustomEvent.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/interaction/DrawEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered upon feature draw start\n   * @event ol.interaction.Draw.Event#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event ol.interaction.Draw.Event#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/DrawEventType.js\n// module id = null\n// module chunks = ","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport BaseObject from '../Object.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport Event from '../events/Event.js';\nimport _ol_events_condition_ from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport DrawEventType from '../interaction/DrawEventType.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport Style from '../style/Style.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @fires ol.interaction.Draw.Event\n * @param {olx.interaction.DrawOptions} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: Draw.handleDownEvent_,\n    handleEvent: Draw.handleEvent,\n    handleUpEvent: Draw.handleUpEvent_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {ol.geom.GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {ol.interaction.Draw.Mode_}\n   * @private\n   */\n  this.mode_ = Draw.getMode_(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Draw.Mode_.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {ol.geom.Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = _ol_coordinate_.squaredDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Draw.Mode_.POINT) {\n        Constructor = Point;\n      } else if (mode === Draw.Mode_.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Draw.Mode_.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<ol.Coordinate>} coordinates\n       *     The coordinates.\n       * @param {ol.geom.SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {ol.geom.SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Draw.Mode_.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {ol.DrawGeometryFunctionType}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<ol.Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      Draw.getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.condition_ = options.condition ?\n    options.condition : _ol_events_condition_.noModifierKeys;\n\n  /**\n   * @private\n   * @type {ol.EventsConditionType}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = _ol_events_condition_.always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : _ol_events_condition_.shiftKeyOnly;\n  }\n\n  _ol_events_.listen(this,\n    BaseObject.getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nDraw.getDefaultStyleFunction = function() {\n  const styles = Style.createDefaultEditing();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {ol.MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ol.interaction.Draw}\n * @api\n */\nDraw.handleEvent = function(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Draw.Mode_.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == MouseSource.POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return PointerInteraction.handleEvent.call(this, event) && pass;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleDownEvent_ = function(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Draw}\n * @private\n */\nDraw.handleUpEvent_ = function(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Draw.Mode_.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Draw.Mode_.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {ol.MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Draw.Mode_.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Draw.Mode_.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Draw.Mode_.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<ol.Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {ol.geom.Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Draw.Mode_.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {ol.geom.LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link ol.interaction.DrawEventType.DRAWEND} event is dispatched before\n * inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {ol.geom.SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Draw.Mode_.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Draw.Mode_.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!ol.Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {ol.geom.LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new Draw.Event(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `ol.geom.Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {ol.DrawGeometryFunctionType} Function that draws a\n *     polygon.\n * @api\n */\nDraw.createRegularPolygon = function(opt_sides, opt_angle) {\n  return (\n    /**\n         * @param {ol.Coordinate|Array.<ol.Coordinate>|Array.<Array.<ol.Coordinate>>} coordinates\n         * @param {ol.geom.SimpleGeometry=} opt_geometry\n         * @return {ol.geom.SimpleGeometry}\n         */\n    function(coordinates, opt_geometry) {\n      const center = coordinates[0];\n      const end = coordinates[1];\n      const radius = Math.sqrt(\n        _ol_coordinate_.squaredDistance(center, end));\n      const geometry = opt_geometry ? /** @type {ol.geom.Polygon} */ (opt_geometry) :\n        fromCircle(new Circle(center), opt_sides);\n      const angle = opt_angle ? opt_angle :\n        Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n      makeRegular(geometry, center, radius, angle);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {ol.DrawGeometryFunctionType} Function that draws a box-shaped polygon.\n * @api\n */\nDraw.createBox = function() {\n  return (\n    /**\n     * @param {Array.<ol.Coordinate>} coordinates\n     * @param {ol.geom.SimpleGeometry=} opt_geometry\n     * @return {ol.geom.SimpleGeometry}\n     */\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n};\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {ol.geom.GeometryType} type Geometry type.\n * @return {ol.interaction.Draw.Mode_} Drawing mode.\n * @private\n */\nDraw.getMode_ = function(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Draw.Mode_.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Draw.Mode_.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Draw.Mode_.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Draw.Mode_.CIRCLE;\n  }\n  return /** @type {!ol.interaction.Draw.Mode_} */ (mode);\n};\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n * @private\n */\nDraw.Mode_ = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n/**\n * @classdesc\n * Events emitted by {@link ol.interaction.Draw} instances are instances of\n * this type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.DrawEvent}\n * @param {ol.interaction.DrawEventType} type Type.\n * @param {ol.Feature} feature The feature drawn.\n */\nDraw.Event = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {ol.Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\ninherits(Draw.Event, Event);\n\nexport default Draw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Draw.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoInteractionMeasureBaseOptions from 'ngeo/interaction/MeasureBaseOptions.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olProjEPSG4326 from 'ol/proj/EPSG4326.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} opt_options Options\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  const length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  let helpMsg = this.startMsg;\n  if (this.sketchFeature !== null) {\n    helpMsg = this.continueMsg;\n  }\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/Measure.js","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {ol.Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link ol.Coordinate coordinate}.\n * @return {ol.Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link ol.Coordinate coordinate}.\n * @param {ol.Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link ol.Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {ol.Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = _ol_geom_flat_deflate_.coordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {ol.ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @param {ol.ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link ol.proj.Projection} object.\n * @return {ol.geom.Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/Circle.js\n// module id = 147\n// module chunks = 0 1 2 3 4 5 6 7 8 11 13 14","/**\n * @module ngeo.misc.filters\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olMath from 'ol/math.js';\nimport olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\nngeoBase.module.requires.push(exports.name);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nngeoBase.module.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/filters.js","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ngeo.interaction.MeasureBaseOptions\n */\nconst exports = {};\n\n\n/**\n * Interactions for measure tools base class.\n * @typedef {{\n *    decimals: (number|undefined),\n *    precision: (number|undefined),\n *    displayHelpTooltip: (boolean|undefined),\n *    startMsg: (Element|undefined),\n *    style: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined),\n *    sketchStyle: (ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined)\n * }}\n */\nexports;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureBaseOptions.js","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.misc.btnComponent\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach(function(expressionFn, i) {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  }, this);\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Atttributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/btnComponent.js","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  ngeoInteractionMeasure.call(this, options);\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to continue drawing the line.';\n    const br = document.createElement('br');\n    br.textContent = 'Double-click or click last point to finish.';\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLength.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module gmf.raster.RasterService\n */\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.interaction.MobileDraw\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomSimpleGeometry from 'ol/geom/SimpleGeometry.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries from a mobile device using the\n * center of the map view as entry for points added.\n *\n * Supports:\n * - point\n * - line string\n *\n * @constructor\n * @struct\n * @fires ol.interaction.Draw.Event\n * @extends {ol.interaction.Interaction}\n * @param {ngeox.interaction.MobileDrawOptions} options Options\n */\nconst exports = function(options) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n  /**\n   * The key for view center change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * Geometry type.\n   * @type {ol.geom.GeometryType}\n   * @private\n   */\n  this.type_ = options.type;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.type_ === 'Polygon' ? 3 : 2);\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Previous sketch points, saved to be able to display them on the layer.\n   * @type {Array.<ol.Feature>}\n   * @private\n   */\n  this.sketchPoints_ = [];\n\n  /**\n   * Current sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      olInteractionDraw.getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    if (this.changeEventKey_) {\n      olEvents.unlistenByKey(this.changeEventKey_);\n    }\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.changeEventKey_ = olEvents.listen(map.getView(),\n      'change:center',\n      this.handleViewCenterChange_, this);\n  }\n\n  this.updateState_();\n};\n\n\n// === PUBLIC METHODS - PROPERTY GETTERS ===\n\n\n/**\n * Return whether the interaction is currently dirty. It is if the sketch\n * feature has its geometry last coordinate set to the center without the\n * use of the `addToDrawing` method.\n * @return {boolean} `true` if the interaction is dirty, `false` otherwise.\n * @observable\n */\nexports.prototype.getDirty = function() {\n  return /** @type {boolean} */ (\n    this.get('dirty'));\n};\n\n\n/**\n * Return whether the interaction is currently drawing.\n * @return {boolean} `true` if the interaction is drawing, `false` otherwise.\n * @observable\n */\nexports.prototype.getDrawing = function() {\n  return /** @type {boolean} */ (\n    this.get('drawing'));\n};\n\n\n/**\n * Return whether the interaction as a valid sketch feature, i.e. its geometry\n * is valid.\n * @return {boolean} `true` if the interaction has a valid sketch feature,\n *     `false` otherwise.\n * @observable\n */\nexports.prototype.getValid = function() {\n  return /** @type {boolean} */ (\n    this.get('valid'));\n};\n\n\n/**\n * Returns the current sketch feature.\n * @return {?ol.Feature} The sketch feature, or null if none.\n */\nexports.prototype.getFeature = function() {\n  return this.sketchFeature_;\n};\n\n\n// === PUBLIC METHODS ===\n\n\n/**\n * Add current sketch point to sketch feature if the latter exists, else create\n * it.\n */\nexports.prototype.addToDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  let sketchFeatureGeom;\n  const sketchPointGeom = this.getSketchPointGeometry_();\n  const coordinate = sketchPointGeom.getCoordinates();\n  let coordinates;\n\n  // == point ==\n  if (this.type_ === 'Point') {\n    if (!this.sketchFeature_) {\n      this.sketchFeature_ = new olFeature(new olGeomPoint(coordinate));\n      this.dispatchEvent(new olInteractionDraw.Event(\n        /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n    }\n    sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    sketchFeatureGeom.setCoordinates(coordinate);\n    return;\n  }\n\n  // == line string ==\n  if (this.type_ === 'LineString') {\n    this.sketchPoints_.push(this.sketchPoint_);\n    if (!this.sketchFeature_) {\n      coordinates = [coordinate.slice(), coordinate.slice()];\n      this.sketchFeature_ = new olFeature(new olGeomLineString(coordinates));\n      this.dispatchEvent(new olInteractionDraw.Event(\n        /** @type {ol.interaction.DrawEventType} */ ('drawstart'), this.sketchFeature_));\n    } else {\n      sketchFeatureGeom = this.sketchFeature_.getGeometry();\n      googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n      coordinates = sketchFeatureGeom.getCoordinates();\n      coordinates.push(coordinate.slice());\n      sketchFeatureGeom.setCoordinates(coordinates);\n    }\n  }\n\n  const dirty = this.getDirty();\n  if (dirty) {\n    this.set('dirty', false);\n  }\n\n  // minPoints validation\n  const valid = this.getValid();\n  if (this.type_ === 'LineString') {\n    if (coordinates.length >= this.minPoints_) {\n      if (!valid) {\n        this.set('valid', true);\n      }\n    } else {\n      if (valid) {\n        this.set('valid', false);\n      }\n    }\n  }\n\n  // reset sketch point\n  this.sketchPoint_ = null;\n\n  // update sketch features\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Clear the drawing\n */\nexports.prototype.clearDrawing = function() {\n  this.setActive(false);\n  this.setActive(true);\n};\n\n\n/**\n * Finish drawing. If there's a sketch point, it's added first.\n */\nexports.prototype.finishDrawing = function() {\n\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  if (this.sketchPoint_) {\n    this.addToDrawing();\n  }\n\n  this.set('drawing', false);\n\n  this.dispatchEvent(new olInteractionDraw.Event(\n    /** @type {ol.interaction.DrawEventType} */ ('drawend'), this.sketchFeature_));\n};\n\n\n// === PRIVATE METHODS ===\n\n\n/**\n * Start drawing by adding the sketch point first.\n * @private\n */\nexports.prototype.startDrawing_ = function() {\n  this.set('drawing', true);\n  this.createOrUpdateSketchPoint_();\n  this.updateSketchFeatures_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  }\n};\n\n\n/**\n * Modify the geometry of the sketch feature to have its last coordinate\n * set to the center of the map.\n * @private\n */\nexports.prototype.modifyDrawing_ = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n\n  const center = this.getCenter_();\n\n  if (this.type_ === 'LineString') {\n    const sketchFeatureGeom = this.sketchFeature_.getGeometry();\n    googAsserts.assertInstanceof(sketchFeatureGeom, olGeomSimpleGeometry);\n    const coordinates = sketchFeatureGeom.getCoordinates();\n    coordinates.pop();\n    coordinates.push(center);\n    sketchFeatureGeom.setCoordinates(coordinates);\n  }\n\n  const dirty = this.getDirty();\n  if (!dirty) {\n    this.set('dirty', true);\n  }\n\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {?ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature || this.sketchPoints_.length > 0) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  this.sketchPoints_ = [];\n  this.set('dirty', false);\n  this.set('drawing', false);\n  this.set('valid', false);\n  return sketchFeature;\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  } else {\n    this.startDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.prototype.handleViewCenterChange_ = function(evt) {\n  // no need to do anything if interaction is not active, nor drawing\n  const active = this.getActive();\n  const drawing = this.getDrawing();\n\n  if (!active || !drawing) {\n    return;\n  }\n\n  this.createOrUpdateSketchPoint_();\n\n  if (this.type_ === 'Point') {\n    this.addToDrawing();\n  } else {\n    this.modifyDrawing_();\n    this.updateSketchFeatures_();\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function() {\n  const center = this.getCenter_();\n\n  if (this.sketchPoint_) {\n    const geometry = this.getSketchPointGeometry_();\n    geometry.setCoordinates(center);\n  } else {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(center));\n  }\n\n};\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n  overlaySource.addFeatures(this.sketchPoints_);\n};\n\n\n/**\n * Returns the geometry of the sketch point feature.\n * @return {ol.geom.Point} Point.\n * @private\n */\nexports.prototype.getSketchPointGeometry_ = function() {\n  googAsserts.assert(this.sketchPoint_, 'sketch point should be thruty');\n  const geometry = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  return geometry;\n};\n\n\n/**\n * Returns the center of the map view\n * @return {ol.Coordinate} Coordinate.\n * @private\n */\nexports.prototype.getCenter_ = function() {\n  const center = this.getMap().getView().getCenter();\n  googAsserts.assertArray(center);\n  return center;\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MobileDraw.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.mobilemeasure\n */\nconst exports = {};\n\nimport './mobilemeasure.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\nimport gmfMobileMeasureLengthComponent from 'gmf/mobile/measure/lengthComponent.js';\nimport gmfMobileMeasurePointComponent from 'gmf/mobile/measure/pointComponent.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n  gmfPermalinkPermalink.module.name,\n  gmfMobileMeasureLengthComponent.name,\n  gmfMobileMeasurePointComponent.name,\n  ngeoMiscBtnComponent.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @param {gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @constructor\n * @ngInject\n */\nexports.MainController = function(gmfPermalink) {\n\n  const center = gmfPermalink.getMapCenter() || [537635, 152640];\n  const zoom = gmfPermalink.getMapZoom() || 3;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: center,\n      zoom: zoom\n    })\n  });\n\n  this.map.addControl(new olControlScaleLine());\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {Object.<string, gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @export\n   */\n  this.measurePointLayersConfig = {\n    'aster': {unit: 'm', decimals: 2},\n    'srtm': {unit: 'm'}\n  };\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/mobilemeasure.js","/**\n * @module gmf.mobile.measure.lengthComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoInteractionMeasureLengthMobile from 'ngeo/interaction/MeasureLengthMobile.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport olEvents from 'ol/events.js';\nimport olObject from 'ol/Object.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasureLength', [\n  ngeoMiscFilters.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfMobileMeasureLengthTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} The template url.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasureLengthTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/mobile/measure/lengthComponent.html`;\n  });\n\n\n/**\n * Provide a directive to do a length measure on the mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurelength\n *        gmf-mobile-measurelength-active=\"ctrl.measureLengthActive\"\n *        gmf-mobile-measurelength-map=\"::ctrl.map\">\n *      </div>\n *\n * @htmlAttribute {boolean} gmf-mobile-measurelength-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurelength-precision the number of significant digits to display.\n * @htmlAttribute {ol.Map} gmf-mobile-measurelength-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurelength-sketchstyle A style for the measure length.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasureLengthTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasureLength\n */\nexports.component_ =\n    function(gmfMobileMeasureLengthTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurelengthActive',\n          'precision': '<?gmfMobileMeasurelengthPrecision',\n          'map': '=gmfMobileMeasurelengthMap',\n          'sketchStyle': '=?gmfMobileMeasurelengthSketchstyle'\n        },\n        controller: 'GmfMobileMeasureLengthController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasureLengthTemplateUrl,\n        /**\n         * @param {angular.Scope} scope Scope.\n         * @param {angular.JQLite} element Element.\n         * @param {angular.Attributes} attrs Attributes.\n         * @param {gmf.mobile.measure.lengthComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurelength',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasureLengthController\n */\nexports.Controller_ = function($scope, $filter) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  this.scope_.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n  });\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.precision;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle = new olStyleStyle({\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 255, 0.2)'\n    }),\n    stroke: new olStyleStroke({\n      color: 'rgba(0, 0, 0, 0.5)',\n      lineDash: [10, 10],\n      width: 2\n    }),\n    image: new olStyleRegularShape({\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.7)',\n        width: 2\n      }),\n      points: 4,\n      radius: 8,\n      radius2: 0,\n      angle: 0\n    })\n  });\n\n  /**\n   * @type {ngeo.interaction.MeasureLengthMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawing = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.valid = false;\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n\n  this.measure = new ngeoInteractionMeasureLengthMobile(this.filter_('ngeoUnitPrefix'), {\n    precision: this.precision,\n    sketchStyle: this.sketchStyle\n  });\n\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n\n\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (\n    this.measure.getDrawInteraction());\n\n  const drawInteraction = this.drawInteraction;\n  ngeoMiscDecorate.interaction(drawInteraction);\n\n  Object.defineProperty(this, 'hasPoints', {\n    get() {\n      return this.drawInteraction.getFeature() !== null;\n    }\n  });\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('dirty'),\n    function() {\n      this.dirty = drawInteraction.getDirty();\n\n      // this is where the angular scope is forced to be applied. We\n      // only need to do this when dirty, as going to \"no being dirty\"\n      // is made by a click on a button where Angular is within scope\n      if (this.dirty) {\n        this.scope_.$apply();\n      }\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('drawing'),\n    function() {\n      this.drawing = drawInteraction.getDrawing();\n    },\n    this\n  );\n\n  olEvents.listen(\n    drawInteraction,\n    olObject.getChangeEventType('valid'),\n    function() {\n      this.valid = drawInteraction.getValid();\n    },\n    this\n  );\n\n  this.map.addInteraction(this.measure);\n};\n\n/**\n * Add current sketch point to line measure\n * @export\n */\nexports.Controller_.prototype.addPoint = function() {\n  this.drawInteraction.addToDrawing();\n};\n\n\n/**\n * Clear the sketch feature\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.drawInteraction.clearDrawing();\n};\n\n\n/**\n * Finish line measure\n * @export\n */\nexports.Controller_.prototype.finish = function() {\n  this.drawInteraction.finishDrawing();\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\nexports.controller('GmfMobileMeasureLengthController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/mobile/measure/lengthComponent.js","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module ngeo.interaction.MeasureLengthMobile\n */\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.MeasureLength}\n * @param {ngeox.unitPrefix} format The format function\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olBase.obj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasureLength.call(this, format, options);\n\n};\n\nolBase.inherits(\n  exports, ngeoInteractionMeasureLength);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    style: style,\n    source: source\n  });\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasureLengthMobile.js","/**\n * @module gmf.mobile.measure.pointComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasurePointMobile from 'ngeo/interaction/MeasurePointMobile.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\nimport olEvents from 'ol/events.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('gmfMobileMeasurePoint', [\n  gmfRasterRasterService.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\nexports.value('gmfMobileMeasurePointTemplateUrl',\n  /**\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @return {string} The template url.\n     */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfMobileMeasurePointTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/mobile/measure/pointComponent.html`;\n  });\n\n\n/**\n * Provide a directive to do a point (coordinate and elevation) measure on the\n * mobile devices.\n *\n * Example:\n *\n *      <div gmf-mobile-measurepoint\n *        gmf-mobile-measurepoint-active=\"ctrl.measurePointActive\"\n *        gmf-mobile-measurepoint-layersconfig=\"::ctrl.measurePointLayers\"\n *        gmf-mobile-measurepoint-map=\"::ctrl.map\">\n *      </div>\n *\n * Where ctrl.measurePointLayers is an object like this:\n *\n *      this.measurePointLayers = [\n *        {name: 'srtm', unit: 'm', decimals: 2},\n *        {name: 'wind', {unit: 'km/h'},\n *        {name: 'humidity'}\n *      ];\n *\n * @htmlAttribute {boolean} gmf-mobile-measurepoint-active Used to active\n * or deactivate the component.\n * @htmlAttribute {number=} gmf-mobile-measurepoint-coordinatedecimals number\n *     of decimal to display for the coordinate.\n * @htmlAttribute {Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n *     gmf-mobile-measurepoint-layersconfig Raster elevation layers to get\n *     information under the point and its configuaration.\n * @htmlAttribute {ol.Map} gmf-mobile-measurepoint-map The map.\n * @htmlAttribute {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction=}\n *     gmf-mobile-measurepoint-sketchstyle A style for the measure point.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     gmfMobileMeasurePointTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMobileMeasurePoint\n */\nexports.component_ =\n    function(gmfMobileMeasurePointTemplateUrl) {\n      return {\n        restrict: 'A',\n        scope: {\n          'active': '=gmfMobileMeasurepointActive',\n          'getCoordinateDecimalsFn': '&?gmfMobileMeasurepointCoordinatedecimals',\n          'getLayersConfigFn': '&gmfMobileMeasurepointLayersconfig',\n          'map': '=gmfMobileMeasurepointMap',\n          'sketchStyle': '=?gmfMobileMeasurepointSketchstyle',\n          'format': '<gmfMobileMeasurepointFormat'\n        },\n        controller: 'GmfMobileMeasurePointController as ctrl',\n        bindToController: true,\n        templateUrl: gmfMobileMeasurePointTemplateUrl,\n        /**\n         * @param {!angular.Scope} scope Scope.\n         * @param {!angular.JQLite} element Element.\n         * @param {!angular.Attributes} attrs Attributes.\n         * @param {!gmf.mobile.measure.pointComponent.Controller_} controller Controller.\n         */\n        link: (scope, element, attrs, controller) => {\n          controller.init();\n        }\n      };\n    };\n\n\nexports.directive('gmfMobileMeasurepoint',\n  exports.component_);\n\n\n/**\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$filter} $filter Angular filter service.\n * @param {gmf.raster.RasterService} gmfRaster gmf Raster service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMobileMeasurePointController\n */\nexports.Controller_ = function(gettextCatalog, $scope, $filter,\n  gmfRaster, ngeoDebounce) {\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  $scope.$watch(() => this.active, (newVal) => {\n    this.measure.setActive(newVal);\n    this.handleMeasureActiveChange_();\n  });\n\n  const coordinateDecimalsFn = this['getCoordinateDecimalsFn'];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.coordinateDecimals = coordinateDecimalsFn ? coordinateDecimalsFn() : 0;\n\n  /**\n   * @type {!Array.<gmf.mobile.measure.pointComponent.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @export\n   */\n  this.sketchStyle;\n\n  if (this.sketchStyle === undefined) {\n    this.sketchStyle = new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(0, 0, 0, 0.5)',\n        lineDash: [10, 10],\n        width: 2\n      }),\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(0, 0, 0, 0.7)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n  }\n\n  /**\n   * @type {string}\n   */\n  this.format;\n\n  /**\n   * @type {ngeo.interaction.MeasurePointMobile}\n   * @export\n   */\n  this.measure;\n\n  /**\n   * @type {ngeo.interaction.MobileDraw}\n   * @export\n   */\n  this.drawInteraction;\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.measure = new ngeoInteractionMeasurePointMobile(\n    /** @type {ngeox.numberCoordinates} */ (this.$filter_('ngeoNumberCoordinates')),\n    this.format || '{x}, {y}',\n    {\n      decimals: this.coordinateDecimals,\n      sketchStyle: this.sketchStyle\n    }\n  );\n  this.measure.setActive(this.active);\n  ngeoMiscDecorate.interaction(this.measure);\n  this.drawInteraction = /** @type {ngeo.interaction.MobileDraw} */ (this.measure.getDrawInteraction());\n  ngeoMiscDecorate.interaction(this.drawInteraction);\n\n  const layersConfig = this['getLayersConfigFn']();\n  googAsserts.assert(Array.isArray(layersConfig));\n  this.layersConfig = layersConfig;\n\n  this.map.addInteraction(this.measure);\n};\n\n\n/**\n * Deactivate the directive.\n * @export\n */\nexports.Controller_.prototype.deactivate = function() {\n  this.active = false;\n};\n\n\n/**\n * @param {string} str String to translate.\n * @return {string} The translated text.\n * @export\n */\nexports.Controller_.prototype.translate = function(str) {\n  return this.gettextCatalog_.getString(str);\n};\n\n\n/**\n * Called when the measure becomes active or inactive. Act accordingly:\n * - on activate, listen to the map property changes to call for the elevation\n *   service.\n * - on deactivate, unlisten\n * @private\n */\nexports.Controller_.prototype.handleMeasureActiveChange_ =\n    function() {\n      if (this.measure.getActive()) {\n        const view = this.map.getView();\n        this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n          view,\n          'propertychange',\n          this.ngeoDebounce_(\n            this.getMeasure_.bind(this), 300, /* invokeApply */ true),\n          this);\n        this.getMeasure_();\n      } else if (this.mapViewPropertyChangeEventKey_) {\n        olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n        this.mapViewPropertyChangeEventKey_ = null;\n      }\n    };\n\n\n/**\n * Call the elevation service to get information about the measure at\n * the current map center location.\n * @private\n */\nexports.Controller_.prototype.getMeasure_ = function() {\n  const center = this.map.getView().getCenter();\n  googAsserts.assertArray(center);\n  const params = {\n    'layers': this.layersConfig.map(config => config.name).join(',')\n  };\n  this.gmfRaster_.getRaster(center, params).then((object) => {\n    const el = this.measure.getTooltipElement();\n    const ctn = document.createElement('div');\n    const className = 'gmf-mobile-measure-point';\n    ctn.className = className;\n\n    for (const config of this.layersConfig) {\n      const key = config.name;\n      if (key in object) {\n        let value = object[key];\n        const childEl = document.createElement('div');\n        childEl.className = `gmf-mobile-measure-point-${key}`;\n        const unit = config.unit || '';\n        const decimals = config.decimals && config.decimals > 0 || 0;\n        value = this.$filter_('number')(value, decimals);\n        childEl.innerHTML = [this.translate(key), ': ', value, ' ', unit].join('');\n        ctn.appendChild(childEl);\n      }\n    }\n\n    const previousCtn = el.getElementsByClassName(className);\n    if (previousCtn[0]) {\n      previousCtn[0].remove();\n    }\n    el.appendChild(ctn);\n\n  });\n};\n\n\nexports.controller('GmfMobileMeasurePointController',\n  exports.Controller_);\n\n/**\n * @typedef {{\n *     name: string,\n *     decimals: (number|undefined),\n *     unit: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/mobile/measure/pointComponent.js","/**\n * @module ngeo.interaction.MeasurePointMobile\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMobileDraw from 'ngeo/interaction/MobileDraw.js';\nimport * as olBase from 'ol/index.js';\nimport * as olObj from 'ol/obj.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure by coordinate (point) on mobile devices.\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {ngeox.numberCoordinates} format the number formatter\n * @param {string} coordFormat the coordinates formatter\n * @param {ngeox.interaction.MeasureOptions=} opt_options Options\n */\nconst exports = function(format, coordFormat, opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  olObj.assign(options, {displayHelpTooltip: false});\n\n  ngeoInteractionMeasure.call(this, options);\n\n  /**\n   * @type {ngeox.numberCoordinates}\n   * @private\n   */\n  this.format_ = format;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.coordFormat_ = coordFormat;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new ngeoInteractionMobileDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Point'),\n    style: style,\n    source: source\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPoint);\n  const dec = this.decimals;\n  const output = ngeoInteractionMeasure.getFormattedPoint(geom, dec, this.format_, this.coordFormat_);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/MeasurePointMobile.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}