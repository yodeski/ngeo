{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/statemanager/Service.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./contribs/gmf/examples/simple.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","olEvents","unlistenByKey","module","angular","service","ngeoBase","requires","name","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","googAsserts","assertInstanceof","olMap","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","gmfLayertreeTreeManager","ngeoStatemanagerService","value","gmfBase","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","olCollection","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","gmfThemeThemes","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","ngeoLayertreeController","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","olInteractionSnap","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","olFormatWFS","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","gmfPermalinkPermalink","gmfEditingSnapping","ngeoMapComponent","ngeoMapFeatureOverlayMgr","manageResize","controller","bindToController","templateUrl","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","olOverlay","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","ngeoFormatFeatureHashStyleType","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","olStyleCircle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","ngeoUtils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","olGeomLineString","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","olGeomMultiLineString","readPointGeometry_","point","olGeomPoint","readMultiPointGeometry_","multiPoint","olGeomMultiPoint","readPolygonGeometry_","rings","polygon","olGeomPolygon","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","olGeomMultiPolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","olStyleFill","color","olStyleStroke","width","fill","stroke","olStyleText","olStyleStyle","image","setStyleProperties_","getGeometry","ngeoFormatFeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","olFeature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","transformWithOptions","ngeoStatemanagerLocation","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","get","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","ngeoMapLayerHelper","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeoFilterCondition","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","err","return","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","_inherits","ngeoDatasourceDataSource","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","ngeoFormatAttributeType","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","olSourceImageWMS","serverType","updateParams","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","olFormatWMTSCapabilities","preload","Infinity","read","olSourceWMTS","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","deleteParam","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","ngeoMessageMessage","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","ngeoMessageNotification","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","RegExp","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","gmfMapComponent","constant","MainController","olSourceOSM","olView","center","zoom","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","olEventsCondition","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","resolutions","crossOrigin_","url_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","version","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","olSourceVector","useSpatialIndex","layer_","olLayerVector","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","ngeoMapFeatureOverlay","createFunction","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","olInteractionInteraction","defineProperty","getActive","setActive","olLayerBase","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","olSourceTile","olSourceImage","$applyAsync","ngeoDebounce","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoDebounce_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","projections","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleRegularShape","radius2","angle","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","ctrl","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmfThemeManager","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","position","addOverlay","f","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","ngeoOlcsConstants","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","ngeoDatasourceOGC","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","ngeoDatasourceGroup","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","ngeoStatemanagerModule","ngeoDrawFeatures","ngeoMiscEventHelper","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGCGroup","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"wHAeA,MAAAA,EAAA,SAAAC,GAMAC,KAAAC,SAAAF,GAOAD,EAAAI,UAAAC,WAAA,WACA,OAAAH,KAAAC,UAGA,IAAAG,EAAA,ECdA,MAAAC,EAAA,SAAAN,EAAAO,GAEAF,EAAAG,KAAAP,KAAAD,GAMAC,KAAAM,WAAAE,MAAAN,UAAAO,MAAAF,KAAAG,UAAA,GACAC,OAAAC,EAAA,EAAAD,CAAAX,KAAAM,WAAAO,QAAA,OAGAF,OAAAG,EAAA,SAAAH,CAAAN,EAAAD,GACA,IAAAW,EAAA,EChBA,MAAAC,EAAA,SAAAV,GACA,MAAAW,GAAA,OAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACAK,EAAAI,MAAAnB,KAAAiB,IAGAN,OAAAG,EAAA,SAAAH,CAAAK,EAAAD,GAEA,IAAAK,EAAA,ECHA,MAAAC,EAAA,SAAAC,EAAAC,EAAAC,GAEApB,EAAAG,KAAAP,KAAA,QAMAA,KAAAsB,eAMAtB,KAAAuB,SAMAvB,KAAAyB,QAAAD,GAGAb,OAAAG,EAAA,SAAAH,CAAAU,EAAAjB,GAEA,IAAAsB,EAAA,ECvBA,MAAAC,EAAA,SAAA5B,EAAAuB,EAAAM,EAAAJ,GAEApB,EAAAG,KAAAP,KAAAD,GAMAC,KAAAsB,gBAAA,WAMAtB,KAAA4B,WAMA5B,KAAAyB,QAAAD,GAGAb,OAAAG,EAAA,SAAAH,CAAAgB,EAAAvB,GAEA,IAAAyB,EAAA,EC3BA,MAAAC,EAAA,SAAAR,EAAAM,EAAAJ,GAEAK,EAAAtB,KAAAP,KAAA,WAAAsB,EAAAM,EAAAJ,IAIAb,OAAAG,EAAA,SAAAH,CAAAmB,EAAAD,GACA,IAAAE,EAAA,ECTA,MAAAC,EAAA,SAAAjC,EAAAkC,GAEA7B,EAAAG,KAAAP,KAAAD,GAMAC,KAAAiC,gBAGAtB,OAAAG,EAAA,SAAAH,CAAAqB,EAAA5B,GAEA,IAAA8B,EAAA,ECbA,MAAAC,EAAA,SAAAF,EAAAG,EAAAC,GACAH,EAAA3B,KAAAP,KAAA,SAAAiC,GAMAjC,KAAAoC,QAMApC,KAAAqC,OAGA1B,OAAAG,EAAA,SAAAH,CAAAwB,EAAAD,GACA,IAAAI,EAAA,ECfA,MAAAC,EAAA,SAAAxC,EAAAkC,EAAAO,EAAAC,GAEAP,EAAA3B,KAAAP,KAAAD,EAAAkC,GAMAjC,KAAAwC,aAMAxC,KAAA0C,UAAAD,GAGA9B,OAAAG,EAAA,SAAAH,CAAA4B,EAAAL,GACA,IAAAS,EAAA,ECpBA,MAAAC,EAAA,SAAAX,EAAAO,EAAAC,GACAE,EAAApC,KAAAP,KAAA,oBAAAiC,EAAAO,EAAAC,IAGA9B,OAAAG,EAAA,SAAAH,CAAAiC,EAAAD,GACA,IAAAE,EAAA,ECNA,MAAAC,EAAA,SAAAb,EAAAO,GACAG,EAAApC,KAAAP,KAAA,wBAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAAmC,EAAAH,GACA,IAAAI,EAAA,ECLA,MAAAC,EAAA,SAAAf,EAAAO,GACAG,EAAApC,KAAAP,KAAA,iCAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAAqC,EAAAL,GACA,IAAAM,EAAA,ECFA,MAAAC,EAAA,SAAA5B,EAAAM,EAAAJ,GAEAK,EAAAtB,KAAAP,KAAA,aAAAsB,EAAAM,EAAAJ,IAIAb,OAAAG,EAAA,SAAAH,CAAAuC,EAAArB,GACA,IAAAsB,EAAA,ECTA,MAAAC,EAAA,SAAAnB,EAAAoB,EAAAC,GACApB,EAAA3B,KAAAP,KAAA,oBAAAiC,GAMAjC,KAAAqD,gBAMArD,KAAAsD,iBAGA3C,OAAAG,EAAA,SAAAH,CAAAyC,EAAAlB,GACA,IAAAqB,EAAA,ECXA,MAAAC,EAAA,SAAAvB,EAAAwB,EAAAC,EAAAC,EAAAC,EAAAnB,GACAP,EAAA3B,KAAAP,KAAA,iBAAAiC,GAMAjC,KAAAyD,UAMAzD,KAAA6D,cAAAC,IAAAJ,IAAA,IAMA1D,KAAA+D,gBAAAD,IAAAH,IAAA,IAMA3D,KAAAgE,gBAAAF,IAAAF,IAAA,IAMA5D,KAAA0C,UAAAD,GAGA9B,OAAAG,EAAA,SAAAH,CAAA6C,EAAAtB,GACA,IAAA+B,EAAA,EC3CA,MAAAC,EAAA,SAAAjC,GACAC,EAAA3B,KAAAP,KAAA,iBAAAiC,IAGAtB,OAAAG,EAAA,SAAAH,CAAAuD,EAAAhC,GACA,IAAAiC,EAAA,ECJA,MAAAC,EAAA,SAAAnC,EAAAO,GACAG,EAAApC,KAAAP,KAAA,qBAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAAyD,EAAAzB,GACA,IAAA0B,EAAA,ECLA,MAAAC,EAAA,SAAArC,EAAAO,GACAG,EAAApC,KAAAP,KAAA,8BAAAiC,EAAAO,IAGA7B,OAAAG,EAAA,SAAAH,CAAA2D,EAAA3B,GACA,IAAA4B,EAAA,ECNA,MAAAC,EAAA,SAAAC,GAEArE,EAAAG,KAAAP,KAAA,OAMAA,KAAAyE,aAGA9D,OAAAG,EAAA,SAAAH,CAAA6D,EAAApE,GACA,IAAAsE,EAAA,ECVA,MAAAC,EAAA,SAAA1C,EAAAO,EAAAC,GACAE,EAAApC,KAAAP,KAAA,uBAAAiC,EAAAO,EAAAC,IAGA9B,OAAAG,EAAA,SAAAH,CAAAgE,EAAAhC,GACA,IAAAiC,EAAA,ECPA,MAAAC,EAAA,SAAAvE,GACA,MAAAW,GAAA,MAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACAK,EAAAI,MAAAnB,KAAAiB,IAGAN,OAAAG,EAAA,SAAAH,CAAAkE,EAAA9D,GACA,IAAA+D,EAAA,ECFA,MAAAC,EAAA,SAAAzD,EAAAM,EAAAJ,GAEAK,EAAAtB,KAAAP,KAAA,SAAAsB,EAAAM,EAAAJ,IAIAb,OAAAG,EAAA,SAAAH,CAAAoE,EAAAlD,GACA,IAAAmD,EAAA,ECNA,MAAAC,GAUAC,IAAA,SAAA5E,GACA,MAAAW,GAAA,MAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACA,WAAAyE,SAAAjF,UAAAkF,KAAAjE,MAAAC,EAAAH,KAWAoE,GAAA,SAAA/E,GACA,MAAAW,GAAA,MAAAC,OAAAV,MAAAN,UAAAO,MAAAF,KAAAG,YACA,WAAAyE,SAAAjF,UAAAkF,KAAAjE,MAAA2D,EAAA7D,KAWAqE,IAAA,SAAAb,GACA,WAAAC,EAAAD,IAeAc,KAAA,SAAAjE,EAAAC,EAAAC,GACA,WAAAE,EAAAJ,EAAAC,EAAAC,IAcAgE,SAAA,SAAAlE,EAAAM,EAAAJ,GACA,WAAAO,EAAAT,EAAAM,EAAAJ,IAcAiE,WAAA,SAAAnE,EAAAM,EAAAJ,GACA,WAAA2B,EAAA7B,EAAAM,EAAAJ,IAcAkE,OAAA,SAAApE,EAAAM,EAAAJ,GACA,WAAAwD,EAAA1D,EAAAM,EAAAJ,IAaAmE,QAAA,SAAA1D,EAAAO,EAAAC,GACA,WAAAI,EAAAZ,EAAAO,EAAAC,IAaAmD,WAAA,SAAA3D,EAAAO,EAAAC,GACA,WAAAmC,EAAA3C,EAAAO,EAAAC,IAYAoD,SAAA,SAAA5D,EAAAO,GACA,WAAA6B,EAAApC,EAAAO,IAYAsD,kBAAA,SAAA7D,EAAAO,GACA,WAAA+B,EAAAtC,EAAAO,IAYAuD,YAAA,SAAA9D,EAAAO,GACA,WAAAO,EAAAd,EAAAO,IAYAwD,qBAAA,SAAA/D,EAAAO,GACA,WAAAS,EAAAhB,EAAAO,IAYAyD,OAAA,SAAAhE,GACA,WAAAkC,EAAAlC,IAcAiE,QAAA,SAAAjE,EAAAoB,EAAAC,GACA,WAAAC,EAAAtB,EAAAoB,EAAAC,IAoBA6C,KAAA,SAAAlE,EAAAwB,EACAC,EAAAC,EAAAC,EAAAnB,GACA,WAAAwB,EAAAhC,EAAAwB,EACAC,EAAAC,EAAAC,EAAAnB,IAaA2D,OAAA,SAAAnE,EAAAG,EAAAC,GACA,WAAAC,EAAAL,EAAAG,EAAAC,KAEAgE,EAAA,6FCtQA,QAAAC,EAAA,QACAA,EAAA,uDAWA,IAAMC,EAAU,WAMdvG,KAAKwG,kBAYPD,EAAQrG,UAAUuG,eAAiB,SAASC,EAAKC,GAC1C3G,KAAKwG,cAAcE,IACtB1G,KAAK4G,iBAAiBF,GAExB1G,KAAKwG,cAAcE,GAAKG,KAAkCF,IAS5DJ,EAAQrG,UAAU4G,iBAAmB,SAASJ,GAC5C1G,KAAK4G,iBAAiBF,IAaxBH,EAAQrG,UAAU0G,iBAAmB,SAASF,GACvC1G,KAAKwG,cAAcE,GAGlB1G,KAAKwG,cAAcE,GAAK7F,SAC1Bb,KAAKwG,cAAcE,GAAKK,QAAQC,UAASC,eACzCjH,KAAKwG,cAAcE,GAAK7F,OAAS,GAJnCb,KAAKwG,cAAcE,QAavBH,EAAQW,OAASC,QAAQD,OAAO,uBACjBE,QAAQ,kBAAmBb,GAC1Cc,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,gGCpEbiB,IAAK,KAKLC,IAAK,IAKLC,GAAI,yFCnBN,QAAApB,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,wDAKA,IAAMC,EAAUY,QAAQD,OAAO,cAE/BG,UAASH,OAAOI,SAAST,KAAKN,EAAQgB,MAgCtChB,EAAQoB,WAAa,SAASC,GAC5B,OACEC,SAAU,IAMVC,KAAM,SAACC,EAAOC,EAASC,GAErB,IACMC,EAAOD,EAAA,QAEPE,EAAMJ,EAAMK,MAAMF,GACxBG,UAAYC,iBAAiBH,EAAKI,WAElCJ,EAAIK,UAAUR,EAAQ,IAOtB,IACMS,EAAmBR,EAAA,oBAGzB,GAFqBF,EAAMK,MAAMK,GAEf,CAChB,IACMC,EAAuBT,EAAA,wBAEvBU,EACJZ,EAAMK,MAAMM,GAEd1B,UAAS4B,OACPhB,EACA,SACA,WACE,GAAIe,EAAkB,CAEpB,IAAME,EAAQC,KAAKC,MACfC,GAAO,GACQ,SAAbC,IACJd,EAAIe,aACJf,EAAIgB,aACAH,GACFpB,EAAQwB,sBAAsBH,GAE5BH,KAAKC,MAAQF,EAAQF,IACvBK,GAAO,GAGXC,QAGAd,EAAIe,mBAvDlB3C,EAAQoB,+BAiERpB,EAAQ8C,UAAU,UAAW9C,EAAQoB,sBAGtBpB,qFC9Gf,QAAAD,EAAA,QACAA,EAAA,UACAA,EAAA,OACAA,EAAA,yDAyBA,IAAMC,EAAU,SAAS+C,EAAYC,EAAWC,EAC9CC,EAAgBC,GAMhB1J,KAAK2J,YAAcL,EAMnBtJ,KAAK4J,WAAaL,EAMlBvJ,KAAK6J,UAAYL,EAMjBxJ,KAAK8J,gBAAkBL,EAMvBzJ,KAAK+J,kBAAoBL,EAMzB1J,KAAKgK,WAAa,0MAYpBzD,EAAQrG,UAAU+J,SAAW,SAASC,EAAOC,GACvCnK,KAAK6J,WACP7J,KAAK+J,kBAAkBK,aACrBF,MAASA,EAAM3C,OAEjBvH,KAAKqK,aAAaH,EAAM3C,MACxBvH,KAAK8J,gBAAgBQ,oBAAoBJ,EAAMK,WAE/CvK,KAAK8J,gBAAgBU,oBAAoBN,EAAMK,UAAU,EAAOJ,IASpE5D,EAAQrG,UAAUuK,aAAe,WAC/B,OAAOzK,KAAKgK,YAQdzD,EAAQrG,UAAUwK,UAAY,WAC5B,OAAQ1K,KAAK4J,WAAWe,QAO1BpE,EAAQrG,UAAUmK,aAAe,SAAS9C,EAAM4C,GAC9CnK,KAAKgK,WAAazC,EACb4C,GACHnK,KAAK2J,YAAYiB,MAAMrE,EAAQsE,UAAUC,eAAgBvD,IAS7DhB,EAAQrG,UAAU6K,UAAY,WAC5B/K,KAAK8J,gBAAgBiB,aAOvBxE,EAAQsE,WAINC,eAAgB,oCAOlBvE,EAAQW,OAASC,QAAQD,OAAO,mBAC9B8D,UAAwB9D,OAAOK,KAC/B0D,UAAwB/D,OAAOK,QAMlB2D,MAAM,2BAA2B,GAEhD3E,EAAQW,OAAOE,QAAQ,kBAAmBb,GAC1C4E,UAAQjE,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG7BhB,qFC5Jf,MAAA6E,EAAA9E,EAAA,uCAKA,IAAMC,EAAUY,QAAQD,OAAO,mBAE/BG,UAASH,OAAOI,SAAST,KAAKN,EAAQgB,MActChB,EAAQ8E,SAAW,SAASC,GAC1B,gBASWC,EAAMC,EAAMC,GAInB,IAAIC,EAAU,KACd,OACE,WAAkB,QAAAC,EAAAjL,UAAAG,OAAN+K,EAAMpL,MAAAmL,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAnL,UAAAmL,GAChB,IAAMC,EAAU9L,KAKA,OAAZ0L,GACFJ,EAASS,OAAOL,GAElBA,EAAUJ,EAPI,WACZI,EAAU,KACVH,EAAKpK,MAAM2K,EAASF,IAKIJ,EAAMC,MAzB1ClF,EAAQ8E,8BA8BR9E,EAAQyF,QAAQ,eAAgBzF,EAAQ8E,oBAGzB9E,qFCtDf,QAAAD,EAAA,QACAA,EAAA,wDAKA,IAAMC,EAAUY,QAAQD,OAAO,mBAE/BG,UAASH,OAAOI,SAAST,KAAKN,EAAQgB,MAEtChB,EAAQ2E,MAAM,eAAgB,IAAIe,qBAGnB1F,qFCbf,QAAAD,EAAA,sJACAA,EAAA,MACAA,EAAA,wDAOA,IAAMC,EAAU,SAAS2F,EAASC,GAMhCnM,KAAKoM,SAAWF,EAMhBlM,KAAKqM,UAAY,KAMjBrM,KAAKsM,OAASH,GAShB5F,EAAQrG,UAAUqM,WAAa,SAASC,GACtCxM,KAAKoM,SAASG,WAAWC,EAASxM,KAAKsM,SASzC/F,EAAQrG,UAAUuM,cAAgB,SAASD,GACzCxM,KAAKoM,SAASK,cAAcD,EAASxM,KAAKsM,SAQ5C/F,EAAQrG,UAAUwM,MAAQ,WACxB1M,KAAKoM,SAASM,MAAM1M,KAAKsM,SAa3B/F,EAAQrG,UAAUyM,YAAc,SAASC,GAChB,OAAnB5M,KAAKqM,YACPrM,KAAKqM,UAAUK,QACf1F,UAAS6F,SAAS7M,KAAKqM,UAAW,MAAOrM,KAAK8M,kBAAmB9M,MACjEgH,UAAS6F,SAAS7M,KAAKqM,UAAW,SAAUrM,KAAK+M,qBAAsB/M,OAExD,OAAb4M,IACFA,EAAS7F,QAAQ,SAASyF,GACxBxM,KAAKuM,WAAWC,IACfxM,MACHgH,UAAS4B,OAAOgE,EAAU,MAAO5M,KAAK8M,kBAAmB9M,MACzDgH,UAAS4B,OAAOgE,EAAU,SAAU5M,KAAK+M,qBAAsB/M,OAEjEA,KAAKqM,UAAYO,GAUnBrG,EAAQrG,UAAU8M,SAAW,SAASC,GACpCjN,KAAKoM,SAASY,SAASC,EAAOjN,KAAKsM,SAQrC/F,EAAQrG,UAAU4M,kBAAoB,SAASI,GAC7C,IAAMV,EAAqCU,EAAIlF,QAC/ChI,KAAKuM,WAAWC,IAQlBjG,EAAQrG,UAAU6M,qBAAuB,SAASG,GAChD,IAAMV,EAAqCU,EAAIlF,QAC/ChI,KAAKyM,cAAcD,IAMrBjG,EAAQW,OAASC,QAAQD,OAAO,yBAChCG,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,8HC9Hf4G,EAAA7G,EAAA,GAoBA,MAAA8G,EAAA,SAAAC,GAEA,MAAAC,EAAAD,MAMArN,KAAAuN,WAAA,yCAOAvN,KAAAwN,WAAA,IAAAC,EAAA,QAOAzN,KAAA0N,QAAAJ,EAAAK,OAAAL,EAAAK,OAAA,KAEAC,EAAA,EAAArN,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAAyM,EAAAQ,EAAA,GAQAR,EAAAU,mBAAA,WAQAV,EAAAW,iBAAA,SAMAX,EAAAlN,UAAA8N,UAAA,WACA,OAAAhO,KAAA0N,SAOAN,EAAAlN,UAAA+N,UAAA,SAAAN,GACA3N,KAAA0N,QAAAC,GAUAP,EAAAlN,UAAAgO,cAAA,SAAAC,EAAAC,GACAD,EAAAE,aAAA,eAAArO,KAAAuN,YACA,MAAAe,EAAAH,EAAAG,UAEA,IAAA1B,KACA,OAAAuB,EAAAI,WAAA1N,OACA,OAAA+L,EAEA,kBAAA0B,EACA,QAAAE,EAAA,EAAAC,EAAAN,EAAAI,WAAA1N,OAAgD2N,EAAAC,EAAQD,IAAA,CACxD,MAAAE,EAAAP,EAAAI,WAAAC,GACA,GAAAE,EAAAC,WAAAC,KAAAC,aACA,SAEA,MAAA/C,EAAAsC,EAAA,GAEAU,EAAA1B,EAAAW,iBACAgB,EAAAL,EAAAJ,UAAAU,QAAAF,EAAA,IAEA,GAAA9O,KAAA0N,UAAA/M,OAAAsO,EAAA,SAAAtO,CAAAX,KAAA0N,QAAAqB,GACA,SAGA,MAAAG,EAAAH,EACA3B,EAAAU,mBAEAhC,EAAA,YAAAoD,EACApD,EAAA,UAAA9L,KAAAuN,WAEA,MAAA4B,KACAA,EAAAD,GAAA/B,EAAA,QAAAiC,gBACApP,KAAAwN,WAAA6B,mBAAArP,KAAAwN,YACA,MAAA8B,EAAAnC,EAAA,QAAAoC,iBACAzD,EAAA,gBAAAqD,GACAT,EAAAL,aAAA,eAAArO,KAAAuN,YACA,MAAAiC,EAAArC,EAAA,QAAAsC,mBACAH,EAAAZ,EAAAN,EAAApO,KAAAwN,YACAgC,GACA7O,OAAAsO,EAAA,OAAAtO,CAAAiM,EAAA4C,GAIA,wBAAAlB,EAAA,CACA,MAAAoB,EAAAvC,EAAA,QAAAsC,mBACAzP,KAAAwN,WAAAmC,2BAAAxB,OACSnO,KAAAwN,YACTkC,IACA9C,EAAA8C,GAGA,OAAA9C,GAaAQ,EAAAlN,UAAA0P,aAMAxC,EAAAlN,UAAA2P,qBAAA,SAAA1B,EAAAd,GACA,MAAAC,KAIA,OAHAD,GACA1M,OAAAmP,EAAA,OAAAnP,CAAA2M,EAAAtN,KAAA+P,eAAA5B,EAAAd,IAEArN,KAAAkO,cAAAC,GAAAb,KAQAF,EAAAlN,UAAA8P,iBAAA,SAAAxD,EAAAa,KAOAD,EAAAlN,UAAA+P,kBAAA,SAAArD,EAAAS,KAOAD,EAAAlN,UAAAgQ,kBAAA,SAAAtO,EAAAyL,KACAhH,EAAA,6FCtLA,QAAAC,EAAA,SACAA,EAAA,OACAA,EAAA,UACAA,EAAA,QACAA,EAAA,KACY6J,0JAAZ7J,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAwBA,IAAMC,EAAU,SAAS6J,EAAOC,EAAI/G,EAAYgC,EAAU/B,EACxDE,GAQAzJ,KAAKsQ,MAAQF,EAMbpQ,KAAKuQ,GAAKF,EAMVrQ,KAAKwQ,WAAalH,EAMlBtJ,KAAKyQ,SAAWnF,EAMhBtL,KAAK4J,WAAaL,EAMlBvJ,KAAK8J,gBAAkBL,EAWvBzJ,KAAK0Q,UAML1Q,KAAKwG,iBAMLxG,KAAK2Q,KAAO,KASZ3Q,KAAK4Q,sBAAwB,KAO7B5Q,KAAK6Q,YAAc,kKAcrBtK,EAAQrG,UAAU4Q,4BAA8B,WAC9C,IAAM3I,EAAMnI,KAAK2Q,KACjBtI,UAAY0I,OAAO5I,GAEnB,IAAI6I,SACJ,IAAK,IAAMtK,KAAO1G,KAAK0Q,QACrBM,EAAOhR,KAAK0Q,QAAQhK,IACXuK,SACP5I,UAAY0I,OAAOC,EAAKE,aACxB/I,EAAIgJ,kBAAkBH,EAAKE,aAC3B/I,EAAIiJ,eAAeJ,EAAKE,eAW9B3K,EAAQrG,UAAUmR,OAAS,SAASlJ,GAAK,IAAAmJ,EAAAtR,KAEjCuR,EAAOvR,KAAKwG,cAEdxG,KAAK2Q,OACP3Q,KAAKwR,uBACLxR,KAAKyR,yBACLF,EAAKxK,QAAQC,UAASC,eACtBsK,EAAK1Q,OAAS,GAGhBb,KAAK2Q,KAAOxI,EAERA,IACFnI,KAAKwR,qBAAuBxR,KAAKwQ,WAAWkB,iBAAiB,WAC3D,GAAIJ,EAAKxH,gBAAgB6H,SACvB,OAAOL,EAAKxH,gBAAgB6H,SAASpH,UAEtC,SAACW,GAGFoG,EAAKb,SAAS,WACRvF,IACFoG,EAAKG,yBACLH,EAAKxH,gBAAgB6H,SAASC,mBAAmBN,EAAKO,kBAAkBzM,KAAvBkM,MAElD,KAGLC,EAAK1K,KACHG,UAAS4B,OAAO5I,KAAK4J,WAAY,SAAU5J,KAAK8R,oBAAqB9R,MACrEgH,UAAS4B,OAAOT,EAAK,UAAWnI,KAAK+R,kBAAmB/R,SAW9DuG,EAAQrG,UAAU4R,oBAAsB,WAAW,IAAAE,EAAAhS,KACjDA,KAAK6Q,YAAc,KACnB7Q,KAAK4J,WAAWqI,sBAAsBC,KAAK,SAACC,GAC1CH,EAAKnB,YAAcsB,KAavB5L,EAAQrG,UAAU2R,kBAAoB,SAASO,GAG7C,IAAIjE,EAA6DiE,EAASjE,KAC1E,IAAIA,EAAK5D,SAAT,CAMA4D,EAA0CiE,EAASjE,KACnD,IAAMkE,EAAiBC,UAAeC,kBAAkBpE,GACxD,GAAIkE,EAAgB,CAClB,IAAMG,EAAYxS,KAAKyS,cAAcL,GACrC,GAAII,EAAW,CACb,IAAM9L,EAAMyJ,EAAOuC,OAAON,GAEpBO,EAAyB3S,KAAKwQ,WAAWoC,OAC7C,kBAAMR,EAASS,YACf7S,KAAK8S,2BAA2B1N,KAAKpF,KAAMoS,IAK7CpS,KAAK0Q,OAAOhK,IACVuK,QAAQ,EACR8B,UAAW,yCACXC,cAAe,UACfpG,SAAU,IAAIX,UACd3K,aAAc,OACd4P,YAAa,KACb+B,YAAa,GACbC,gBAAiB,KACjBb,eAAgBA,EAChBD,SAAUA,EACVI,UAAWA,EACXG,uBAAwBA,GAI1B3S,KAAK8S,2BAA2BV,EAAUA,EAASS,gBAYzDtM,EAAQrG,UAAUuR,uBAAyB,WACzC,IAAK,IAAM/K,KAAO1G,KAAK0Q,OAAQ,CAC7B,IAAMM,EAAOhR,KAAK0Q,QAAQhK,GACtBsK,IACFA,EAAK2B,yBACL3S,KAAKmT,gBAAgBnC,UACdhR,KAAK0Q,QAAQhK,MA0B1BH,EAAQrG,UAAUuS,cAAgB,SAASL,GAGzC,GAAyB,OAArBpS,KAAK6Q,YACP,OAAO,KAGT,IAAMuC,EAA8ChB,EAASjE,KAG7D,GAAIiF,EAASC,OAASf,UAAegB,SAASC,IAC5C,OAAO,KAOT,IAJA,IAAMC,EAAoDJ,EAGpDK,KACGjF,EAAI,EAAGC,EAAK+E,EAAYE,YAAY7S,OAAQ2N,EAAIC,EAAID,IACvDgF,EAAYE,YAAYlF,GAAGmF,WAC7BF,EAAa5M,KAAK2M,EAAYE,YAAYlF,GAAGjH,MAGjD,IAAKkM,EAAa5S,OAChB,OAAO,KAIT,IAAI+S,SACgDxB,EAASyB,OAAO1F,KACvD2F,MACXF,EAAgBJ,EAAYO,UAI5BH,EAFsBI,UAAwBC,mBAAmB7B,GACEjE,KACzC4F,UAE5B,IAAKH,EACH,OAAO,KAIT,IAAMG,EAAY/T,KAAK6Q,YAAY+C,GACnC,IAAKG,EAAUG,WACb,OAAO,KAKT,IAAMC,EAASJ,EAAUI,OAGzB,OAFA9L,UAAY0I,OAAOoD,EAAQ,8BAGzBV,aAAcA,EAAaW,KAAK,KAChCC,IAAKF,IAUT5N,EAAQrG,UAAU4S,2BAA6B,SAASV,EAAUkC,GAEhE,IAAM5N,EAAMyJ,EAAOuC,OAAON,GACpBpB,EAAOhR,KAAK0Q,OAAOhK,GAIV,OAAX4N,EACFtU,KAAKuU,cAAcvD,GAEnBhR,KAAKmT,gBAAgBnC,IAYzBzK,EAAQrG,UAAUqU,cAAgB,SAASvD,GAGzC,IAAIA,EAAKC,OAAT,CAIA,IAAM9I,EAAMnI,KAAK2Q,KACjBtI,UAAY0I,OAAO5I,GAEnB,IAAM+I,EAAc,IAAIsD,WACtBC,KAAMzD,EAAKqB,eAAeoC,KAC1B7H,SAAUoE,EAAKpE,SACf8H,eAAgB1D,EAAKqB,eAAesC,UACpCC,OAAQ5D,EAAKqB,eAAeuC,SAG9BzM,EAAIiJ,eAAeF,GAEnBF,EAAKE,YAAcA,EACnBF,EAAKC,QAAS,EAGdjR,KAAK6U,kBAAkB7D,KAWzBzK,EAAQrG,UAAUiT,gBAAkB,SAASnC,GAG3C,GAAKA,EAAKC,OAAV,CAIA,IAAM9I,EAAMnI,KAAK2Q,KACjBtI,UAAY0I,OAAO5I,GAEnB,IAAM+I,EAAcF,EAAKE,YACzB/I,EAAIgJ,kBAAkBD,GAEtBF,EAAKE,YAAc,KACnBF,EAAKpE,SAASF,QAGVsE,EAAKkC,kBACPlC,EAAKkC,gBAAgB4B,UACrB9D,EAAKkC,gBAAkB,MAGzBlC,EAAKC,QAAS,IAOhB1K,EAAQrG,UAAU6U,cAAgB,WAChC/U,KAAK4Q,sBAAwB,KAC7B,IAAII,SACJ,IAAK,IAAMtK,KAAO1G,KAAK0Q,QACrBM,EAAOhR,KAAK0Q,QAAQhK,IACXuK,QACPjR,KAAK6U,kBAAkB7D,IAc7BzK,EAAQrG,UAAU2U,kBAAoB,SAAS7D,GAGzCA,EAAKkC,iBACPlC,EAAKkC,gBAAgB4B,UAGvB,IAAM3M,EAAMnI,KAAK2Q,KACjBtI,UAAY0I,OAAO5I,GAEnB,IAAM6M,EAAO7M,EAAI8M,UACXC,EAAO/M,EAAIgN,UACjB9M,UAAY0I,OAAOmE,GAEnB,IAAM3T,EAASyT,EAAKI,gBAAgBF,GAC9BG,EAAWL,EAAKM,gBAAgBC,UAChC9B,EAAezC,EAAKwB,UAAUiB,aAAa+B,MAAM,KAEjDC,GACJhU,QAAS4T,EACTtC,UAAW/B,EAAK+B,UAChBC,cAAehC,EAAKgC,cACpBS,aAAcA,EACdiC,aAAc,OACdnQ,KAAMhE,EACND,aAAc0P,EAAK1P,aACnB2R,YAAajC,EAAKiC,aAGd0C,EAAY,IAAIC,UAChBC,EAAgB,IAAIC,cACpBC,EAAoBJ,EAAUK,gBAAgBP,GAC9CQ,EAAiBJ,EAAcK,kBAAkBH,GACjD1B,EAAMrD,EAAKwB,UAAU6B,IAE3BrD,EAAKkC,gBAAkBlT,KAAKuQ,GAAG4F,QAE/BnW,KAAKsQ,MAAM8F,KAAK/B,EAAK4B,GAAiBvK,QAASsF,EAAKkC,gBAAgBmD,UACjEnE,KAAK,SAACoE,GAELtF,EAAKkC,gBAAkB,KAGvBlC,EAAKpE,SAASF,QAGd,IAAMkD,GAAe,IAAIgG,WAAchG,aAAa0G,EAASC,MACzD3G,GACFoB,EAAKpE,SAAS4J,OAAO5G,MAY7BrJ,EAAQrG,UAAU6R,kBAAoB,WAChC/R,KAAK4Q,uBACP5Q,KAAKyQ,SAAS1E,OAAO/L,KAAK4Q,uBAE5B5Q,KAAK4Q,sBAAwB5Q,KAAKyQ,SAChCzQ,KAAK+U,cAAc3P,KAAKpF,MACxB,OA0CJuG,EAAQW,OAASC,QAAQD,OAAO,eAC9BoL,UAAepL,OAAOK,KACtByM,UAAwB9M,OAAOK,QAElBH,QAAQ,cAAeb,GACtC4E,UAAQjE,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG7BhB,qFC7jBf,QAAAD,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,OACAA,EAAA,wDAKA,IAAMC,EAAUY,QAAQD,OAAO,mBAC7BuP,UAAsBvP,OAAOK,KAC7BmP,UAAmBxP,OAAOK,KAC1BoP,UAAiBpP,KACjBqP,UAAyB1P,OAAOK,OAGlC4D,UAAQjE,OAAOI,SAAST,KAAKN,EAAQgB,MAsBrChB,EAAQoB,WAAa,WACnB,OACEI,OACEI,IAAO,aACP0O,aAAgB,sBAChBlO,iBAAoB,2BAEtBmO,WAAY,2BACZC,kBAAkB,EAClBC,YAAgB7L,UAAQ8L,sBAAxB,wBAIJ1Q,EAAQ8C,UAAU,SAAU9C,EAAQoB,YAapCpB,EAAQ2Q,YAAc,SAASC,EAAuBC,EAAcC,GAQlErX,KAAKmI,IAMLnI,KAAK6W,aAML7W,KAAK2I,iBASL3I,KAAKsX,uBAAyBH,EAM9BnX,KAAKuX,cAAgBH,EAMrBpX,KAAKwX,aAAeH,GAzCtB9Q,EAAQ2Q,2EAgDR3Q,EAAQ2Q,YAAYhX,UAAUuX,QAAU,WACtCzX,KAAKsX,uBAAuBI,KAAK1X,KAAKmI,KACtCnI,KAAKuX,cAAclG,OAAOrR,KAAKmI,KAC/BnI,KAAKwX,aAAanG,OAAOrR,KAAKmI,MAIhC5B,EAAQuQ,WAAW,mBAAoBvQ,EAAQ2Q,uBAGhC3Q,kGC3Hf,MAAY4J,0JAAZ7J,EAAA,IACAqR,EAAArR,EAAA,yCAWA,IAAMC,EAAU,SAAS8G,GAEvB,IAAMC,OAA0BxJ,IAAhBuJ,EAA4BA,KAExCuK,SACAtK,EAAQtF,SACV4P,EAAatK,EAAQtF,eACdsF,EAAQtF,SAEf4P,EAAaC,EAAE,WAAW,GAO5B7X,KAAK8X,SAAWD,EAAE,YAChBE,MAAS,QACTC,KAAQ,YAOVhY,KAAKiY,WAAaJ,EAAE,UACjBK,OAAOlY,KAAK8X,UACZI,OAAON,GAEVtK,EAAQtF,QAAU6P,EAAE,WAAW,GAE/BM,UAAU5X,KAAKP,KAAMsN,IAIvB6C,EAAOiI,SAAS7R,EAAS4R,WAMzB5R,EAAQrG,UAAUmR,OAAS,SAASlJ,GAAK,IAAAmJ,EAAAtR,KAEjCgI,EAAUhI,KAAKqY,aASrB,GAPmBrY,KAAKsY,UAEtBT,EAAE7P,GAASuQ,QAAQ,WAGrBJ,UAAUjY,UAAUmR,OAAO9Q,KAAKP,KAAMmI,GAElCA,EAAK,CACP,IAAMqQ,EAAYxY,KAAKiY,WAEvBQ,OAAOC,WAAW,WAChBb,EAAE7P,GACCuQ,SACCI,QAAWH,EACXR,MAAQ,EACRY,UAAa,MACbC,UACE,oDACA,8BACA,oCACA,wCACA,UACAzE,KAAK,MAERmE,QAAQ,SACV,GAEHvY,KAAK8X,SAASgB,IAAI,QAAS,WACzB,IAAM3Q,EAAMmJ,EAAKgH,SACbnQ,GACFA,EAAI4Q,cAAJzH,iBAOO/K,qGC9Ff,IAAMA,GAMNA,kBAKEyS,QAAS,aAKTC,IAAK,SAKLC,IAAK,SAKLC,UAAW,eAKXC,QAAS,aAKTC,MAAO,WAKPC,OAAQ,kBAIK/S,qFC7Cf,QAAAD,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,KACY6J,IAAZ7J,EAAA,QACAA,EAAA,KACYiT,IAAZjT,EAAA,KACYkT,IAAZlT,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,OACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,iNA0BA,IAAMC,EAAU,SAAVA,EAAmB8G,GAEvBoM,UAAoBlZ,KAAKP,MAEzB,IAAMsN,OAA0BxJ,IAAhBuJ,EAA4BA,KAM5CrN,KAAK0Z,eAAiC5V,IAArBwJ,EAAQqM,SACvBrM,EAAQqM,SAAWpT,EAAQqT,UAM7B5Z,KAAK6Z,mBAAyC/V,IAAzBwJ,EAAQwM,cAC3BxM,EAAQwM,aAMV9Z,KAAK+Z,yBAA6CjW,IAAvBwJ,EAAQ0M,WACjC1M,EAAQ0M,WAAazT,EAAQ0T,2BAM/Bja,KAAKka,eAAiCpW,IAArBwJ,EAAQN,UAAyBM,EAAQN,SAM1DhN,KAAKma,OAAS,EAMdna,KAAKoa,OAAS,EAMd7T,EAAQ8T,uBAAgDvW,IAA3BwJ,EAAQgN,gBAAkChN,EAAQgN,gBAIjFnK,EAAOiI,SAAS7R,EAASkT,WAOzBlT,EAAQgU,aACNC,WAAcC,UAA+BC,YAC7CC,MAASF,UAA+BG,MACxCC,QAAWJ,UAA+BK,QAC1CC,gBAAmBN,UAA+BC,YAClDM,WAAcP,UAA+BG,MAC7CK,aAAgBR,UAA+BK,SAOjDvU,EAAQ8T,qBAMR9T,EAAQrG,UAAUgb,YAMlB3U,EAAQrG,UAAU0P,aAMlBrJ,EAAQrG,UAAUib,aAMlB5U,EAAQrG,UAAUkb,aAMlB7U,EAAQrG,UAAUmb,cAMlB9U,EAAQrG,UAAUob,cAUlB/U,EAAQgV,QACJ,mEAOJhV,EAAQqT,UAAY,GAUpBrT,EAAQ0T,2BAA6B,SAASzN,GAC5C,OAAOA,EAAQgP,iBAUjBjV,EAAQkV,oBAAsB,SAASC,GACrC,IAAIC,EAAYD,GAAO,EAIvB,OAHIA,EAAM,IACRC,GAAcA,GAETpV,EAAQqV,cAAcD,IAU/BpV,EAAQqV,cAAgB,SAASF,GAE/B,IADA,IAAIG,EAAgB,GACbH,GAAO,IACZG,GAAiBtV,EAAQgV,QAAQO,OAC/B,GAAc,GAANJ,GACVA,IAAQ,EAGV,OADAG,GAAiBtV,EAAQgV,QAAQO,OAAOJ,IAc1CnV,EAAQsT,cAAgB,SAASkC,EAAQC,EAAcC,GACrD,IAAMC,EAAY3V,EAAQgU,YAAYyB,GACtC3T,UAAY0I,YAAqBjN,IAAdoY,GACnB,IAAK,IAAI1N,EAAI,EAAGA,EAAIuN,EAAOlb,SAAU2N,EAAG,CACtC,IAAMvB,EAAQ8O,EAAOvN,GACf2N,EAAYlP,EAAMmP,UAClBC,EAAapP,EAAMqP,WACnBC,EAActP,EAAMuP,YACpBC,EAAYxP,EAAMyP,UACpBR,GAAazB,UAA+BK,QAC5B,OAAdqB,GACF5V,EAAQoW,oBACNR,EAAWI,EAAaN,GAEnBC,GAAazB,UAA+BC,YACjC,OAAhB6B,GACFhW,EAAQqW,iBAAiBL,EAAaN,GAE/BC,GAAazB,UAA+BG,OAClC,OAAfyB,GACF9V,EAAQsW,kBAAkBR,EAAYJ,GAGxB,OAAdQ,GACFlW,EAAQuW,iBAAiBL,EAAWR,KAa1C1V,EAAQqW,iBAAmB,SAASL,EAAaN,GAC/C1V,EAAQwW,mBAAmBR,EAAaN,IAW1C1V,EAAQsW,kBAAoB,SAASR,EAAYJ,GAC/C,GAAII,aAAsBW,UAAe,CACvC,IAAMC,EAASZ,EAAWa,YACtBjB,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKsW,kCAAkCF,IACrD,IAAMd,EAAYE,EAAWD,UACX,OAAdD,GACF5V,EAAQ6W,iBAAiBjB,EAAWF,GAEtC,IAAMM,EAAcF,EAAWG,YACX,OAAhBD,GACFhW,EAAQwW,mBAAmBR,EAAaN,KAe9C1V,EAAQoW,oBAAsB,SAASR,EAAWI,EAAaN,GAC7D1V,EAAQ6W,iBAAiBjB,EAAWF,GAChB,OAAhBM,GACFhW,EAAQwW,mBAAmBR,EAAaN,IAc5C1V,EAAQ6W,iBAAmB,SAASjB,EAAWF,EAAeoB,GAC5D,IAAMpb,OAAoC6B,IAArBuZ,EACnBA,EAAmB,YACfC,EAAYnB,EAAUoB,WAC5B,GAAkB,OAAdD,EAAoB,CACtBjV,UAAY0I,OAAOvQ,MAAMgd,QAAQF,GAAY,+BAC7C,IAAMG,EAAgBlE,EAAQmE,QAAQJ,GACtCjV,UAAY0I,OAAOvQ,MAAMgd,QAAQC,GAAgB,+BACjD,IAAME,EAAeC,UAAUC,cAAcJ,GACzCxB,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KACZsW,mBAAsBlb,EAAtB,IAAsC0b,MAY5CpX,EAAQwW,mBAAqB,SAASR,EAAaN,GACjD,IAAM6B,EAAcvB,EAAYgB,WAChC,GAAoB,OAAhBO,EAAsB,CACxBzV,UAAY0I,OAAOvQ,MAAMgd,QAAQM,IACjC,IAAMC,EAAkBxE,EAAQmE,QAAQI,GACxCzV,UAAY0I,OAAOvQ,MAAMgd,QAAQO,GAAkB,iCACnD,IAAMC,EAAiBJ,UAAUC,cAAcE,GAC3C9B,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKsW,kCAAkCa,IAEvD,IAAMC,EAAc1B,EAAY2B,gBACZpa,IAAhBma,IACEhC,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKsW,kCAAkCc,MAYzD1X,EAAQuW,iBAAmB,SAASL,EAAWR,GAC7C,IAAMkC,EAAY1B,EAAU2B,UAC5B,QAAkBta,IAAdqa,EAAyB,CAC3B,IAAME,EAAOF,EAAU3I,MAAM,KACzB6I,EAAKxd,QAAU,IACbob,EAAcpb,OAAS,GACzBob,EAAcpV,KAAK,KAErBoV,EAAcpV,KAAKsW,+BAA+BkB,EAAK,MAG3D,IAAMlC,EAAYM,EAAUL,UACV,OAAdD,GACF5V,EAAQ6W,iBACNjB,EAAWF,EAAe,cAahC1V,EAAQ+X,wBAA0B,SAASC,GACzClW,UAAY0I,OAAgC,OAAzBwN,EAAKC,UAAU,EAAG,IACrCnW,UAAY0I,OAAgC,KAAzBwN,EAAKA,EAAK1d,OAAS,IACtC0d,EAAOA,EAAKC,UAAU,EAAGD,EAAK1d,OAAS,GACvC,IAAM4d,EAAkBze,KAAK0e,mBAAmBH,GAC1CI,EAAa,IAAIC,UAAiB,MAExC,OADAD,EAAWE,mBAAmBC,UAAqBC,GAAIN,GAChDE,GAYTpY,EAAQyY,6BAA+B,SAAST,GAC9ClW,UAAY0I,OAAgC,OAAzBwN,EAAKC,UAAU,EAAG,IACrCnW,UAAY0I,OAAgC,KAAzBwN,EAAKA,EAAK1d,OAAS,IAKtC,IAHA,IAAI4d,KACEQ,KACAC,GAHNX,EAAOA,EAAKC,UAAU,EAAGD,EAAK1d,OAAS,IAGd2U,MAAM,KACtBhH,EAAI,EAAGC,EAAKyQ,EAAYre,OAAQ2N,EAAIC,IAAMD,EACjDiQ,EAAkBze,KAAK0e,mBAAmBQ,EAAY1Q,GAAIiQ,GAC1DQ,EAAKzQ,GAAKiQ,EAAgB5d,OAE5B,IAAMse,EAAkB,IAAIC,UAAsB,MAGlD,OAFAD,EAAgBN,mBACdC,UAAqBC,GAAIN,EAAiBQ,GACrCE,GAYT5Y,EAAQ8Y,mBAAqB,SAASd,GACpClW,UAAY0I,OAAgC,OAAzBwN,EAAKC,UAAU,EAAG,IACrCnW,UAAY0I,OAAgC,KAAzBwN,EAAKA,EAAK1d,OAAS,IACtC0d,EAAOA,EAAKC,UAAU,EAAGD,EAAK1d,OAAS,GACvC,IAAM4d,EAAkBze,KAAK0e,mBAAmBH,GAChDlW,UAAY0I,OAAkC,IAA3B0N,EAAgB5d,QACnC,IAAMye,EAAQ,IAAIC,UAAY,MAE9B,OADAD,EAAMT,mBAAmBC,UAAqBC,GAAIN,GAC3Ca,GAYT/Y,EAAQiZ,wBAA0B,SAASjB,GACzClW,UAAY0I,OAAgC,OAAzBwN,EAAKC,UAAU,EAAG,IACrCnW,UAAY0I,OAAgC,KAAzBwN,EAAKA,EAAK1d,OAAS,IACtC0d,EAAOA,EAAKC,UAAU,EAAGD,EAAK1d,OAAS,GACvC,IAAM4d,EAAkBze,KAAK0e,mBAAmBH,GAC1CkB,EAAa,IAAIC,UAAiB,MAExC,OADAD,EAAWZ,mBAAmBC,UAAqBC,GAAIN,GAChDgB,GAYTlZ,EAAQoZ,qBAAuB,SAASpB,GACtClW,UAAY0I,OAAgC,OAAzBwN,EAAKC,UAAU,EAAG,IACrCnW,UAAY0I,OAAgC,KAAzBwN,EAAKA,EAAK1d,OAAS,IAKtC,IAHA,IAAI4d,KACEQ,KACAW,GAHNrB,EAAOA,EAAKC,UAAU,EAAGD,EAAK1d,OAAS,IAGpB2U,MAAM,KAChBhH,EAAI,EAAGC,EAAKmR,EAAM/e,OAAQ2N,EAAIC,IAAMD,EAAG,CAE9C,IAAInM,GADJoc,EAAkBze,KAAK0e,mBAAmBkB,EAAMpR,GAAIiQ,IAC1B5d,OAChB,IAAN2N,GACFiQ,EAAgBpc,KAASoc,EAAgB,GACzCA,EAAgBpc,KAASoc,EAAgB,KAEzCA,EAAgBpc,KAASoc,EAAgBQ,EAAKzQ,EAAI,IAClDiQ,EAAgBpc,KAASoc,EAAgBQ,EAAKzQ,EAAI,GAAK,IAEzDyQ,EAAKzQ,GAAKnM,EAEZ,IAAMwd,EAAU,IAAIC,UAAc,MAElC,OADAD,EAAQhB,mBAAmBC,UAAqBC,GAAIN,EAAiBQ,GAC9DY,GAYTtZ,EAAQwZ,0BAA4B,SAASxB,GAC3ClW,UAAY0I,OAAgC,OAAzBwN,EAAKC,UAAU,EAAG,IACrCnW,UAAY0I,OAAgC,KAAzBwN,EAAKA,EAAK1d,OAAS,IAKtC,IAHA,IAAI4d,KACEuB,KACAC,GAHN1B,EAAOA,EAAKC,UAAU,EAAGD,EAAK1d,OAAS,IAGjB2U,MAAM,MACnBhH,EAAI,EAAGC,EAAKwR,EAASpf,OAAQ2N,EAAIC,IAAMD,EAG9C,IAFA,IAAMoR,EAAQK,EAASzR,GAAGgH,MAAM,KAC1ByJ,EAAOe,EAAMxR,MACV0R,EAAI,EAAGC,EAAKP,EAAM/e,OAAQqf,EAAIC,IAAMD,EAAG,CAE9C,IAAI7d,GADJoc,EAAkBze,KAAK0e,mBAAmBkB,EAAMM,GAAIzB,IAC1B5d,OAChB,IAANqf,GACFzB,EAAgBpc,KAASoc,EAAgB,GACzCA,EAAgBpc,KAASoc,EAAgB,KAEzCA,EAAgBpc,KAASoc,EAAgBQ,EAAKiB,EAAI,IAClDzB,EAAgBpc,KAASoc,EAAgBQ,EAAKiB,EAAI,GAAK,IAEzDjB,EAAKiB,GAAK7d,EAGd,IAAM+d,EAAe,IAAIC,UAAmB,MAG5C,OAFAD,EAAavB,mBACXC,UAAqBC,GAAIN,EAAiBuB,GACrCI,GAcT7Z,EAAQ+Z,mBAAqB,SAAS/B,EAAM/R,GAC1C,GAAY,IAAR+R,EAAJ,CAGA,IAAMvE,EAAazT,EAAQga,oBAAoBhC,EAAM/R,GAC/C8Q,EAAYtD,EAAA,UACZwG,EAAWxG,EAAA,SACXyG,EAAYzG,EAAA,UACZ0G,EAAc1G,EAAA,YACd8D,EAAc9D,EAAA,YACdiE,EAAcjE,EAAA,YAEhBmC,EAAY,UACErY,IAAdwZ,IACFnB,EAAY,IAAIwE,WACdC,MAA4CtD,KAGhD,IAAIf,EAAc,UACEzY,IAAhBga,QAA6Cha,IAAhBma,IAC/B1B,EAAc,IAAIsE,WAChBD,MAA4C9C,EAC5CgD,MAA8B7C,KAGlC,IAAI5B,EAAa,UACGvY,IAAhB4c,IACFrE,EAAa,IAAIW,WACfC,OAA+ByD,EAC/BK,KAAM5E,EACN6E,OAAQzE,IAEVJ,EAAYI,EAAc,MAE5B,IAAIE,EAAY,UACC3Y,IAAb0c,QAAwC1c,IAAd2c,IAC5BhE,EAAY,IAAIwE,WACd5C,KAASmC,EAAT,cACAO,KAAM,IAAIJ,WACRC,MAA4CH,OAIlD,IAAMxT,EAAQ,IAAIiU,WAChBH,KAAM5E,EACNgF,MAAO9E,EACP2E,OAAQzE,EACRgC,KAAM9B,IAERjQ,EAAQQ,SAASC,KAYnB1G,EAAQ6a,oBAAsB,SAAS7C,EAAM/R,GAE3C,IAAMwN,EAAazT,EAAQga,oBAAoBhC,EAAM/R,GAC/C5K,EAAW4K,EAAQ6U,cAsBzB,GAnBIzf,aAAoB2d,UAClBvF,EAAA,SACAA,EAAWsH,UAA4BC,iBAClCvH,EAAA,mBACAA,EAAA,mBAEAA,EAAA,iBACAA,EAAA,kBAGFA,EAAA,UAEHpY,aAAoBgd,mBACf5E,EAAA,iBACAA,EAAA,cAKPA,EAAA,SAAwB,CAC1B,IAAIwG,EAAWgB,WAAWxH,EAAA,WACoB,IAA1CA,EAAA,SAAuByH,QAAQ,QACjCjB,EAAWkB,KAAKC,MAAMnB,EAAW,WAEnCxG,EAAA,SAAyBwG,EAI3B,IAAMoB,KACN,IAAK,IAAMjb,KAAOqT,EAAY,CAC5B,IAAM9O,EAAQ8O,EAAWrT,GACrBJ,EAAQ8T,kBAAkB1T,GAC5Bib,EAAMrb,EAAQ8T,kBAAkB1T,IAAQuE,EAExC0W,EAAMjb,GAAOuE,EAIjBsB,EAAQqV,cAAcD,IAWxBrb,EAAQub,WAAa,SAASnb,EAAKuE,GACjC,IAAM6W,GACJT,UAA4BU,MAC5BV,UAA4BW,QAC5BX,UAA4BY,KAC5BZ,UAA4Ba,OAC5B,cACA,eAEIC,GACJd,UAA4Be,UAC5Bf,UAA4BgB,aAC5BhB,UAA4BC,QAC5BD,UAA4BiB,aAC5BjB,UAA4BkB,WAC5B,WACA,cACA,UACA,cACA,aAGF,OAAIhJ,EAAQiJ,SAASV,EAAepb,IAC1BuE,EACCsO,EAAQiJ,SAASL,EAAgBzb,GACxB,SAAVuE,EAEDA,GAgBX3E,EAAQga,oBAAsB,SAAShC,EAAM/R,GAI3C,IAHA,IAAMkW,EAAQnE,EAAK/I,MAAM,KACnBwE,KAEGxL,EAAI,EAAGA,EAAIkU,EAAM7hB,SAAU2N,EAAG,CACrC,IACMmU,EADOC,mBAAmBF,EAAMlU,IAClBgH,MAAM,KAC1BnN,UAAY0I,OAAyB,IAAlB4R,EAAO9hB,QAC1B,IAAM8F,EAAMgc,EAAO,GACbE,EAAMF,EAAO,GAEnB3I,EAAWrT,GAAOJ,EAAQub,WAAWnb,EAAKkc,GAG5C,OAAO7I,GAYTzT,EAAQuc,yBAA2B,SAASlhB,GAC1CyG,UAAYC,iBAAiB1G,EAAUgd,WACvC,IAAMH,EAAkB7c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClB5gB,EAAMoc,EAAgB5d,OAC5B,WAAYb,KAAKkjB,mBAAmBzE,EAAiBuE,EAAQ,EAAG3gB,GAAhE,KAYFkE,EAAQ4c,8BAAgC,SAASvhB,GAC/CyG,UAAYC,iBAAiB1G,EAAUwd,WAOvC,IANA,IAAMH,EAAOrd,EAASwhB,UAChBC,EAAkBpE,EAAKpe,OACvB4d,EAAkB7c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YACpBK,EAAS,EACPC,GAAa,MACV/U,EAAI,EAAGA,EAAI6U,IAAmB7U,EAAG,CACxC,IAAMnM,EAAM4c,EAAKzQ,GACX+P,EAAOve,KAAKkjB,mBAAmBzE,EAAiBuE,EAAQM,EAAQjhB,GAC5D,IAANmM,GACF+U,EAAU1c,KAAK,KAEjB0c,EAAU1c,KAAK0X,GACf+E,EAASjhB,EAGX,OADAkhB,EAAU1c,KAAK,KACR0c,EAAUnP,KAAK,KAYxB7N,EAAQid,oBAAsB,SAAS5hB,GACrCyG,UAAYC,iBAAiB1G,EAAU2d,WACvC,IAAMd,EAAkB7c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClB5gB,EAAMoc,EAAgB5d,OAC5B,WAAYb,KAAKkjB,mBAAmBzE,EAAiBuE,EAAQ,EAAG3gB,GAAhE,KAYFkE,EAAQkd,yBAA2B,SAAS7hB,GAC1CyG,UAAYC,iBAAiB1G,EAAU8d,WACvC,IAAMjB,EAAkB7c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClB5gB,EAAMoc,EAAgB5d,OAC5B,WAAYb,KAAKkjB,mBAAmBzE,EAAiBuE,EAAQ,EAAG3gB,GAAhE,KAeFkE,EAAQmd,aAAe,SAASjF,EAAiBuE,EAAQM,EAAQrE,EAAMsE,GAErE,IADA,IAAMI,EAAkB1E,EAAKpe,OACpB2N,EAAI,EAAGA,EAAImV,IAAmBnV,EAAG,CAExC,IAAMnM,EAAM4c,EAAKzQ,GAAKwU,EAChBzE,EAAOve,KAAKkjB,mBAAmBzE,EAAiBuE,EAAQM,EAAQjhB,GAC5D,IAANmM,GACF+U,EAAU1c,KAAK,KAEjB0c,EAAU1c,KAAK0X,GACf+E,EAASrE,EAAKzQ,GAEhB,OAAO8U,GAYT/c,EAAQqd,sBAAwB,SAAShiB,GACvCyG,UAAYC,iBAAiB1G,EAAUke,WACvC,IAAMrB,EAAkB7c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClBhE,EAAOrd,EAASwhB,UAEhBG,GAAa,MAInB,OAHAhd,EAAQmd,aAAanjB,KAAKP,KACxBye,EAAiBuE,EAHJ,EAGoB/D,EAAMsE,GACzCA,EAAU1c,KAAK,KACR0c,EAAUnP,KAAK,KAYxB7N,EAAQsd,2BAA6B,SAASjiB,GAC5CyG,UAAYC,iBAAiB1G,EAAUye,WAOvC,IANA,IAAM5B,EAAkB7c,EAASmhB,qBAC3BC,EAASphB,EAASqhB,YAClBjD,EAAQpe,EAASkiB,WACjBC,EAAe/D,EAAMnf,OACvByiB,EAAS,EACPC,GAAa,KACV/U,EAAI,EAAGA,EAAIuV,IAAgBvV,EAAG,CACrC,IAAMyQ,EAAOe,EAAMxR,GACnB+U,EAAU1c,KAAK,KACfyc,EAAS/c,EAAQmd,aAAanjB,KAAKP,KACjCye,EAAiBuE,EAAQM,EAAQrE,EAAMsE,GACzCA,EAAU1c,KAAK,KAEjB,OAAO0c,EAAUnP,KAAK,KASxB7N,EAAQyd,mBACNC,EAAK1d,EAAQiZ,wBACb0E,EAAK3d,EAAQyY,6BACbmF,EAAK5d,EAAQwZ,0BACbqE,EAAK7d,EAAQ+X,wBACb+F,EAAK9d,EAAQ8Y,mBACbiF,EAAK/d,EAAQoZ,sBASfpZ,EAAQge,mBACNxJ,gBAAmBxU,EAAQ4c,8BAC3BnI,WAAczU,EAAQkd,yBACtBxI,aAAgB1U,EAAQsd,2BACxBrJ,WAAcjU,EAAQuc,yBACtBnI,MAASpU,EAAQid,oBACjB3I,QAAWtU,EAAQqd,uBAcrBrd,EAAQrG,UAAUwe,mBAAqB,SAASH,EAAMiG,GAMpD,IALA,IAAMC,EAAMlG,EAAK1d,OACbsL,EAAQ,EACNsS,OAA0C3a,IAAxB0gB,EACtBA,KACEhW,EAAIiQ,EAAgB5d,OACjBsL,EAAQsY,GAAK,CAClB,IAAIC,SACAC,EAAQ,EACRC,EAAS,EACb,GAEEA,IAAe,IADfF,EAAIne,EAAQgV,QAAQkG,QAAQlD,EAAKzC,OAAO3P,SAChBwY,EACxBA,GAAS,QACFD,GAAK,IACd,IAAMG,EAAgB,EAATD,IAAgBA,GAAU,GAAMA,GAAU,EACvD5kB,KAAKma,QAAU0K,EACfF,EAAQ,EACRC,EAAS,EACT,GAEEA,IAAe,IADfF,EAAIne,EAAQgV,QAAQkG,QAAQlD,EAAKzC,OAAO3P,SAChBwY,EACxBA,GAAS,QACFD,GAAK,IACd,IAAMI,EAAgB,EAATF,IAAgBA,GAAU,GAAMA,GAAU,EACvD5kB,KAAKoa,QAAU0K,EACfrG,EAAgBjQ,KAAOxO,KAAKma,OAASna,KAAK0Z,UAC1C+E,EAAgBjQ,KAAOxO,KAAKoa,OAASpa,KAAK0Z,UAE5C,OAAO+E,GAeTlY,EAAQrG,UAAUgjB,mBAAqB,SAASzE,EAAiBuE,EAAQM,EAAQjhB,GAE/E,IADA,IAAI0iB,EAAqB,GAChBvW,EAAI8U,EAAQ9U,EAAInM,EAAKmM,GAAKwU,EAAQ,CACzC,IAAIgC,EAAIvG,EAAgBjQ,GACpByW,EAAIxG,EAAgBjQ,EAAI,GAC5BwW,EAAItD,KAAKwD,MAAMF,EAAIhlB,KAAK0Z,WACxBuL,EAAIvD,KAAKwD,MAAMD,EAAIjlB,KAAK0Z,WACxB,IAAMmL,EAAKG,EAAIhlB,KAAKma,OACd2K,EAAKG,EAAIjlB,KAAKoa,OACpBpa,KAAKma,OAAS6K,EACdhlB,KAAKoa,OAAS6K,EACdF,GAAsBxe,EAAQkV,oBAAoBoJ,GAC9Cte,EAAQkV,oBAAoBqJ,GAElC,OAAOC,GAYTxe,EAAQrG,UAAUilB,oBAAsB,SAAS5G,EAAMlR,GACrDhF,UAAY0I,OAAOwN,EAAK1d,OAAS,GACjCwH,UAAY0I,OAAmB,MAAZwN,EAAK,IACxBlW,UAAY0I,OAAiC,MAA1BwN,EAAKA,EAAK1d,OAAS,IACtC,IAAIukB,EAAa7G,EAAKkD,QAAQ,KACxB4D,EAAeD,GAAc,EAC9B7G,EAAKC,UAAU,EAAG4G,GADF,IACmB7G,EAClC3c,EAAW5B,KAAKslB,qBAAqBD,EAAchY,GACnDb,EAAU,IAAI+Y,UAAU3jB,GAC9B,GAAIwjB,GAAc,EAAG,CACnB,IAAMI,EAA0BjH,EAAKC,UACnC4G,EAAa,EAAG7G,EAAK1d,OAAS,GAE1B4kB,GADNL,EAAaI,EAAwB/D,QAAQ,OACR,EACnC+D,EAAwBhH,UAAU,EAAG4G,GACrCI,EACF,GAAsB,IAAlBC,EAEF,IADA,IAAM/C,EAAQ+C,EAAejQ,MAAM,KAC1BhH,EAAI,EAAGA,EAAIkU,EAAM7hB,SAAU2N,EAAG,CACrC,IACMmU,EADOC,mBAAmBF,EAAMlU,IAClBgH,MAAM,KAC1BnN,UAAY0I,OAAyB,IAAlB4R,EAAO9hB,QAC1B,IAAI8F,EAAMgc,EAAO,GACXzX,EAAQyX,EAAO,IAChB3iB,KAAKka,WAAa3T,EAAQ8T,kBAAkB1T,KAC/CA,EAAMJ,EAAQ8T,kBAAkB1T,IAElC6F,EAAQkZ,IAAI/e,EAAKJ,EAAQub,WAAWnb,EAAKuE,IAG7C,GAAIka,GAAc,EAAG,CACnB,IAAMO,EAAaH,EAAwBhH,UAAU4G,EAAa,GAC9DplB,KAAKka,UACP3T,EAAQ+Z,mBAAmBqF,EAAYnZ,GAEvCjG,EAAQ6a,oBAAoBuE,EAAYnZ,IAI9C,OAAOA,GAYTjG,EAAQrG,UAAU0lB,qBAAuB,SAASrH,EAAMlR,GACtDhF,UAAY0I,OAAmB,MAAZwN,EAAK,IAExB,IAAM3R,KAEN,IADA2R,EAAOA,EAAKC,UAAU,GACfD,EAAK1d,OAAS,GAAG,CACtB,IAAMsL,EAAQoS,EAAKkD,QAAQ,KAC3BpZ,UAAY0I,OAAO5E,GAAS,GAC5B,IAAMK,EAAUxM,KAAKmlB,oBACnB5G,EAAKC,UAAU,EAAGrS,EAAQ,GAAIkB,GAChCT,EAAS/F,KAAK2F,GACd+R,EAAOA,EAAKC,UAAUrS,EAAQ,GAEhC,OAAOS,GAYTrG,EAAQrG,UAAUolB,qBAAuB,SAAS/G,EAAMlR,GACtD,IAAMwY,EAAiBtf,EAAQyd,kBAAkBzF,EAAK,IAItD,OAHAlW,UAAY0I,YAA0BjN,IAAnB+hB,GACnB7lB,KAAKma,OAAS,EACdna,KAAKoa,OAAS,EACPyL,EAAetlB,KAAKP,KAAMue,IAYnChY,EAAQrG,UAAU4lB,iBAAmB,SAAStZ,EAASa,GACrD,IAAoC0Y,KAIhCC,EAAkB,GAChBpkB,EAAW4K,EAAQ6U,cACrBzf,IACFokB,EAAkBhmB,KAAKimB,kBAAkBrkB,EAAUyL,IAGjD2Y,EAAgBnlB,OAAS,IAE3BwH,UAAY0I,OAAuD,MAAhDiV,EAAgBA,EAAgBnlB,OAAS,IAC5DmlB,EAAkBA,EAAgBxH,UAAU,EAAGwH,EAAgBnlB,OAAS,GACxEklB,EAAalf,KAAKmf,IAKpB,IAAoCE,KAC9BC,EAAenmB,KAAK+Z,oBAAoBvN,GAC9C,IAAK,IAAM7F,KAAOwf,EAAc,CAC9B,IAAMjb,EAAQib,EAAaxf,GAC3B,QAAc7C,IAAVoH,GAAiC,OAAVA,GAAkBvE,IAAQ6F,EAAQ4Z,kBAAmB,CAC7C,IAA7BF,EAAkBrlB,QACpBqlB,EAAkBrf,KAAK,KAEzB,IAAMwf,EAAUlJ,mBACXxW,EAAIqI,QAAQ,UAAW,KADZ,IAEZ9D,EAAMob,WAAWtX,QAAQ,UAAW,MACxCkX,EAAkBrf,KAAKwf,IAW3B,GAPIH,EAAkBrlB,OAAS,IAC7BklB,EAAalf,KAAK,KAClBrG,MAAMN,UAAU2G,KAAK1F,MAAM4kB,EAAcG,IAKvClmB,KAAK6Z,cAAe,CACtB,IAAM0M,EAAgB/Z,EAAQga,mBAC9B,QAAsB1iB,IAAlByiB,EAA6B,CAC/B,IAAIxK,EAASwK,EAAchmB,KAAKiM,EAAS,GACzC,GAAe,OAAXuP,EAAiB,CACnB,IAAME,KACNF,EAASvb,MAAMgd,QAAQzB,GAAUA,GAAUA,GAC3CxV,EAAQsT,cACNkC,EAAQna,EAAS6kB,UAAWxK,GAC1BA,EAAcpb,OAAS,IACzBklB,EAAalf,KAAK,KAClBrG,MAAMN,UAAU2G,KAAK1F,MAAM4kB,EAAc9J,MASjD,OADA8J,EAAalf,KAAK,KACXkf,EAAa3R,KAAK,KAY3B7N,EAAQrG,UAAUwmB,kBAAoB,SAAS9Z,EAAUS,GACvD,IAAMkW,KACN,GAAI3W,EAAS/L,OAAS,EAAG,CACvB0iB,EAAU1c,KAAK,KACf,IAAK,IAAI2H,EAAI,EAAGC,EAAK7B,EAAS/L,OAAQ2N,EAAIC,IAAMD,EAC9C+U,EAAU1c,KAAK7G,KAAK8lB,iBAAiBlZ,EAAS4B,GAAInB,IAGtD,OAAOkW,EAAUnP,KAAK,KAYxB7N,EAAQrG,UAAU+lB,kBAAoB,SAASrkB,EAAUyL,GACvD,IAAMsZ,EAAiBpgB,EAAQge,kBAC7B3iB,EAAS6kB,WACXpe,UAAY0I,YAA0BjN,IAAnB6iB,GACnB,IAAMC,EACDC,UAAgBC,qBAAqBllB,GAAU,EAAMyL,GAG1D,OAFArN,KAAKma,OAAS,EACdna,KAAKoa,OAAS,EACPuM,EAAepmB,KAAKP,KAAM4mB,cAIpBrgB,gGClrCbmU,YAAa,aACbE,MAAO,QACPE,QAAS,8FCPX,QAAAxU,EAAA,QACAA,EAAA,SACAA,EAAA,wDAKA,IAAMC,EAAUY,QAAQD,OAAO,0BAC7BG,UAASH,OAAOK,KAChBwf,UAAyB7f,OAAOK,KAChC0D,UAAwB/D,OAAOK,iBAIlBhB,wMCjBfygB,EAAA1gB,EAAA,KAyCA,MAAA2gB,EAAA,SAAA5Z,GAEA6Z,EAAA,QAAA3mB,KAAAP,MACAmnB,YAAAF,EAAAG,aACAC,gBAAAC,EAAA,KACAC,cAAAN,EAAAO,iBAGA,MAAAla,EAAAD,MAMArN,KAAAynB,QAAAna,EAAAoa,OAAApa,EAAAoa,OAAA,KAMA1nB,KAAA2nB,aAAA7jB,IAAAwJ,EAAAsH,QAAAtH,EAAAsH,OAMA5U,KAAA4nB,WAAA9jB,IAAAwJ,EAAAmH,MAAAnH,EAAAmH,KAMAzU,KAAAqM,UAAAiB,EAAAV,SAAAU,EAAAV,SAAA,KAMA5M,KAAA6nB,yBAMA7nB,KAAA8nB,8BAQA9nB,KAAA+nB,2BASA/nB,KAAAgoB,oBAOAhoB,KAAAioB,iBAAA,KAMAjoB,KAAAkoB,qBAAApkB,IAAAwJ,EAAAoH,eACApH,EAAAoH,eAAA,GAMA1U,KAAAmoB,gBAAAlB,EAAAmB,eAAAhjB,KAAApF,MAQAA,KAAAqoB,OAAA,IAAArB,EAAA,QAQAhnB,KAAAsoB,kBACA3N,MAAA3a,KAAAwjB,oBACAhJ,WAAAxa,KAAA8iB,yBACAyF,WAAAvoB,KAAA8iB,yBACAjI,QAAA7a,KAAA4jB,sBACA5I,WAAAhb,KAAAyjB,yBACA1I,gBAAA/a,KAAAmjB,8BACAlI,aAAAjb,KAAA6jB,2BACA2E,mBAAAxoB,KAAAyoB,iCACAC,OAAA1oB,KAAA2oB,uBAIAhoB,OAAAkN,EAAA,SAAAlN,CAAAsmB,EAAAC,EAAA,SAUAD,EAAA/mB,UAAAqM,WAAA,SAAAC,EAAAoc,GACA,MAAAhgB,OAAA9E,IAAA8kB,KACAC,EAAAloB,OAAAkN,EAAA,OAAAlN,CAAA6L,GACA5K,EAAA4K,EAAA6U,cACA,GAAAzf,EAAA,CACA,MAAAknB,EAAA9oB,KAAAsoB,iBAAA1mB,EAAA6kB,WACAqC,IACA9oB,KAAA+nB,wBAAAc,GAAAjnB,EAAAmnB,UAAApoB,OAAAqoB,EAAA,YAAAroB,IACAmoB,EAAAvoB,KAAAP,KAAAwM,EAAA5K,IAIAgH,IACA5I,KAAA8nB,2BAAAe,GAAAI,EAAA,QAAArgB,OACA4D,EACA0c,EAAA,EAAAC,OACAnpB,KAAAopB,qBAAAppB,QASAinB,EAAA/mB,UAAAmpB,mBAAA,SAAA7c,GACAxM,KAAAuM,WAAAC,IAQAya,EAAA/mB,UAAAopB,sBAAA,SAAA9c,GACAxM,KAAAyM,cAAAD,IAQAya,EAAA/mB,UAAAqpB,aAAA,WACA,IAAA3c,EAMA,OALA5M,KAAAqM,UACAO,EAAA5M,KAAAqM,UACGrM,KAAAynB,UACH7a,EAAA5M,KAAAynB,QAAA+B,eAEoE,GAQpEvC,EAAA/mB,UAAA4M,kBAAA,SAAAI,GACA,IAAAV,EACAU,aAAAuc,EAAA,QAAAC,MACAld,EAAAU,EAAAV,QACGU,aAAAyc,EAAA,QAAAD,QACHld,EAAAU,EAAAlF,SAEAhI,KAAAuM,WAAwC,IAQxC0a,EAAA/mB,UAAA6M,qBAAA,SAAAG,GACA,IAAAV,EACAU,aAAAuc,EAAA,QAAAC,MACAld,EAAAU,EAAAV,QACGU,aAAAyc,EAAA,QAAAD,QACHld,EAAAU,EAAAlF,SAEAhI,KAAAyM,cAA2C,IAQ3Cwa,EAAA/mB,UAAAkpB,qBAAA,SAAAlc,GACA,MAAAV,EAAwCU,EAAA,OACxC,GAAAlN,KAAA4pB,uBAAA,CACA,MAAAljB,EAAA/F,OAAAkN,EAAA,OAAAlN,CAAA6L,GACA9F,KAAA1G,KAAAgoB,mBACAhoB,KAAAgoB,iBAAAthB,GAAA8F,QAGAxM,KAAA6pB,eAAArd,IAYAya,EAAA/mB,UAAAuM,cAAA,SAAAD,EAAAsd,GACA,MAAAjd,OAAA/I,IAAAgmB,KACAjB,EAAAloB,OAAAkN,EAAA,OAAAlN,CAAA6L,GACAjL,EAAAvB,KAAA+nB,wBAAAc,GACA,GAAAtnB,EAAA,CACA,MAAAwoB,EAAA/pB,KAAAqoB,OACA2B,KACAD,EAAAE,gBAAA1oB,EAAA,SAAA4M,GACA3B,IAAA2B,EAAA3B,SACAwd,EAAAnjB,KAAAsH,KAGA,QAAAK,EAAAwb,EAAAnpB,OAAA,EAA0C2N,GAAA,IAAQA,EAClDub,EAAAG,OAAAF,EAAAxb,IAIA3B,IACAoc,EAAA,QAAAhiB,cAAAjH,KAAA8nB,2BAAAe,WACA7oB,KAAA8nB,2BAAAe,KAQA5B,EAAA/mB,UAAAmR,OAAA,SAAAlJ,GACA,MAAAgiB,EAAAnqB,KAAAsY,SACA/G,EAAAvR,KAAA6nB,sBACAjb,EAAA5M,KAAAupB,eAEAY,IACA5Y,EAAAxK,QAAAkiB,EAAA,QAAAhiB,eACAsK,EAAA1Q,OAAA,EACA+L,EAAA7F,QAAA/G,KAAAspB,sBAAAlkB,KAAApF,QAEAknB,EAAA,QAAAhnB,UAAAmR,OAAA9Q,KAAAP,KAAAmI,GAEAA,IACAnI,KAAAqM,UACAkF,EAAA1K,KACAoiB,EAAA,QAAArgB,OAAA5I,KAAAqM,UAAA+d,EAAA,EAAAC,IACArqB,KAAA8M,kBAAA9M,MACAipB,EAAA,QAAArgB,OAAA5I,KAAAqM,UAAA+d,EAAA,EAAAE,OACAtqB,KAAA+M,qBAAA/M,OAEKA,KAAAynB,SACLlW,EAAA1K,KACAoiB,EAAA,QAAArgB,OAAA5I,KAAAynB,QAAA8C,EAAA,EAAAC,WACAxqB,KAAA8M,kBAAA9M,MACAipB,EAAA,QAAArgB,OAAA5I,KAAAynB,QAAA8C,EAAA,EAAAE,cACAzqB,KAAA+M,qBAAA/M,OAGA4M,EAAA7F,QAAA/G,KAAAqpB,mBAAAjkB,KAAApF,SAQAinB,EAAA/mB,UAAAwqB,gBAAApD,EAAA,MASAL,EAAA/mB,UAAAyqB,OAAA,SAAAC,EAAAC,EAAA1iB,GAEA,MAAA2iB,EAAA3iB,EAAA4iB,wBACAH,EAAA,GAAA5qB,KAAAkoB,gBAAA0C,EAAA,GAAA5qB,KAAAkoB,kBACA8C,EAAA7iB,EAAA4iB,wBACAH,EAAA,GAAA5qB,KAAAkoB,gBAAA0C,EAAA,GAAA5qB,KAAAkoB,kBACA+C,EAAAtqB,OAAAqoB,EAAA,eAAAroB,EAAAmqB,EAAAE,IAEA,IAAAE,EAAAlrB,KAAAqoB,OAAA8C,YAAAF,GAGAjrB,KAAA2nB,UAAA3nB,KAAA4nB,QACAsD,IAAAE,OAAA,SAAAC,GACA,OAAAA,EAAA7e,QAAA6U,cAAAoF,YACA6E,EAAA,QAAAC,UAIA,IAIAC,EAAAC,EAAAC,EAAAC,EAAAC,EAJAC,GAAA,EACAC,GAAA,EACAlX,EAAA,KACAmX,EAAA,KAEA,GAAAb,EAAArqB,OAAA,GACAb,KAAAioB,iBAAA4C,EACAK,EAAAc,KAAAhsB,KAAAmoB,iBACA,MAAA8D,EAAAf,EAAA,GAAAG,QACAa,EAAAhB,EAAA,GAAA1e,QAAA6U,cAAAoF,YACA6E,EAAA,QAAAC,OACAvrB,KAAA2nB,UAAA3nB,KAAA4nB,OACA6D,EAAAtjB,EAAAgkB,uBAAAF,EAAA,IACAP,EAAAvjB,EAAAgkB,uBAAAF,EAAA,IACAN,EAAAS,EAAA,QAAAC,gBAAAzB,EAAAa,GACAG,EAAAQ,EAAA,QAAAC,gBAAAzB,EAAAc,IAEAG,GADAL,EAAA9J,KAAA4K,KAAA5K,KAAA6K,IAAAZ,EAAAC,MACA5rB,KAAAkoB,mBAEA4D,GAAA,EACAlX,EAAA+W,EAAAC,EACAK,EAAA,GAAAA,EAAA,GACAF,EAAA5jB,EAAAgkB,uBAAAvX,KAEK5U,KAAA4nB,QAELhT,EADAsX,EACAE,EAAA,QAAAI,gBAAA3B,EACoCK,EAAA,GAAA1e,QAAA6U,eAEpC+K,EAAA,QAAAK,iBAAA5B,EACAoB,GAEAF,EAAA5jB,EAAAgkB,uBAAAvX,GACAwX,EAAA,QAAAM,SAAA9B,EAAAmB,IAAA/rB,KAAAkoB,kBACA4D,GAAA,EACA9rB,KAAA2nB,UAAAuE,IACAT,EAAAtjB,EAAAgkB,uBAAAF,EAAA,IACAP,EAAAvjB,EAAAgkB,uBAAAF,EAAA,IACAN,EAAAS,EAAA,QAAAC,gBAAAN,EAAAN,GACAG,EAAAQ,EAAA,QAAAC,gBAAAN,EAAAL,IAEAG,GADAL,EAAA9J,KAAA4K,KAAA5K,KAAA6K,IAAAZ,EAAAC,MACA5rB,KAAAkoB,mBAEAtT,EAAA+W,EAAAC,EACAK,EAAA,GAAAA,EAAA,GACAF,EAAA5jB,EAAAgkB,uBAAAvX,OAKAkX,IACAC,GAAArK,KAAAC,MAAAoK,EAAA,IAAArK,KAAAC,MAAAoK,EAAA,MAGA,OACAD,UACAlX,SACAmX,gBASA9E,EAAA/mB,UAAA2pB,eAAA,SAAArd,GACAxM,KAAAyM,cAAAD,GAAA,GACAxM,KAAAuM,WAAAC,GAAA,IASAya,EAAA/mB,UAAAyoB,qBAAA,SAAAnc,EAAA5K,GACA,MACA+qB,EADAhsB,OAAAisB,EAAA,WAAAjsB,CAAAiB,GACAirB,iBAAA,GACA,QAAAre,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAA8C2N,EAAAC,IAAQD,EAAA,CACtD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,KAUA7F,EAAA/mB,UAAAuoB,iCAAA,SAAAjc,EAAA5K,GACA,MAAAorB,EAAAprB,EAAAqrB,qBACA,QAAAze,EAAA,EAAiBA,EAAAwe,EAAAnsB,SAAuB2N,EAAA,CACxC,MAAAsa,EAAA9oB,KAAAsoB,iBAAA0E,EAAAxe,GAAAiY,WACAqC,GACAA,EAAAvoB,KAAAP,KAAAwM,EAAAwgB,EAAAxe,MAWAyY,EAAA/mB,UAAA4iB,yBAAA,SAAAtW,EAAA5K,GACA,MAAA+qB,EAAA/qB,EAAAirB,iBACA,QAAAre,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAA8C2N,EAAAC,IAAQD,EAAA,CACtD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,KAUA7F,EAAA/mB,UAAAijB,8BAAA,SAAA3W,EAAA5K,GACA,MAAAsrB,EAAAtrB,EAAAirB,iBACA,QAAA3M,EAAA,EAAAC,EAAA+M,EAAArsB,OAAoCqf,EAAAC,IAAQD,EAAA,CAC5C,MAAAyM,EAAAO,EAAAhN,GACA,QAAA1R,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAAgD2N,EAAAC,IAAQD,EAAA,CACxD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,MAWA7F,EAAA/mB,UAAAujB,yBAAA,SAAAjX,EAAA5K,GACA,MAAAurB,EAAAvrB,EAAAirB,iBACA,QAAAre,EAAA,EAAAC,EAAA0e,EAAAtsB,OAAqC2N,EAAAC,IAAQD,EAAA,CAC7C,MAAAme,EAAAQ,EAAA3e,GACAse,GACAtgB,UACA6e,SAAAsB,MAEA3sB,KAAAqoB,OAAA0E,OAAAnrB,EAAAmnB,YAAA+D,KAUA7F,EAAA/mB,UAAA2jB,2BAAA,SAAArX,EAAA5K,GACA,MAAAqe,EAAAre,EAAAirB,iBACA,QAAAO,EAAA,EAAAC,EAAApN,EAAApf,OAAuCusB,EAAAC,IAAQD,EAAA,CAC/C,MAAAxN,EAAAK,EAAAmN,GACA,QAAAlN,EAAA,EAAAC,EAAAP,EAAA/e,OAAsCqf,EAAAC,IAAQD,EAAA,CAC9C,MAAAyM,EAAA/M,EAAAM,GACA,QAAA1R,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAAkD2N,EAAAC,IAAQD,EAAA,CAC1D,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,OAYA7F,EAAA/mB,UAAAsjB,oBAAA,SAAAhX,EAAA5K,GACA,MAAA+qB,EAAA/qB,EAAAirB,iBACAC,GACAtgB,UACA6e,SAAAsB,MAEA3sB,KAAAqoB,OAAA0E,OAAAnrB,EAAAmnB,YAAA+D,IASA7F,EAAA/mB,UAAA0jB,sBAAA,SAAApX,EAAA5K,GACA,MAAAge,EAAAhe,EAAAirB,iBACA,QAAA3M,EAAA,EAAAC,EAAAP,EAAA/e,OAAoCqf,EAAAC,IAAQD,EAAA,CAC5C,MAAAyM,EAAA/M,EAAAM,GACA,QAAA1R,EAAA,EAAAC,EAAAke,EAAA9rB,OAAA,EAAgD2N,EAAAC,IAAQD,EAAA,CACxD,MAAA6c,EAAAsB,EAAAlsB,MAAA+N,IAAA,GACAse,GACAtgB,UACA6e,WAEArrB,KAAAqoB,OAAA0E,OAAApsB,OAAAqoB,EAAA,eAAAroB,CAAA0qB,GAAAyB,MAaA7F,EAAAG,aAAA,SAAAla,GACA,MAAA0X,EAAA5kB,KAAA2qB,OAAAzd,EAAA0d,MAAA1d,EAAAogB,WAAApgB,EAAA/E,KAKA,OAJAyc,EAAAkH,UACA5e,EAAAogB,WAAA1I,EAAAhQ,OAAAnU,MAAA,KACAyM,EAAA0d,MAAAhG,EAAAmH,aAEA7E,EAAA,QAAAC,YAAA5mB,KAAAP,KAAAkN,IAUA+Z,EAAAO,eAAA,SAAAta,GACA,MAAAqgB,EAAA5sB,OAAA6sB,EAAA,UAAA7sB,CAAAX,KAAAgoB,kBAKA,OAJAuF,EAAA1sB,SACA0sB,EAAAxmB,QAAA/G,KAAA6pB,eAAAzkB,KAAApF,OACAA,KAAAgoB,sBAEA,GAWAf,EAAAmB,eAAA,SAAA9D,EAAAI,GACA,OAAA0H,EAAA,QAAAqB,yBACAztB,KAAAioB,iBAAA3D,EAAA+G,SACAe,EAAA,QAAAqB,yBACAztB,KAAAioB,iBAAAvD,EAAA2G,UAEAhlB,EAAA,0HCxlBA,MAAAqnB,EAAA,SAAArgB,GACA,MAAAC,EAAAD,MACAsgB,OAAA7pB,IAAAwJ,EAAAqgB,WACArgB,EAAAqgB,WAAA,YAEAC,OAAA9pB,IAAAwJ,EAAAsgB,SAAAtgB,EAAAsgB,SACAC,EAAA,EAAAC,WACAvsB,OAAAssB,EAAA,EAAAE,qBAAAJ,GACAK,QAAA1gB,EAAA0gB,QACAC,QAAA3gB,EAAA2gB,QACAC,SAAA5gB,EAAA4gB,WAGAC,EAAA,EAAA5tB,KAAAP,MACAouB,aAAA9gB,EAAA8gB,aACAC,UAAA/gB,EAAA+gB,UACAC,YAAAhhB,EAAAghB,YACAC,OAAAjhB,EAAAihB,OACAZ,aACAa,2BAAAlhB,EAAAkhB,2BACAZ,WACAa,iBAAAnhB,EAAAmhB,iBACAC,eAAAphB,EAAAohB,eACAC,gBAAArhB,EAAAqhB,gBACAta,IAAA/G,EAAA+G,IACAua,KAAAthB,EAAAshB,KACAC,WAAA/qB,IAAAwJ,EAAAuhB,OAAAvhB,EAAAuhB,MACAC,WAAAxhB,EAAAwhB,cAKAnuB,OAAAG,EAAA,SAAAH,CAAA+sB,EAAAS,EAAA,GACA,IAAAY,EAAA,EC/CA,MAAAC,EAAA,SAAA3hB,GAEA,MAAAC,EAAAD,MAEA,IAAA+gB,EAEAA,OADAtqB,IAAAwJ,EAAA8gB,aACA9gB,EAAA8gB,cAEAY,EAAAC,aAGA,MAAAX,OAAAxqB,IAAAwJ,EAAAghB,YACAhhB,EAAAghB,YAAA,YAEAja,OAAAvQ,IAAAwJ,EAAA+G,IACA/G,EAAA+G,IAAA,uDAEA0a,EAAAxuB,KAAAP,MACAouB,eACAC,UAAA/gB,EAAA+gB,UACAC,cACAC,YAAAzqB,IAAAwJ,EAAAihB,QAAAjhB,EAAAihB,OACAP,aAAAlqB,IAAAwJ,EAAA0gB,QAAA1gB,EAAA0gB,QAAA,GACAQ,2BAAAlhB,EAAAkhB,2BACAC,iBAAAnhB,EAAAmhB,iBACApa,MACAwa,MAAAvhB,EAAAuhB,SAKAluB,OAAAG,EAAA,SAAAH,CAAAquB,EAAAD,GAUAC,EAAAC,YAAA,2FAGA5oB,EAAA,sDC3DA6oB,EAAA5oB,EAAA,IAKA,MAAA6oB,GAOAC,YAAA,SAAAjhB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA,OAAAghB,EAAAK,kBAAAH,IAQAG,kBAAA,SAAAC,GACA,MAAAC,EAAA,6BAAAC,KAAAF,GACA,OAAAC,OACA5rB,IAAA4rB,EAAA,YAEA,GASAE,aAAA,SAAAzhB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA0hB,EAAA/mB,KAAAgnB,MAAAT,GACA,OAAAU,MAAAF,QAAA/rB,EAAA+rB,EAAA,KAQAG,YAAA,SAAA7hB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA,OAAAghB,EAAAc,kBAAAZ,IAQAY,kBAAA,SAAAR,GAEA,MAAAC,EAAA,4CAAAC,KAAAF,GACA,OAAAC,EACAlO,WAAAkO,EAAA,SAEA,GASAQ,uBAAA,SAAA/hB,GACA,MAAAkhB,EAAAC,EAAA,QAAAC,kBAAAphB,GAAA,GACA,OAAAghB,EAAAgB,6BAAAd,IAQAc,6BAAA,SAAAV,GACA,MAAAC,EAAA,gBAAAC,KAAAF,GACA,OAAAC,EACAU,SAAAV,EAAA,YAEA,GASAW,WAAA,SAAAliB,GACA,OAAAmhB,EAAA,QAAAC,kBAAAphB,GAAA,GAAAmiB,QAQAC,qBAAA,SAAApiB,EAAAqiB,GACArB,EAAAsB,oBAAAtiB,EAAA,YAQAuiB,kBAAA,SAAAviB,EAAAshB,GACAthB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAC,mBAAApB,KAQAqB,sBAAA,SAAA3iB,EAAA0hB,GACA,MAAAkB,EAAA,IAAAjoB,KAAA,IAAA+mB,GACAJ,EAAAsB,EAAAC,iBAAA,IACA9B,EAAA,QAAA+B,UAAAF,EAAAG,cAAA,SACAhC,EAAA,QAAA+B,UAAAF,EAAAI,aAAA,OACAjC,EAAA,QAAA+B,UAAAF,EAAAK,cAAA,OACAlC,EAAA,QAAA+B,UAAAF,EAAAM,gBAAA,OACAnC,EAAA,QAAA+B,UAAAF,EAAAO,gBAAA,OACAnjB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,KAQA+B,qBAAA,SAAArjB,EAAAsjB,GACA,MAAAhC,EAAAgC,EAAAC,cACAvjB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,KAQAkC,gCAAA,SAAAxjB,EAAAyjB,GACA,MAAAnC,EAAAmC,EAAAtL,WACAnY,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,KAQAgB,oBAAA,SAAAtiB,EAAAshB,GACAthB,EAAAwiB,YAAArB,EAAA,QAAAsB,SAAAW,eAAA9B,MAEAppB,EAAA,yLClKAwrB,EAAAvrB,EAAA,IA2BA,MAAAyU,EAAA,SAAA4R,EAAAmF,GAEAC,EAAA,QAAAxxB,KAAAP,MAMAA,KAAAgyB,SAMAhyB,KAAAiyB,WAAA,EAMAjyB,KAAAkyB,mBAAA,EAEAlyB,KAAAmyB,eAAAxF,EAAAmF,IAIAnxB,OAAAkN,EAAA,SAAAlN,CAAAoa,EAAAgX,EAAA,SAQAhX,EAAA7a,UAAAkyB,iBAAA,SAAAzT,GACA3e,KAAAye,gBAGA9d,OAAAsO,EAAA,OAAAtO,CAAAX,KAAAye,gBAAAE,EAAAoE,qBAAAtiB,SAFAT,KAAAye,gBAAAE,EAAAoE,qBAAAtiB,QAIAT,KAAAgyB,MAAAnrB,KAAA7G,KAAAye,gBAAA5d,QACAb,KAAAqyB,WAUAtX,EAAA7a,UAAA0hB,MAAA,WACA,MAAAzC,EAAA,IAAApE,EAAA,MAGA,OAFAoE,EAAAN,mBACA7e,KAAAsyB,OAAAtyB,KAAAye,gBAAAhe,QAAAT,KAAAgyB,MAAAvxB,SACA0e,GAOApE,EAAA7a,UAAAqyB,eAAA,SAAAvN,EAAAC,EAAAuN,EAAAC,GACA,OAAAA,EAAA9xB,OAAA+xB,EAAA,yBAAA/xB,CAAAX,KAAA+oB,YAAA/D,EAAAC,GACAwN,GAEAzyB,KAAAkyB,mBAAAlyB,KAAA2yB,gBACA3yB,KAAAiyB,UAAAvQ,KAAA4K,KAAAsG,EAAA,EAAAC,oBACA7yB,KAAAye,gBAAA,EAAAze,KAAAgyB,MAAAhyB,KAAAgjB,OAAA,IACAhjB,KAAAkyB,kBAAAlyB,KAAA2yB,eAEAC,EAAA,EAAAE,iBACA9yB,KAAAye,gBAAA,EAAAze,KAAAgyB,MAAAhyB,KAAAgjB,OACAhjB,KAAAiyB,WAAA,EAAAjN,EAAAC,EAAAuN,EAAAC,KA0BA1X,EAAA7a,UAAA6yB,iBAAA,SAAArD,EAAAsD,EAAAC,GACA,GAAAjzB,KAAAsyB,QAAAY,EAAA,QAAAC,KACAnzB,KAAAsyB,QAAAY,EAAA,QAAAE,MACA,IAAApzB,KAAAye,gBAAA5d,OACA,YAEA,MAAAwyB,OAAAvvB,IAAAkvB,KACAM,OAAAxvB,IAAAmvB,KACA,OAAAM,EAAA,EAAAC,yBAAAxzB,KAAAye,gBAAA,EACAze,KAAAgyB,MAAAhyB,KAAAgjB,OAAA0M,EAAA2D,EAAAC,IAUAvY,EAAA7a,UAAA2sB,eAAA,WACA,OAAA4G,EAAA,EAAAC,aACA1zB,KAAAye,gBAAA,EAAAze,KAAAgyB,MAAAhyB,KAAAgjB,SAOAjI,EAAA7a,UAAAkjB,QAAA,WACA,OAAApjB,KAAAgyB,OAUAjX,EAAA7a,UAAAyzB,cAAA,SAAAxnB,GACA,GAAAA,EAAA,GAAAnM,KAAAgyB,MAAAnxB,QAAAsL,EACA,YAEA,MAAAwS,EAAA,IAAAiV,EAAA,cAGA,OAFAjV,EAAAE,mBAAA7e,KAAAsyB,OAAAtyB,KAAAye,gBAAAhe,MACA,IAAA0L,EAAA,EAAAnM,KAAAgyB,MAAA7lB,EAAA,GAAAnM,KAAAgyB,MAAA7lB,KACAwS,GASA5D,EAAA7a,UAAA2zB,eAAA,WACA,MAAApV,EAAAze,KAAAye,gBACAQ,EAAAjf,KAAAgyB,MACAM,EAAAtyB,KAAAsyB,OAEApT,KACA,IACA1Q,EAAAC,EADA6U,EAAA,EAEA,IAAA9U,EAAA,EAAAC,EAAAwQ,EAAApe,OAA+B2N,EAAAC,IAAQD,EAAA,CACvC,MAAAnM,EAAA4c,EAAAzQ,GACAmQ,EAAA,IAAAiV,EAAA,cACAjV,EAAAE,mBAAAyT,EAAA7T,EAAAhe,MAAA6iB,EAAAjhB,IACA6c,EAAArY,KAAA8X,GACA2E,EAAAjhB,EAEA,OAAA6c,GAOAnE,EAAA7a,UAAA4zB,iBAAA,WACA,MAAAC,KACAtV,EAAAze,KAAAye,gBACA,IAAA6E,EAAA,EACA,MAAArE,EAAAjf,KAAAgyB,MACAhP,EAAAhjB,KAAAgjB,OACA,IAAAxU,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAwQ,EAAApe,OAA+B2N,EAAAC,IAAQD,EAAA,CACvC,MAAAnM,EAAA4c,EAAAzQ,GACAwlB,EAAAT,EAAA,EAAA5U,WACAF,EAAA6E,EAAAjhB,EAAA2gB,EAAA,IACAriB,OAAAsO,EAAA,OAAAtO,CAAAozB,EAAAC,GACA1Q,EAAAjhB,EAEA,OAAA0xB,GAOAhZ,EAAA7a,UAAA+zB,8BAAA,SAAAC,GACA,MAAAC,KACAC,KACAD,EAAAtzB,OAAAgxB,EAAA,EAAAwC,gBACAr0B,KAAAye,gBAAA,EAAAze,KAAAgyB,MAAAhyB,KAAAgjB,OAAAkR,EACAC,EAAA,EAAAC,GACA,MAAAE,EAAA,IAAAvZ,EAAA,MAGA,OAFAuZ,EAAAzV,mBACAqU,EAAA,QAAAnU,GAAAoV,EAAAC,GACAE,GAQAvZ,EAAA7a,UAAAumB,QAAA,WACA,OAAA8N,EAAA,QAAAC,mBAQAzZ,EAAA7a,UAAAu0B,iBAAA,SAAAlzB,GACA,OAAAmzB,EAAA,EAAAxV,YACAlf,KAAAye,gBAAA,EAAAze,KAAAgyB,MAAAhyB,KAAAgjB,OAAAzhB,IAWAwZ,EAAA7a,UAAAiyB,eAAA,SAAAxF,EAAAmF,GACA,GAAAnF,EAEG,CACH3sB,KAAA20B,UAAA7C,EAAAnF,EAAA,GACA3sB,KAAAye,kBACAze,KAAAye,oBAEA,MAAAQ,EAAA2V,EAAA,EAAAlB,aACA1zB,KAAAye,gBAAA,EAAAkO,EAAA3sB,KAAAgjB,OAAAhjB,KAAAgyB,OACAhyB,KAAAye,gBAAA5d,OAAA,IAAAoe,EAAApe,OAAA,EAAAoe,IAAApe,OAAA,GACAb,KAAAqyB,eATAryB,KAAA6e,mBAAAqU,EAAA,QAAAnU,GAAA,KAAA/e,KAAAgyB,QAmBAjX,EAAA7a,UAAA2e,mBAAA,SAAAyT,EAAA7T,EAAAQ,GACAjf,KAAA60B,2BAAAvC,EAAA7T,GACAze,KAAAgyB,MAAA/S,EACAjf,KAAAqyB,WAOAtX,EAAA7a,UAAA40B,eAAA,SAAA5V,GACA,IAAAoT,EAAAtyB,KAAA+0B,YACA,MAAAtW,KACAQ,KACA,IAAAzQ,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAyQ,EAAAre,OAAsC2N,EAAAC,IAAQD,EAAA,CAC9C,MAAAmQ,EAAAO,EAAA1Q,GACA,IAAAA,IACA8jB,EAAA3T,EAAAoW,aAEAp0B,OAAAsO,EAAA,OAAAtO,CAAA8d,EAAAE,EAAAoE,sBACA9D,EAAApY,KAAA4X,EAAA5d,QAEAb,KAAA6e,mBAAAyT,EAAA7T,EAAAQ,IAEA5Y,EAAA,qKCrTA2uB,EAAA1uB,EAAA,IAwBA,MAAA0U,EAAA,SAAA2R,EAAAmF,GACAC,EAAA,QAAAxxB,KAAAP,MACAA,KAAAmyB,eAAAxF,EAAAmF,IAGAnxB,OAAAkN,EAAA,SAAAlN,CAAAqa,EAAA+W,EAAA,SAQA/W,EAAA9a,UAAA+0B,YAAA,SAAA3V,GACAtf,KAAAye,gBAGA9d,OAAAsO,EAAA,OAAAtO,CAAAX,KAAAye,gBAAAa,EAAAyD,sBAFA/iB,KAAAye,gBAAAa,EAAAyD,qBAAAtiB,QAIAT,KAAAqyB,WAUArX,EAAA9a,UAAA0hB,MAAA,WACA,MAAAnC,EAAA,IAAAzE,EAAA,MAEA,OADAyE,EAAAZ,mBAAA7e,KAAAsyB,OAAAtyB,KAAAye,gBAAAhe,SACAgf,GAOAzE,EAAA9a,UAAAqyB,eAAA,SAAAvN,EAAAC,EAAAuN,EAAAC,GACA,GAAAA,EAAA9xB,OAAA+xB,EAAA,yBAAA/xB,CAAAX,KAAA+oB,YAAA/D,EAAAC,GACA,OAAAwN,EAEA,MAAAhU,EAAAze,KAAAye,gBACAuE,EAAAhjB,KAAAgjB,OACA,IAAAxU,EAAAC,EAAAyR,EACA,IAAA1R,EAAA,EAAAC,EAAAgQ,EAAA5d,OAA0C2N,EAAAC,EAAQD,GAAAwU,EAAA,CAClD,MAAAqJ,EAAA1rB,OAAAq0B,EAAA,gBAAAr0B,CACAqkB,EAAAC,EAAAxG,EAAAjQ,GAAAiQ,EAAAjQ,EAAA,IACA,GAAA6d,EAAAoG,EAAA,CAEA,IADAA,EAAApG,EACAnM,EAAA,EAAiBA,EAAA8C,IAAY9C,EAC7BsS,EAAAtS,GAAAzB,EAAAjQ,EAAA0R,GAEAsS,EAAA3xB,OAAAmiB,GAGA,OAAAyP,GAUAzX,EAAA9a,UAAA2sB,eAAA,WACA,OAAAqI,EAAA,EAAAvI,YACA3sB,KAAAye,gBAAA,EAAAze,KAAAye,gBAAA5d,OAAAb,KAAAgjB,SAUAhI,EAAA9a,UAAAi1B,SAAA,SAAAhpB,GACA,MAAAipB,EAAAp1B,KAAAye,gBACAze,KAAAye,gBAAA5d,OAAAb,KAAAgjB,OAAA,EACA,GAAA7W,EAAA,GAAAipB,GAAAjpB,EACA,YAEA,MAAAmT,EAAA,IAAA+V,EAAA,cAGA,OAFA/V,EAAAT,mBAAA7e,KAAAsyB,OAAAtyB,KAAAye,gBAAAhe,MACA0L,EAAAnM,KAAAgjB,QAAA7W,EAAA,GAAAnM,KAAAgjB,SACA1D,GASAtE,EAAA9a,UAAAo1B,UAAA,WACA,MAAA7W,EAAAze,KAAAye,gBACA6T,EAAAtyB,KAAAsyB,OACAtP,EAAAhjB,KAAAgjB,OAEAmK,KACA,IAAA3e,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAgQ,EAAA5d,OAA0C2N,EAAAC,EAAQD,GAAAwU,EAAA,CAClD,MAAA1D,EAAA,IAAA+V,EAAA,cACA/V,EAAAT,mBAAAyT,EAAA7T,EAAAhe,MAAA+N,IAAAwU,IACAmK,EAAAtmB,KAAAyY,GAEA,OAAA6N,GAQAnS,EAAA9a,UAAAumB,QAAA,WACA,OAAA8N,EAAA,QAAAgB,aAQAva,EAAA9a,UAAAu0B,iBAAA,SAAAlzB,GACA,MAAAkd,EAAAze,KAAAye,gBACAuE,EAAAhjB,KAAAgjB,OACA,IAAAxU,EAAAC,EAAAuW,EAAAC,EACA,IAAAzW,EAAA,EAAAC,EAAAgQ,EAAA5d,OAA0C2N,EAAAC,EAAQD,GAAAwU,EAGlD,GAFAgC,EAAAvG,EAAAjQ,GACAyW,EAAAxG,EAAAjQ,EAAA,GACA7N,OAAA+xB,EAAA,WAAA/xB,CAAAY,EAAAyjB,EAAAC,GACA,SAGA,UAWAjK,EAAA9a,UAAAiyB,eAAA,SAAAxF,EAAAmF,GACAnF,GAGA3sB,KAAA20B,UAAA7C,EAAAnF,EAAA,GACA3sB,KAAAye,kBACAze,KAAAye,oBAEAze,KAAAye,gBAAA5d,OAAA20B,EAAA,EAAA7I,YACA3sB,KAAAye,gBAAA,EAAAkO,EAAA3sB,KAAAgjB,QACAhjB,KAAAqyB,WARAryB,KAAA6e,mBAAAqU,EAAA,QAAAnU,GAAA,OAiBA/D,EAAA9a,UAAA2e,mBAAA,SAAAyT,EAAA7T,GACAze,KAAA60B,2BAAAvC,EAAA7T,GACAze,KAAAqyB,WAEAhsB,EAAA,2OCnMAovB,EAAAnvB,EAAA,IAgCA,MAAA2U,EAAA,SAAA0R,EAAAmF,GAEA4D,EAAA,QAAAn1B,KAAAP,MAMAA,KAAA21B,UAMA31B,KAAA41B,6BAAA,EAMA51B,KAAA61B,oBAAA,KAMA71B,KAAAiyB,WAAA,EAMAjyB,KAAAkyB,mBAAA,EAMAlyB,KAAA81B,mBAAA,EAMA91B,KAAA+1B,yBAAA,KAEA/1B,KAAAmyB,eAAAxF,EAAAmF,IAIAnxB,OAAAkN,EAAA,SAAAlN,CAAAsa,EAAAya,EAAA,SAQAza,EAAA/a,UAAA81B,cAAA,SAAAnW,GAEA,IAAAZ,EACA,GAAAjf,KAAAye,gBAIG,CACH,MAAA6E,EAAAtjB,KAAAye,gBAAA5d,OAGA,IAAA2N,EAAAC,EACA,IAHA9N,OAAAsO,EAAA,OAAAtO,CAAAX,KAAAye,gBAAAoB,EAAAkD,sBACA9D,EAAAY,EAAAuD,UAAA3iB,QAEA+N,EAAA,EAAAC,EAAAwQ,EAAApe,OAAiC2N,EAAAC,IAAQD,EACzCyQ,EAAAzQ,IAAA8U,OATAtjB,KAAAye,gBAAAoB,EAAAkD,qBAAAtiB,QACAwe,EAAAY,EAAAuD,UAAA3iB,QACAT,KAAA21B,OAAA9uB,OAUA7G,KAAA21B,OAAA9uB,KAAAoY,GACAjf,KAAAqyB,WAUApX,EAAA/a,UAAA0hB,MAAA,WACA,MAAAqU,EAAA,IAAAhb,EAAA,MAEAwJ,EAAAzkB,KAAA21B,OAAA90B,OACAq1B,EAAA,IAAA11B,MAAAikB,GACA,QAAAjW,EAAA,EAAiBA,EAAAiW,IAASjW,EAC1B0nB,EAAA1nB,GAAAxO,KAAA21B,OAAAnnB,GAAA/N,QAKA,OAFAw1B,EAAApX,mBACA7e,KAAAsyB,OAAAtyB,KAAAye,gBAAAhe,QAAAy1B,GACAD,GAOAhb,EAAA/a,UAAAqyB,eAAA,SAAAvN,EAAAC,EAAAuN,EAAAC,GACA,OAAAA,EAAA9xB,OAAA+xB,EAAA,yBAAA/xB,CAAAX,KAAA+oB,YAAA/D,EAAAC,GACAwN,GAEAzyB,KAAAkyB,mBAAAlyB,KAAA2yB,gBACA3yB,KAAAiyB,UAAAvQ,KAAA4K,KAAA6J,EAAA,EAAAC,qBACAp2B,KAAAye,gBAAA,EAAAze,KAAA21B,OAAA31B,KAAAgjB,OAAA,IACAhjB,KAAAkyB,kBAAAlyB,KAAA2yB,eAEAwD,EAAA,EAAAE,kBACAr2B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OACAhjB,KAAAiyB,WAAA,EAAAjN,EAAAC,EAAAuN,EAAAC,KAOAxX,EAAA/a,UAAAq2B,WAAA,SAAAvR,EAAAC,GACA,OAAAuR,EAAA,EAAAC,uBACAz2B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OAAAgC,EAAAC,IASAhK,EAAA/a,UAAAw2B,QAAA,WACA,OAAAC,EAAA,EAAAC,aACA52B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,SAkBA/H,EAAA/a,UAAA2sB,eAAA,SAAAgK,GACA,IAAApY,EASA,YARA3a,IAAA+yB,GACApY,EAAAze,KAAAs2B,6BAAA71B,QACAq2B,EAAA,EAAAC,mBACAtY,EAAA,EAAAze,KAAA21B,OAAA31B,KAAAgjB,OAAA6T,IAEApY,EAAAze,KAAAye,gBAGAuY,EAAA,EAAAC,cACAxY,EAAA,EAAAze,KAAA21B,OAAA31B,KAAAgjB,SAOA/H,EAAA/a,UAAA4jB,SAAA,WACA,OAAA9jB,KAAA21B,QAOA1a,EAAA/a,UAAAg3B,sBAAA,WACA,GAAAl3B,KAAA41B,6BAAA51B,KAAA2yB,cAAA,CACA,MAAAwE,EAAAC,EAAA,EAAAR,aACA52B,KAAAye,gBAAA,EAAAze,KAAA21B,OAAA31B,KAAAgjB,QACAhjB,KAAA61B,oBAAAwB,EAAA,EAAAT,aACA52B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OACAmU,GACAn3B,KAAA41B,4BAAA51B,KAAA2yB,cAEA,OAAA3yB,KAAA61B,qBAUA5a,EAAA/a,UAAAo3B,kBAAA,WACA,MAAAC,EAAA,IAAAC,EAAA,cAGA,OAFAD,EAAA1Y,mBAAAqU,EAAA,QAAAC,IACAnzB,KAAAk3B,wBAAAz2B,SACA82B,GAOAtc,EAAA/a,UAAAo2B,2BAAA,WACA,GAAAt2B,KAAA81B,mBAAA91B,KAAA2yB,cAAA,CACA,MAAAlU,EAAAze,KAAAye,gBACAqY,EAAA,EAAAW,wBACAhZ,EAAA,EAAAze,KAAA21B,OAAA31B,KAAAgjB,QACAhjB,KAAA+1B,yBAAAtX,GAEAze,KAAA+1B,yBAAAtX,EAAAhe,QACAT,KAAA+1B,yBAAAl1B,OACAi2B,EAAA,EAAAC,mBACA/2B,KAAA+1B,yBAAA,EAAA/1B,KAAA21B,OAAA31B,KAAAgjB,SAEAhjB,KAAA81B,kBAAA91B,KAAA2yB,cAEA,OAAA3yB,KAAA+1B,0BAOA9a,EAAA/a,UAAA+zB,8BAAA,SAAAC,GACA,MAAAC,KACAuD,KACAvD,EAAAtzB,OAAA40B,EAAA,EAAAkC,WACA33B,KAAAye,gBAAA,EAAAze,KAAA21B,OAAA31B,KAAAgjB,OACAtB,KAAA4K,KAAA4H,GACAC,EAAA,EAAAuD,GACA,MAAAE,EAAA,IAAA3c,EAAA,MAGA,OAFA2c,EAAA/Y,mBACAqU,EAAA,QAAAnU,GAAAoV,EAAAuD,GACAE,GAUA3c,EAAA/a,UAAA23B,WAAA,SAAA1rB,GACA,GAAAA,EAAA,GAAAnM,KAAA21B,OAAA90B,QAAAsL,EACA,YAEA,IAAAmX,EACA,OAAAnX,EACAmX,EAAA,MACG,CACH,MAAAwU,EAAA93B,KAAA21B,OAAAxpB,EAAA,GACAmX,EAAAwU,IAAAj3B,OAAA,GAEA,MAAAoe,EAAAjf,KAAA21B,OAAAxpB,GAAA1L,QACA4B,EAAA4c,IAAApe,OAAA,GACA,OAAAyiB,EAAA,CACA,IAAA9U,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAwQ,EAAApe,OAAiC2N,EAAAC,IAAQD,EACzCyQ,EAAAzQ,IAAA8U,EAGA,MAAAzD,EAAA,IAAAkY,EAAA,cAGA,OAFAlY,EAAAhB,mBACA7e,KAAAsyB,OAAAtyB,KAAAye,gBAAAhe,MAAA6iB,EAAAjhB,GAAA4c,GACAY,GASA5E,EAAA/a,UAAA83B,YAAA,WACA,MAAA1F,EAAAtyB,KAAAsyB,OACA7T,EAAAze,KAAAye,gBACAuB,EAAAhgB,KAAA21B,OACA1V,KACA,IACAzR,EAAAC,EAAAyR,EAAAC,EADAmD,EAAA,EAEA,IAAA9U,EAAA,EAAAC,EAAAuR,EAAAnf,OAAgC2N,EAAAC,IAAQD,EAAA,CACxC,MAAAyQ,EAAAe,EAAAxR,GAAA/N,QACA4B,EAAA4c,IAAApe,OAAA,GACA,OAAAyiB,EACA,IAAApD,EAAA,EAAAC,EAAAlB,EAAApe,OAAmCqf,EAAAC,IAAQD,EAC3CjB,EAAAiB,IAAAoD,EAGA,MAAAzD,EAAA,IAAAkY,EAAA,cACAlY,EAAAhB,mBACAyT,EAAA7T,EAAAhe,MAAA6iB,EAAAjhB,GAAA4c,GACAgB,EAAApZ,KAAAgZ,GACAyD,EAAAjhB,EAEA,OAAA4d,GAQAhF,EAAA/a,UAAAumB,QAAA,WACA,OAAA8N,EAAA,QAAA0D,eAQAhd,EAAA/a,UAAAu0B,iBAAA,SAAAlzB,GACA,OAAA22B,EAAA,EAAAtB,aACA52B,KAAAs2B,6BAAA,EAAAt2B,KAAA21B,OAAA31B,KAAAgjB,OAAAzhB,IAWA0Z,EAAA/a,UAAAiyB,eAAA,SAAAxF,EAAAmF,GACA,GAAAnF,EAEG,CACH3sB,KAAA20B,UAAA7C,EAAAnF,EAAA,GACA3sB,KAAAye,kBACAze,KAAAye,oBAEA,MAAAuB,EAAAmY,EAAA,EAAAlB,cACAj3B,KAAAye,gBAAA,EAAAkO,EAAA3sB,KAAAgjB,OAAAhjB,KAAA21B,QACA,OAAA3V,EAAAnf,OACAb,KAAAye,gBAAA5d,OAAA,MACK,CACL,MAAAu3B,EAAApY,IAAAnf,OAAA,GACAb,KAAAye,gBAAA5d,OAAA,IAAAu3B,EAAAv3B,OACA,EAAAu3B,IAAAv3B,OAAA,GAEAb,KAAAqyB,eAfAryB,KAAA6e,mBAAAqU,EAAA,QAAAnU,GAAA,KAAA/e,KAAA21B,SAyBA1a,EAAA/a,UAAA2e,mBAAA,SAAAyT,EAAA7T,EAAAuB,GACAhgB,KAAA60B,2BAAAvC,EAAA7T,GACAze,KAAA21B,OAAA3V,EACAhgB,KAAAqyB,WAOApX,EAAA/a,UAAAm4B,YAAA,SAAApY,GACA,IAAAqS,EAAAtyB,KAAA+0B,YACA,MAAAtW,KACAuB,KACA,QAAAxR,EAAA,EAAAC,EAAAwR,EAAApf,OAAuC2N,EAAAC,IAAQD,EAAA,CAC/C,MAAAqR,EAAAI,EAAAzR,GACA,IAAAA,IACA8jB,EAAAzS,EAAAkV,aAEA,MAAAzR,EAAA7E,EAAA5d,OACAoe,EAAAY,EAAAuD,UACA,QAAAlD,EAAA,EAAAC,EAAAlB,EAAApe,OAAqCqf,EAAAC,IAAQD,EAC7CjB,EAAAiB,IAAAoD,EAEA3iB,OAAAsO,EAAA,OAAAtO,CAAA8d,EAAAoB,EAAAkD,sBACA/C,EAAAnZ,KAAAoY,GAEAjf,KAAA6e,mBAAAyT,EAAA7T,EAAAuB,IAGA3Z,EAAA,4FCjaA,QAAAC,EAAA,SACAA,EAAA,MACAA,EAAA,MACY6J,IAAZ7J,EAAA,IACYkT,IAAZlT,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,iNAoBA,IAAMC,EAAU,SAAS6J,EAAOkoB,EAAWjoB,EAAIkoB,EAAiBC,EAAgBC,GAE9EC,UAAoBn4B,KAAKP,MAMzBA,KAAK24B,0BAA2B,OACiB70B,IAA7C20B,EAAiBG,0BACnB54B,KAAK24B,yBAA2BF,EAAiBG,yBAOnD54B,KAAK64B,IAAMxoB,EAMXrQ,KAAK84B,OAAS1oB,EAMdpQ,KAAK+4B,cAAWj1B,EACZw0B,EAAUU,IAAI,gBAChBh5B,KAAK+4B,SAAWT,EAAUW,IAAI,eAGhCj5B,KAAKk5B,cAAgB,IACjBZ,EAAUU,IAAI,kBAChBh5B,KAAKk5B,cAAgBZ,EAAUW,IAAI,iBAOrCj5B,KAAKm5B,cAAgB,KACjBb,EAAUU,IAAI,kBAChBh5B,KAAKm5B,cAAgBb,EAAUW,IAAI,iBAOrCj5B,KAAKo5B,aAAeb,EAMpBv4B,KAAKw4B,eAAiBA,EAMtBx4B,KAAKq5B,UAAYhpB,EAAG8F,QAMpBnW,KAAKs5B,SAAWt5B,KAAKq5B,UAAUhjB,QAK/BrW,KAAK2K,QAAS,EAMd3K,KAAKu5B,gBAAkB,4LAGzBppB,EAAOiI,SAAS7R,EAASmyB,WAQzBnyB,EAAQizB,yBAA2B,SAASC,EAAQlyB,GAClD,IAAK,IAAIiH,EAAI,EAAGC,EAAKgrB,EAAO54B,OAAQ2N,EAAIC,EAAID,IAE1C,IADA,IAAMtE,EAAQuvB,EAAOjrB,GACZ0R,EAAI,EAAGC,EAAKjW,EAAMK,SAAS1J,OAAQqf,EAAIC,EAAID,IAAK,CACvD,IAAMwZ,EAAQxvB,EAAMK,SAAS2V,GACvB3R,KAEN,GADAhI,EAAQozB,aAAaD,EAAOnrB,GACxBhI,EAAQqzB,iBAAiBrrB,EAAYhH,GACvC,OAAOmyB,EAIb,OAAO,MASTnzB,EAAQszB,gBAAkB,SAASJ,EAAQlyB,GACzC,IAAK,IAAIiH,EAAI,EAAGC,EAAKgrB,EAAO54B,OAAQ2N,EAAIC,EAAID,IAE1C,IADA,IAAMtE,EAAQuvB,EAAOjrB,GACZ0R,EAAI,EAAGC,EAAKjW,EAAMK,SAAS1J,OAAQqf,EAAIC,EAAID,IAAK,CACvD,IAAMwZ,EAAQxvB,EAAMK,SAAS2V,GACvB4Z,KAEN,GADAvzB,EAAQwzB,qBAAqBL,EAAOI,GAChCvzB,EAAQqzB,iBAAiBE,EAAevyB,GAC1C,OAAOmyB,EAIb,OAAO,MAWTnzB,EAAQqzB,iBAAmB,SAASI,EAASC,GAC3C,OAAOzgB,EAAQ0gB,KAAKF,EAAS,SAAAG,GAAA,OAAUA,EAAA,OAAmBF,KAU5D1zB,EAAQ6zB,gBAAkB,SAASX,EAAQY,GACzC,OAAO9zB,EAAQqzB,iBAAiBH,EAAQY,IAW1C9zB,EAAQwzB,qBAAuB,SAAS5rB,EAAMmsB,GAC5C,IAAM/vB,EAAW4D,EAAK5D,SACtB,QAAiBzG,IAAbyG,EAAwB,CAC1B+vB,EAAMzzB,KAAKsH,GACX,IAAK,IAAIK,EAAI,EAAGA,EAAIjE,EAAS1J,OAAQ2N,IACnCjI,EAAQwzB,qBAAqBxvB,EAASiE,GAAI8rB,KAYhD/zB,EAAQozB,aAAe,SAASxrB,EAAMmsB,GACpC,IAAI9rB,SACEjE,EAAW4D,EAAK5D,SACtB,QAAiBzG,IAAbyG,EACF,IAAKiE,EAAI,EAAGA,EAAIjE,EAAS1J,OAAQ2N,IAC/BjI,EAAQozB,aAAapvB,EAASiE,GAAI8rB,QAGpCA,EAAMzzB,KAAKsH,IAUf5H,EAAQrG,UAAUq6B,YAAc,SAASC,GAAe,IAAAlpB,EAAAtR,KAChDw4B,EAAiBx4B,KAAKw4B,eAC5B,GAAIx4B,KAAKu5B,gBACP,OAAOv5B,KAAKu5B,gBAEd,IAAMlpB,EAAKrQ,KAAK64B,IACV4B,EAAcz6B,KAAKo5B,aAmBnBsB,EAAW,SAAS1pB,EAAMtC,GAC9BA,EAAMgX,IAAI,QAAS1U,EAAKzJ,MACxBmH,EAAMgX,IAAI,WAAY1U,EAAK2pB,UAC3BjsB,EAAMgX,IAAI,aAAc1U,EAAK4pB,YAC7B,IAAMC,KAGN,OApBa,SAATC,EAAkB9pB,EAAM+pB,GAC5BA,EAAMl0B,KAAKsJ,EAAOuC,OAAO1B,KACRA,EAAKzG,cACbxD,QAAQ,SAACi0B,GAChBF,EAAOE,EAAOD,KAchBD,CAAO9pB,EAAM6pB,GACbnsB,EAAMgX,IAAI,iBAAkBmV,GACrBnsB,GAQHusB,EAAuB,SAAS9oB,EAAYiB,GAChD,GAAsB,SAAlBA,EAASC,KAAiB,CAC5B,IAAM6nB,EAAoD9nB,EAE1D,OADA/K,UAAY0I,OAAOmqB,EAAa7mB,IAAK,yBAC9BomB,EAAYU,iCACjBD,EAAa7mB,IACb6mB,EAAaxsB,OAAS,GACtB0E,EAASwnB,YACT1oB,KAAKwoB,EAASt1B,KAAK,KAAMgO,IAAWlB,KAAK,KAAM,SAACoE,GAChD,IAAI8kB,4BAAoCF,EAAaxsB,MAAjD,4BAAkFwsB,EAAa7mB,IAA/F,KAIJ,OAHA+mB,2BAAmC9kB,EAAA,QACnC+kB,QAAQC,MAAMF,GAEP/qB,EAAGyE,aAAQhR,KAEf,GAAsB,QAAlBsP,EAASC,KAAgB,CAClC,IAAMG,EAAkDJ,EACxD/K,UAAY0I,OAAOyC,EAAYO,UAAW,6BAC1C,IAAMwnB,EAASppB,EAAWqB,EAAYO,WAItC,OAHA1L,UAAY0I,OAAOwqB,EAAQ,gCAC3BlzB,UAAY0I,OAAOwqB,EAAOlnB,IAAK,8BAC/BhM,UAAY0I,OAAOwqB,EAAOC,UAAW,qCAC9Bd,EAAStnB,EAAUqnB,EAAYgB,oBACpCF,EAAOlnB,IACPb,EAAY7F,QAAU,GACtB4tB,EAAOC,UACPD,EAAOloB,UACPvP,EACAsP,EAASwnB,WACTW,EAAOG,WAAa,kBAAoB,cAG5CrzB,UAAYszB,KAAZ,qBAAsCvoB,EAASC,OA6B3CuoB,EAAmB,SAASrlB,GAChC,IAAMslB,EAAWtlB,EAAKulB,kBAAkB3zB,IAAI,SAAC6I,GAC3C,IAAM+qB,EAAW/qB,EAAKqC,KACtB,MAAiB,SAAb0oB,GAAoC,QAAbA,EAClBd,EAAqB1kB,EAAKpE,WAAYnB,GACpCA,EAAKzG,SA1BS,SAAS4H,EAAYnB,GAEhD,IACM6qB,EADkB7qB,EAAKzG,SAASpC,IAAI,SAAA6c,GAAA,OAAKA,IAAGgX,UACjB7zB,IAAI8yB,EAAqB71B,KAAK,KAAM+M,IACrE,OAAO9B,EAAG4rB,IAAIJ,GAAU3pB,KAAK,SAACvE,GAC5B,IAAIuuB,SACAvuB,IACFA,EAASA,EAAOyd,OAAO,SAAAhH,GAAA,OAAKA,IAC5B8X,EAAa,IAAIjwB,UAAa0B,IAEhC,IAAM+rB,EAAQe,EAAY0B,iBAAiBD,GAE3C,OADAxB,EAAS1pB,EAAM0oB,GACRA,IAgBE0C,CAAqB7lB,EAAKpE,WAAYnB,QAE7C,GAEDhR,MACH,OAAOqQ,EAAG4rB,IAAIJ,IACdz2B,KAAKpF,MAwBP,OAtBAA,KAAKu5B,gBAAkBv5B,KAAKs5B,SAASpnB,KAAK0pB,GAAkB1pB,KAAK,SAACmqB,GAChE,IAAM1uB,KAkBN,OAfI2D,EAAKqnB,2BAEPH,EAAe8D,UAAU,SACzB3uB,EAAO9G,KAAK,IAAI01B,WACdC,MAAS,QACT7B,UAAa8B,UAAa,QAK9BJ,EAAOt1B,QAAQ,SAAC2H,GACVA,GACFf,EAAO9G,KAAK6H,KAGTf,IAGF3N,KAAKu5B,iBAUdhzB,EAAQrG,UAAUw8B,eAAiB,SAASrC,GAC1C,OAAOr6B,KAAKs5B,SAASpnB,KAOnB,SAAAqE,GAAA,OAAQhQ,EAAQ6zB,gBAAgB7jB,EAAKkjB,OAAQY,MASjD9zB,EAAQrG,UAAUy8B,gBAAkB,WAClC,OAAO38B,KAAKs5B,SAASpnB,KAMnB,SAAAqE,GAAA,OAAQA,EAAKkjB,UAQjBlzB,EAAQrG,UAAU08B,0BAA4B,WAE5C,OADAv0B,UAAY0I,OAAyB,OAAlB/Q,KAAKs5B,UACjBt5B,KAAKs5B,SAASpnB,KAMnB,SAAAqE,GAAA,OAAQA,EAAKulB,qBAUjBv1B,EAAQrG,UAAU+R,oBAAsB,WAEtC,OADA5J,UAAY0I,OAAyB,OAAlB/Q,KAAKs5B,UACjBt5B,KAAKs5B,SAASpnB,KAMnB,SAAAqE,GAAA,OAAQA,EAAKpE,cAQjB5L,EAAQrG,UAAU28B,kBAAoB,WAEpC,OADAx0B,UAAY0I,OAAyB,OAAlB/Q,KAAKs5B,UACjBt5B,KAAKs5B,SAASpnB,KAAKlS,KAAK88B,mBAAmB13B,KAAKpF,QASzDuG,EAAQrG,UAAU48B,mBAAqB,SAASvmB,GAAM,IAAAvE,EAAAhS,KACpD,OAAOuW,EAAKkjB,OAAOsD,KAAK,SAAC7yB,GAEvB,OAD0BA,EAAMK,SAASwyB,KAAK/qB,EAAKgrB,uBAAuB53B,KAA5B4M,OAUlDzL,EAAQrG,UAAU88B,uBAAyB,SAAS7uB,GAClD,GAAIA,EAAK8uB,SACP,OAAO,EAGT,IAAIJ,GAAoB,EAClBtyB,EAAW4D,EAAK5D,SAItB,OAHIA,GAAYA,EAAS1J,SACvBg8B,EAAoBtyB,EAASwyB,KAAK/8B,KAAKg9B,uBAAuB53B,KAAKpF,QAE9D68B,GAUTt2B,EAAQgM,kBAAoB,SAASpE,GAGnC,OAFgBA,EAAKwsB,eAA6C72B,IAAjCqK,EAAKwsB,SAAStoB,eAC7ClE,EAAKwsB,SAAStoB,eAAiB,MAcnC9L,EAAQ22B,qBAAuB,SAAS9pB,GACtC,IAAMunB,EAAWvnB,EAASunB,SACtBwC,EAAgB/pB,EAASgqB,kBAI7B,YAHsBt5B,IAAlBq5B,QAA4Cr5B,IAAb62B,IACjCwC,EAAgBxC,EAASwC,eAEpBA,GAaT52B,EAAQ82B,qBAAuB,SAASjqB,GACtC,IAAMunB,EAAWvnB,EAASunB,SACtB2C,EAAgBlqB,EAASmqB,kBAI7B,YAHsBz5B,IAAlBw5B,QAA4Cx5B,IAAb62B,IACjC2C,EAAgB3C,EAAS2C,eAEpBA,GAST/2B,EAAQrG,UAAUs9B,WAAa,SAASC,GAAY,IAAAC,EAAA19B,KAElDqI,UAAY0I,OAAO/Q,KAAK+4B,SAAU,iCAE9B/4B,KAAK2K,SAEP3K,KAAKq5B,UAAYr5B,KAAK64B,IAAI1iB,QAC1BnW,KAAKs5B,SAAWt5B,KAAKq5B,UAAUhjB,QAC/BrW,KAAKu5B,gBAAkB,KACvBv5B,KAAK2K,QAAS,GAGhB3K,KAAK84B,OAAOG,IAAIj5B,KAAK+4B,UACnB93B,YAAuB6C,IAAf25B,GACNE,KAAQF,EACRG,cAAiB59B,KAAKk5B,gBAEtB0E,cAAiB59B,KAAKk5B,eAExB2E,OAAO,EACPC,iBAAiB,IAChB5rB,KAAK,SAACoE,GACP,GAAmC,GAA/BA,EAASC,KAAKwnB,OAAOl9B,OAAa,CACpC,IAAMu6B,sCACJ9kB,EAASC,KAAKwnB,OAAO3pB,KAAK,MAC5BinB,QAAQC,MAAMF,GACa,OAAvBsC,EAAKvE,eAA0BuE,EAAKvE,cAAc6E,SAAS,UAC7DvlB,OAAOwlB,MAAM7C,GAGjBsC,EAAKrE,UAAUvkB,QAAQwB,EAASC,MAChCmnB,EAAKQ,cAAc,UACnBR,EAAK/yB,QAAS,GACb,SAAC2L,GACFonB,EAAKrE,UAAU8E,OAAO7nB,MAQ1B/P,EAAQ+M,UACN8qB,YAAa,aACbC,gBAAiB,gBACjBC,KAAM,OACN/qB,IAAK,QAOPhN,EAAQW,OAASC,QAAQD,OAAO,aAC9Bq3B,UAAmBr3B,OAAOK,QAEb2D,MAAM,uBACrB3E,EAAQW,OAAOE,QAAQ,YAAab,GACpCA,EAAQW,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG7BhB,oFC7kBf,QAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,KACY6J,0JAAZ7J,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,wDAcA,IAAMC,EAAU,SAASi4B,EAAQl1B,EAAYm1B,GAAQ,IAAAntB,EAAAtR,KAE7C0+B,OAA4C56B,IAAnC26B,EAAA,qBAMfz+B,KAAK0+B,OAASA,EAEd,IAAMC,EAAWF,EAAA,cAMjBz+B,KAAKwQ,WAAalH,EAMlBtJ,KAAKga,cAMLha,KAAK4+B,OAAS,MAMd5+B,KAAKmO,KAEDuwB,EACFF,EAAO5rB,OAAO+rB,EAAU,SAACrqB,EAAQuqB,GAC/BvtB,EAAKnD,KAAOmG,KAGdtU,KAAKmO,KAA+BqwB,EAAOp2B,MAAMu2B,GACjDt2B,UAAY0I,YAAqBjN,IAAd9D,KAAKmO,OAG1B,IAAM2wB,EAAUL,EAAA,iBACVt2B,EAA6Bq2B,EAAOp2B,MAAM02B,GAChDz2B,UAAY0I,YAAejN,IAARqE,GAMnBnI,KAAK6T,OAAS2qB,EAAOO,QAAP,cAMd/+B,KAAKuK,YAEDvK,KAAK6T,QACP7T,KAAK6T,OAAOtJ,SAAS1D,KAAK7G,MAG5Bw+B,EAAOQ,IAAI,WAAY,WACrB,GAAI1tB,EAAKuC,OAAQ,CACf,IAAM1H,EAAQmF,EAAKuC,OAAOtJ,SAASkX,QAArBnQ,GACdjJ,UAAY0I,OAAO5E,GAAS,GAC5BmF,EAAKuC,OAAOtJ,SAAS00B,OAAO9yB,EAAO,MAQvCnM,KAAK0G,IAAMyJ,EAAOuC,OAAO1S,MAMzBA,KAAKk/B,MAAQR,EAAS,EAAI1+B,KAAK6T,OAAOqrB,MAAQ,EAK9CV,EAAA,IAAgBx+B,KAAK0G,IACrB83B,EAAA,MAAkBx+B,KAAKk/B,MAMvBl/B,KAAKmI,IAAMA,EAEX,IAAIg3B,EAAgBV,EAAA,uBACpB,QAAsB36B,IAAlBq7B,EAA6B,CAC/B,IAAMC,EAAoBX,EAAA,2BACpBY,EAAmBb,EAAOp2B,MAAMg3B,GACtC/2B,UAAYi3B,aAAaD,GACzBF,EAAgBE,EAelB,GAbAh3B,UAAY0I,YAAyBjN,IAAlBq7B,GAMnBn/B,KAAKm/B,cAAgBA,EAMrBn/B,KAAK0O,MAAQ,MACRgwB,EAAQ,CACX,IAAMhwB,EAAQ8vB,EAAOp2B,MAAM+2B,GAAgB/sB,SAAYpS,QAAU,KAC7D0O,IACFrG,UAAY0I,OACVrC,aAAiB6wB,WAAgB7wB,aAAiB8wB,WAEpDx/B,KAAK0O,MAAQA,GAQjB1O,KAAKy/B,YAAc,KAEfz/B,KAAK0O,QACPgxB,UAAiBC,aAAa3/B,KAAK0O,MAAO8vB,GAC1CkB,UAAiBhxB,MAAM1O,KAAK0O,OAE5B1H,UAAS4B,OAAO5I,KAAK0O,MAAO,iBAAkB,WAC5C4C,EAAKd,WAAWovB,WAAW,yBAA3BtuB,MAIJ,IAAIuuB,EAAgBpB,EAAA,uBACpB,QAAsB36B,IAAlB+7B,EAA6B,CAC/B,IAAMC,EAAoBrB,EAAA,2BAC1BoB,EAAgBrB,EAAOp2B,MAAM03B,QAGTh8B,IAAlB+7B,GACFx3B,UAAYi3B,aAAaO,GAO3B7/B,KAAK6/B,cAAgBA,EAGjBA,GACFrB,EAAOp2B,MAAMy3B,GAAgBE,UAAavB,EAAQpsB,SAAYpS,OAGhEw+B,EAAA,cAA0Bx+B,4FAS5BuG,EAAQrG,UAAU2S,SAAW,WAC3B,OAAO7S,KAAK4+B,QAWdr4B,EAAQrG,UAAU8/B,SAAW,SAASC,EAAOC,GAAe,IAAAluB,EAAAhS,KAC1D,GAAIigC,IAAUjgC,KAAK4+B,OAAnB,CAGA5+B,KAAKmgC,kBAAkBF,GAGnBjgC,KAAK6T,QACP7T,KAAK6T,OAAOusB,eAGd,IAAMC,EAAergC,KAAK0+B,OAAS1+B,KAAKuK,UAAYhE,EAAQ0N,mBAAmBjU,aAEzD8D,IAAlBo8B,GAA+BA,IACjCG,EAAat5B,QAAQ,SAACu5B,GACpBtuB,EAAKxB,WAAWovB,WAAW,uBAA3B5tB,EAAyDsuB,OAS/D/5B,EAAQrG,UAAUigC,kBAAoB,SAASF,GAE7CjgC,KAAK4+B,OAAmB,OAAVqB,EAAiB,KAAO,MAEtCjgC,KAAKuK,SAASxD,QAAQ,SAASi0B,GAC7BA,EAAMmF,kBAAkBngC,KAAK4+B,SAC5B5+B,OASLuG,EAAQrG,UAAUkgC,aAAe,WAC/B,IAAMG,EAAWvgC,KAAKwgC,oBAClBxgC,KAAK4+B,SAAW2B,IAGpBvgC,KAAK4+B,OAAS2B,EACVvgC,KAAK6T,QACP7T,KAAK6T,OAAOusB,iBAUhB75B,EAAQrG,UAAUsgC,kBAAoB,WACpC,QAA2B18B,IAAvB9D,KAAKmO,KAAK5D,SACZ,OAAOvK,KAAK4+B,OAEd,IAAI6B,SACAC,SAUJ,OATA1gC,KAAKuK,SAASwyB,KAAK,SAAC/B,GAElB,GADAyF,EAAazF,EAAMwF,oBACfE,GACEA,IAAuBD,EACzB,OAAOA,EAAa,gBAGxBC,EAAqBD,IAEhBA,GASTl6B,EAAQrG,UAAUygC,aAAe,SAAS9d,GACxC,IAAMnU,EAAQ1O,KAAK0O,MACbvG,EAAMnI,KAAKmI,IACjB,GAAKuG,EAGL,YAAY5K,IAAR+e,EAOK1a,EAAI6F,YAAY4yB,WAAWnf,QAAQ/S,IAAU,OAN/CmU,EAGH1a,EAAI04B,SAASnyB,GAFbvG,EAAI24B,YAAYpyB,KAetBnI,EAAQrG,UAAU6gC,cAAgB,WAChC,OAAO/gC,KAAKy/B,aAQdl5B,EAAQrG,UAAU8gC,cAAgB,SAASC,GACzCjhC,KAAKy/B,YAAcwB,GAWrB16B,EAAQ0N,mBAAqB,SAAS7B,GAEpC,IADA,IAAI8uB,EAAO9uB,GACH8uB,EAAKrtB,OAAO6qB,QAClBwC,EAAOA,EAAKrtB,OAEd,OAAOqtB,GAOT36B,EAAQ46B,iBACNC,KAAM,OACNC,KAAM,OACNC,QAAS,WAkBX/6B,EAAQrG,UAAU0R,mBAAqB,SAAS2vB,GAI9C,OAFiBA,EAAQvhC,OAASuG,EAAQ46B,gBAAgBG,SAGxD,KAAK/6B,EAAQ46B,gBAAgBC,KAC3B,OAAO,EACT,KAAK76B,EAAQ46B,gBAAgBE,KAC3B,OAAO,EACT,KAAK96B,EAAQ46B,gBAAgBG,QAC3B,IAAK,IAAI9yB,EAAI,EAAGA,EAAIxO,KAAKuK,SAAS1J,SAAU2N,EAAG,CAG7C,GAFcxO,KAAKuK,SAASiE,GACToD,mBAAmB2vB,GAEpC,OAAO,EAGX,OAAO,EACT,QACEl5B,UAAYszB,KAAK,qBAQvBp1B,EAAQW,OAASC,QAAQD,OAAO,+BACjB4P,WAAW,0BAA2BvQ,GACrDc,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,sEC5Yfi7B,EAAAl7B,EAAA,GAmBA,MAAAm7B,EAAA,WAMAzhC,KAAA0hC,eAAA,IAAA5rB,cAEA6rB,EAAA,QAAAphC,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAA8gC,EAAAE,EAAA,SAMAF,EAAAvhC,UAAAumB,QAAA,WACA,OAAAmb,EAAA,EAAAC,KAOAJ,EAAAvhC,UAAAgb,YAAA,SAAAwM,EAAAra,GACA,GAAAm0B,EAAA,QAAAM,WAAApa,GACA,OAAA1nB,KAAA+hC,wBAC0B,EAAA10B,GACvB,GAAAm0B,EAAA,QAAAQ,OAAAta,GACH,OAAA1nB,KAAAiiC,oBAAoD,EAAA50B,GACjD,oBAAAqa,EAAA,CACH,MAAAwa,EAAAV,EAAA,QAAA1R,MAAApI,GACA,OAAA1nB,KAAA+hC,wBAAAG,EAAA70B,GAEA,aAUAo0B,EAAAvhC,UAAA6hC,wBAAA,SACAG,EAAA70B,GACA,MAAAT,EAAA5M,KAAAmiC,yBAAAD,EAAA70B,GACA,OAAAT,EAAA/L,OAAA,EACA+L,EAAA,GAEA,MAUA60B,EAAAvhC,UAAA+hC,oBAAA,SAAA9zB,EAAAd,GACA,aAOAo0B,EAAAvhC,UAAA0P,aAAA,SAAA8X,EAAAra,GACA,GAAAm0B,EAAA,QAAAM,WAAApa,GACA,OAAA1nB,KAAAmiC,yBAC0B,EAAA90B,GACvB,GAAAm0B,EAAA,QAAAQ,OAAAta,GACH,OAAA1nB,KAAA6P,qBAAqD,EAAAxC,GAClD,oBAAAqa,EAAA,CACH,MAAAwa,EAAAV,EAAA,QAAA1R,MAAApI,GACA,OAAA1nB,KAAAmiC,yBAAAD,EAAA70B,GAEA,UAWAo0B,EAAAvhC,UAAAiiC,yBAAA,SACAD,EAAA70B,GAEA,MAAAT,KACA,IAAAwoB,EACA,IAAAA,EAAA8M,EAAAE,WAA0BhN,EAAGA,IAAAiN,YAC7BjN,EAAAzmB,UAAAC,KAAAC,cACAlO,OAAAsO,EAAA,OAAAtO,CAAAiM,EAAA5M,KAAA6P,qBAAAulB,EAAA/nB,IAGA,OAAAT,GAWA60B,EAAAvhC,UAAA2P,qBAAA,SAAA1B,EAAAd,KAMAo0B,EAAAvhC,UAAAib,aAAA,SAAAuM,EAAAra,GACA,GAAAm0B,EAAA,QAAAM,WAAApa,GACA,OAAA1nB,KAAAsiC,yBAC0B,EAAAj1B,GACvB,GAAAm0B,EAAA,QAAAQ,OAAAta,GACH,OAAA1nB,KAAAuiC,qBAAqD,EAAAl1B,GAClD,oBAAAqa,EAAA,CACH,MAAAwa,EAAAV,EAAA,QAAA1R,MAAApI,GACA,OAAA1nB,KAAAsiC,yBAAAJ,EAAA70B,GAEA,aAWAo0B,EAAAvhC,UAAAoiC,yBAAA,SAAAJ,EAAA70B,GACA,aAUAo0B,EAAAvhC,UAAAqiC,qBAAA,SAAAp0B,EAAAd,GACA,aAOAo0B,EAAAvhC,UAAAsiC,eAAA,SAAA9a,GACA,GAAA8Z,EAAA,QAAAM,WAAApa,GACA,OAAA1nB,KAAAyiC,2BAA+D,GAC5D,GAAAjB,EAAA,QAAAQ,OAAAta,GACH,OAAA1nB,KAAA0iC,uBAAuD,GACpD,oBAAAhb,EAAA,CACH,MAAAwa,EAAAV,EAAA,QAAA1R,MAAApI,GACA,OAAA1nB,KAAAyiC,2BAAAP,GAEA,aAUAT,EAAAvhC,UAAAuiC,2BAAA,SAAAP,GACA,OAAAliC,KAAA2iC,uBASAlB,EAAAvhC,UAAAwiC,uBAAA,SAAAv0B,GACA,OAAAnO,KAAA2iC,uBAOAlB,EAAAvhC,UAAAkb,aAAA,SAAA5O,EAAAa,GACA,MAAAc,EAAAnO,KAAAgQ,iBAAAxD,EAAAa,GACA,OAAArN,KAAA0hC,eAAAxrB,kBAAA/H,IAUAszB,EAAAvhC,UAAA8P,iBAAA,SAAAxD,EAAAa,GACA,aAOAo0B,EAAAvhC,UAAAmb,cAAA,SAAAzO,EAAAS,GACA,MAAAc,EAAAnO,KAAAiQ,kBAAArD,EAAAS,GACA,OAAArN,KAAA0hC,eAAAxrB,kBAAA/H,IASAszB,EAAAvhC,UAAA+P,kBAAA,SAAArD,EAAAS,GACA,aAOAo0B,EAAAvhC,UAAAob,cAAA,SAAA1Z,EAAAyL,GACA,MAAAc,EAAAnO,KAAAkQ,kBAAAtO,EAAAyL,GACA,OAAArN,KAAA0hC,eAAAxrB,kBAAA/H,IASAszB,EAAAvhC,UAAAgQ,kBAAA,SAAAtO,EAAAyL,GACA,aAEAhH,EAAA,+kBCvQAC,EAAA,SACAA,EAAA,MACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,yDAKA,IAAMC,cAiBJ,SAAAA,EAAY+G,gGAASs1B,CAAA5iC,KAAAuG,GAAA,IAAA+K,mKAAAuxB,CAAA7iC,MAAAuG,EAAAu8B,WAAAniC,OAAAoiC,eAAAx8B,IAAAhG,KAAAP,KAEbsN,IASNgE,EAAK0xB,kBAAoB11B,EAAQ21B,kBAAoB,KAOrD3xB,EAAK4xB,iBAAmB51B,EAAQ61B,iBAAmBC,UAAoB57B,IAQvE8J,EAAK+xB,aAAe/1B,EAAQg2B,aAAe,KAU3ChyB,EAAKiyB,WAAaj2B,EAAQk2B,WAAa,KAWvClyB,EAAKmyB,WAAiC,IAArBn2B,EAAQo2B,SAOzBpyB,EAAKqyB,YAAcr2B,EAAQstB,YAAc,KAOzCtpB,EAAKsyB,cAAgBt2B,EAAQhM,cAC3BiF,EAAQs9B,uBAOVvyB,EAAKwyB,cAAgBx2B,EAAQy2B,cAAgB,YAS7CzyB,EAAK0yB,WAAa12B,EAAQ22B,WAAa,KAOvC3yB,EAAK4yB,eAAiB52B,EAAQ62B,eAC5B59B,EAAQ69B,WAAWC,UAOrB/yB,EAAKgzB,SAAWh3B,EAAQi3B,SAAWh+B,EAAQi+B,KAAKjxB,IAShDjC,EAAKmzB,YAAmC,IAAtBn3B,EAAQo3B,UAS1BpzB,EAAKqzB,kBAA+C,IAA5Br3B,EAAQs3B,gBAShCtzB,EAAKuzB,oBAAmD,IAA9Bv3B,EAAQw3B,kBAOlCxzB,EAAKyzB,wBAAmDjhC,IAA9BwJ,EAAQ03B,kBAChC13B,EAAQ03B,kBAAoB,GAO9B1zB,EAAK2zB,mBAAqB33B,EAAQ43B,kBAMlC5zB,EAAK6zB,gBAAkB73B,EAAQ83B,eAM/B9zB,EAAK+zB,mBAAyCvhC,IAAzBwJ,EAAQg4B,aAC3Bh4B,EAAQg4B,aAAe,KAMzBh0B,EAAKi0B,gBAAkBj4B,EAAQk4B,eAO/Bl0B,EAAKm0B,cAAgBn4B,EAAQo4B,cAC3Bn/B,EAAQo/B,aAAar0B,EAAK4yB,gBAO5B5yB,EAAKs0B,kBAAoBt4B,EAAQu4B,kBAC/Bt/B,EAAQu/B,iBAAiBC,QAO3Bz0B,EAAK00B,iBAAmB14B,EAAQ24B,iBAC9B1/B,EAAQ2/B,gBAAgBC,KAO1B70B,EAAK80B,QAAU94B,EAAQ+4B,OAOvB/0B,EAAKg1B,eAAiBh5B,EAAQi5B,eAC5BhgC,EAAQigC,cAAcC,IAQxBn1B,EAAKo1B,kBAA+C,IAA5Bp5B,EAAQq5B,gBAOhCr1B,EAAKs1B,QAAUt5B,EAAQu5B,OAOvBv1B,EAAKw1B,WAAax5B,EAAQy5B,UAO1Bz1B,EAAK01B,SAAW15B,EAAQ25B,QAMxB,IAAMt5B,KACN,GAAI2D,EAAKqC,WAAarC,EAAK2yB,UAAW,KAAAiD,GAAA,EAAAC,GAAA,EAAAC,OAAAtjC,EAAA,IACpC,QAAAujC,EAAAC,EAAuBh2B,EAAK2yB,UAA5BsD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAuC,KAA5BS,EAA4BN,EAAAn8B,MACjCy8B,EAASh0B,WACXhG,EAAO9G,KAAK8gC,EAASpgC,OAHW,MAAAqgC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,IAQtC,IAAIzxB,EAAY,KAChB,GAAIrE,EAAKw2B,aAAen6B,EAAO9M,OAAQ,CACrC,IAAIknC,OAASjkC,EACTwN,EAAK00B,mBAAqBz/B,EAAQ2/B,gBAAgBC,KACpD4B,EAAS,IAAIC,UACJ12B,EAAK00B,mBAAqBz/B,EAAQ2/B,gBAAgB+B,OAC3DF,EAAS,IAAIG,WAEf7/B,UAAY0I,OAAOg3B,GACnBpyB,EAAY,IAAIC,WACd7C,UAAWzB,EAAKo0B,aAChBx2B,YAAavB,EACbw6B,UAAWJ,IAQfz2B,EAAK82B,WAAazyB,EAElB,IAAI0yB,EAAY,KAnQG,OAoQf/2B,EAAKg3B,aAAe36B,EAAO9M,QACzByQ,EAAKi1B,gBAAkBhgC,EAAQigC,cAAcC,MAC/C4B,EAAY,IAAIE,WACd56B,YAUN2D,EAAKk3B,WAAaH,EAjRC/2B,EAjBjB,gUAAAm3B,CAAAliC,EAAwBmiC,WAAxBC,EAAApiC,IAAAI,IAAA,gBAAAuE,MAAA,WAgaF,OAAA09B,EAAAriC,EAAArG,UAAA4iC,WAAAniC,OAAAoiC,eAAAx8B,EAAArG,WAAA,aAAAF,SAhaE2G,IAAA,gBAAAuE,MAAA,SAsaU29B,GACZD,EAAAriC,EAAArG,UAAA4iC,WAAAniC,OAAAoiC,eAAAx8B,EAAArG,WAAA,gBAAAF,MAAAO,KAAAP,KAAoB6oC,GACpB7oC,KAAK8oC,uCAxaHniC,IAAA,iCAAAuE,MAAA,SAkwB2B+1B,GAC7B,OAAOjhC,KAAK+oC,kBAAoB9H,EAAW8H,kBACzC/oC,KAAK8nC,aAAe7G,EAAW6G,aAC/B9nC,KAAK2T,WAAastB,EAAWttB,WAC7B3T,KAAKqmC,SAAWpF,EAAWoF,QAC3BrmC,KAAKgpC,4BAA4B/H,MAvwBjCt6B,IAAA,iCAAAuE,MAAA,SAixB2B+1B,GAC7B,OAAOjhC,KAAKipC,kBAAoBhI,EAAWgI,kBACzCjpC,KAAKsoC,aAAerH,EAAWqH,aAC/BtoC,KAAK2T,WAAastB,EAAWttB,WAC7B3T,KAAK6mC,SAAW5F,EAAW4F,QAC3B7mC,KAAKgpC,4BAA4B/H,MAtxBjCt6B,IAAA,uBAAAuE,MAAA,SAiyBiBg+B,GAA4B,IAAvBC,EAAuBzoC,UAAAG,OAAA,QAAAiD,IAAApD,UAAA,IAAAA,UAAA,GAC/C,QAAUV,KAAKopC,wBAAwBF,EAAKC,GAAetoC,UAlyBzD8F,IAAA,0BAAAuE,MAAA,SA8yBoBg+B,GAA4B,IAAvBC,EAAuBzoC,UAAAG,OAAA,QAAAiD,IAAApD,UAAA,IAAAA,UAAA,GAE5C2oC,KAEN,GAAIrpC,KAAKikC,UAAW,KAAAqF,GAAA,EAAAC,GAAA,EAAAC,OAAA1lC,EAAA,IAClB,QAAA2lC,EAAAC,EAAuB1pC,KAAKikC,UAA5BsD,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAAuC,KAA5B3B,EAA4B8B,EAAAv+B,MAC/By+B,EAAShC,EAASxK,cAClByM,EAASjC,EAASrK,sBACMx5B,IAAX8lC,GAAwBV,GAAOU,UACpB9lC,IAAX6lC,GAAwBT,GAAOS,KAGjCR,IAAiBxB,EAASh0B,WACzC01B,EAAWxiC,KAAK8gC,EAASpgC,OATX,MAAAqgC,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,IAcpB,OAAOH,KAh0BL1iC,IAAA,mBAAAuE,MAAA,WA00BoC,IAAvBi+B,EAAuBzoC,UAAAG,OAAA,QAAAiD,IAAApD,UAAA,IAAAA,UAAA,GAEhC2oC,KAEN,GAAIrpC,KAAKikC,UAAW,KAAA4F,GAAA,EAAAC,GAAA,EAAAC,OAAAjmC,EAAA,IAClB,QAAAkmC,EAAAC,EAAuBjqC,KAAKikC,UAA5BsD,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAAuC,KAA5BlC,EAA4BqC,EAAA9+B,MAChCi+B,IAAiBxB,EAASh0B,WAC7B01B,EAAWxiC,KAAK8gC,EAASpgC,OAHX,MAAAqgC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,IAQpB,OAAOV,KAt1BL1iC,IAAA,2BAAAuE,MAAA,WAg2BF7C,UAAY0I,OAAO/Q,KAAKwjC,WACxB,IAAM6F,EAAarpC,KAAKkqC,mBAExB,OADA7hC,UAAY0I,OAA6B,IAAtBs4B,EAAWxoC,QACvBwoC,EAAW,MAn2BhB1iC,IAAA,oCAAAuE,MAAA,WA62BF,IAAI5J,EAAeiF,EAAQs9B,uBAE3B,GAAI7jC,KAAK6oC,WAAY,KAAAsB,GAAA,EAAAC,GAAA,EAAAC,OAAAvmC,EAAA,IACnB,QAAAwmC,EAAAC,EAAwBvqC,KAAK6oC,WAA7BtB,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAAyC,KAA9BK,EAA8BF,EAAAp/B,MACvC,GAAIs/B,EAAUn3B,OAASo3B,UAAwBC,SAAU,CACvDppC,EAAekpC,EAAUjjC,KACzB,QAJe,MAAAqgC,GAAAwC,GAAA,EAAAC,EAAAzC,EAAA,aAAAuC,GAAAI,EAAA1C,QAAA0C,EAAA1C,SAAA,WAAAuC,EAAA,MAAAC,IASrBrqC,KAAK4jC,cAAgBtiC,KAx3BnBqF,IAAA,8BAAAuE,MAAA,SAo4BwB+1B,GAC1B,IAAI0J,GAAQ,EAENC,EAAW5qC,KAAK6qC,iBAChBC,EAAY7J,EAAW4J,iBAE7B,IAAK,IAAMlkC,KAAOikC,EAChB,GAAIA,EAASjkC,KAASmkC,EAAUnkC,GAAM,CACpCgkC,GAAQ,EACR,MAIJ,GAAIA,EACF,IAAK,IAAMhkC,KAAOmkC,EAChB,GAAIA,EAAUnkC,KAASikC,EAASjkC,GAAM,CACpCgkC,GAAQ,EACR,MAKN,OAAOA,KA15BLhkC,IAAA,mBAAAsyB,IAAA,WA8SF,OAAOj5B,KAAKgjC,mBA9SVtd,IAAA,SAqTiBud,GACnBjjC,KAAKgjC,kBAAoBC,KAtTvBt8B,IAAA,kBAAAsyB,IAAA,WA8TF,OAAOj5B,KAAKkjC,kBA9TVxd,IAAA,SAqUgByd,GAClBnjC,KAAKkjC,iBAAmBC,KAtUtBx8B,IAAA,cAAAsyB,IAAA,WA8UF,OAAOj5B,KAAKqjC,cA9UV3d,IAAA,SAqVY4d,GACdtjC,KAAKqjC,aAAeC,KAtVlB38B,IAAA,iBAAAsyB,IAAA,WA8VF,OAAOj5B,KAAKmlC,iBA9VVzf,IAAA,SAqWeqlB,GACjB/qC,KAAKmlC,gBAAkB4F,KAtWrBpkC,IAAA,iBAAAsyB,IAAA,WA8WF,IAAI+R,EAAQ,KACNC,EAAQjrC,KAAKolC,eACb8F,EAAQlrC,KAAKwlC,eAOnB,YANc1hC,IAAVmnC,IACFD,GACE3oC,IAAK6oC,EACLriC,MAAOoiC,IAGJD,GAvXLtlB,IAAA,SA8XeslB,GACbA,GACFhrC,KAAKwlC,eAAiBwF,EAAM3oC,IAC5BrC,KAAKolC,eAAiB4F,EAAMniC,QAE5B7I,KAAKwlC,oBAAiB1hC,EACtB9D,KAAKolC,oBAAiBthC,MApYtB6C,IAAA,iBAAAsyB,IAAA,WA6YF,OAAOj5B,KAAKulC,iBA7YV7f,IAAA,SAoZeqlB,GACjB/qC,KAAKulC,gBAAkBwF,KArZrBpkC,IAAA,WAAAsyB,IAAA,WAgbF,OAAOj5B,KAAKyjC,aAhbV98B,IAAA,YAAAsyB,IAAA,WAwbF,OAAOj5B,KAAKujC,YAxbV7d,IAAA,SA+bU8d,GACZxjC,KAAKujC,WAAaC,KAhchB78B,IAAA,eAAAsyB,IAAA,WAwcF,OAAOj5B,KAAK4jC,iBAxcVj9B,IAAA,eAAAsyB,IAAA,WAgdF,OAAOj5B,KAAK8jC,iBAhdVn9B,IAAA,YAAAsyB,IAAA,WAwdF,OAAOj5B,KAAKgkC,cAxdVr9B,IAAA,gBAAAsyB,IAAA,WAgeF,OAAOj5B,KAAKkkC,kBAheVv9B,IAAA,UAAAsyB,IAAA,WAweF,OAAOj5B,KAAKskC,YAxeV39B,IAAA,YAAAsyB,IAAA,WAgfF,OAAOj5B,KAAKykC,cAhfV99B,IAAA,kBAAAsyB,IAAA,WAwfF,OAAOj5B,KAAK2kC,oBAxfVh+B,IAAA,oBAAAsyB,IAAA,WAggBF,OAAOj5B,KAAK6kC,sBAhgBVl+B,IAAA,oBAAAsyB,IAAA,WAwgBF,OAAOj5B,KAAK+kC,sBAxgBVp+B,IAAA,oBAAAsyB,IAAA,WAghBF,OAAOj5B,KAAKilC,sBAhhBVt+B,IAAA,eAAAsyB,IAAA,WAwhBF,OAAOj5B,KAAKqlC,iBAxhBV1+B,IAAA,eAAAsyB,IAAA,WAgiBF,OAAOj5B,KAAKylC,iBAhiBV9+B,IAAA,mBAAAsyB,IAAA,WAwiBF,OAAOj5B,KAAK4lC,qBAxiBVj/B,IAAA,kBAAAsyB,IAAA,WAgjBF,OAAOj5B,KAAKgmC,oBAhjBVr/B,IAAA,SAAAsyB,IAAA,WAwjBF,OAAOj5B,KAAKomC,WAxjBVz/B,IAAA,gBAAAsyB,IAAA,WAgkBF,OAAOj5B,KAAKsmC,kBAhkBV3/B,IAAA,kBAAAsyB,IAAA,WAwkBF,OAAOj5B,KAAK0mC,oBAxkBV//B,IAAA,SAAAsyB,IAAA,WAilBF,OAAOj5B,KAAK4mC,WAjlBVjgC,IAAA,YAAAsyB,IAAA,WAylBF,OAAOj5B,KAAK8mC,cAzlBVngC,IAAA,UAAAsyB,IAAA,WAkmBF,OAAOj5B,KAAKgnC,YAlmBVrgC,IAAA,mBAAAsyB,IAAA,WA8mBF,IAAMhoB,KACA2pB,EAAa56B,KAAK2jC,gBAClBwH,EAASnrC,KAAKijC,qBAEpB,IAAK,IAAMt8B,KAAOwkC,EACI,OAAhBA,EAAOxkC,QACe7C,IAApB82B,EAAWj0B,IAA0C,OAApBi0B,EAAWj0B,KAC9CsK,EAAOtK,GAAOi0B,EAAWj0B,IAG3BsK,EAAOtK,GAAOwkC,EAAOxkC,GAIzB,OAAOsK,KA5nBLtK,IAAA,mBAAAsyB,IAAA,WA4oBF,OAA6B,OAAtBj5B,KAAKqjC,cACc,OAAxBrjC,KAAKorC,kBA7oBLzkC,IAAA,mBAAAsyB,IAAA,WA6pBF,OAA6B,OAAtBj5B,KAAKqjC,cACc,OAAxBrjC,KAAKorC,kBA9pBLzkC,IAAA,YAAAsyB,IAAA,WAwqBF,IAAItlB,GAAY,EAEhB,IAD2B3T,KAAKsoC,aAAetoC,KAAK8nC,cAC1B9nC,KAAKikC,UAAW,KAAAoH,GAAA,EAAAC,GAAA,EAAAC,OAAAznC,EAAA,IACxC,QAAA0nC,EAAAC,EAAuBzrC,KAAKikC,UAA5BsD,OAAAC,cAAA6D,GAAAG,EAAAC,EAAAhE,QAAAC,MAAA2D,GAAA,EAAuC,CACrC,IAA2B,IADUG,EAAAtgC,MACxByI,UAAoB,CAC/BA,GAAY,EACZ,QAJoC,MAAAi0B,GAAA0D,GAAA,EAAAC,EAAA3D,EAAA,aAAAyD,GAAAI,EAAA5D,QAAA4D,EAAA5D,SAAA,WAAAyD,EAAA,MAAAC,IAQ1C,OAAO53B,KAlrBLhN,IAAA,cAAAsyB,IAAA,WA4rBF,YAAuBn1B,IAAhB9D,KAAKqmC,UA5rBV1/B,IAAA,qBAAAsyB,IAAA,WA4sBF,OAA2B,OAApBj5B,KAAK6oC,YACV7oC,KAAK8nC,aACc,OAAnB9nC,KAAKikC,WACqB,IAA1BjkC,KAAKikC,UAAUpjC,SACiB,IAAhCb,KAAKikC,UAAU,GAAGtwB,aAhtBlBhN,IAAA,cAAAsyB,IAAA,WA2tBF,YAAuBn1B,IAAhB9D,KAAK6mC,UA3tBVlgC,IAAA,eAAAsyB,IAAA,WAouBF,YAAwBn1B,IAAjB9D,KAAKinC,WApuBVtgC,IAAA,YAAAsyB,IAAA,WA4uBF,OAAOj5B,KAAKooC,cA5uBVzhC,IAAA,YAAAsyB,IAAA,WAovBF,OAAOj5B,KAAKwoC,eApvBVjiC,KAq6BNA,EAAQmlC,sBAAwB,SAASr3B,GASvC,MANI,UAAUs3B,KAAKt3B,GACV9N,EAAQi+B,KAAKlG,KAEb/3B,EAAQi+B,KAAKjxB,KAYxBhN,EAAQs9B,uBAAyB,WAOjCt9B,EAAQ69B,YACNwH,UAAW,YACXvH,UAAW,YACXwH,WAAY,cAQdtlC,EAAQi+B,MACNjxB,IAAK,MACL+qB,KAAM,QAQR/3B,EAAQo/B,cACNmG,UAAa,iCACbC,UAAa,yCACbC,WAAc,2BAQhBzlC,EAAQu/B,kBACNC,QAAS,WAQXx/B,EAAQ2/B,iBACN+B,KAAM,OACN9B,KAAM,QAQR5/B,EAAQigC,eACNC,IAAK,qCAIQlgC,+FC3/Bb0lC,QAAS,UAITC,KAAM,OAINC,SAAU,WAIVC,KAAM,OAIN1B,SAAU,WAIV2B,OAAQ,SAIRC,OAAQ,SAIRC,KAAM,kKCvCRC,EAAAlmC,EAAA,GAsCA,MAAAmmC,EAAA,SAAAp/B,GACA,MAAAC,EACAD,MAMArN,KAAAkP,YAAA5B,EAAA4B,YAMAlP,KAAA+S,UAAAzF,EAAAyF,UAMA/S,KAAAyB,QAAA6L,EAAA7L,QAMAzB,KAAA0sC,eAAA,GAKA1sC,KAAA2P,8BACA3P,KAAA2P,2BAAA88B,EAAAE,QACAC,cAAAJ,EAAA,QAAAK,aACAJ,EAAAvsC,UAAA4sC,sBACAC,eAAAP,EAAA,QAAAK,aACAJ,EAAAvsC,UAAA4sC,uBAGAE,EAAA,EAAAzsC,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAA8rC,EAAAO,EAAA,GAOAP,EAAAE,MAAA,6BAeAF,EAAAQ,oBAAA,cAQAR,EAAAvsC,UAAA4sC,qBAAA,SAAA3+B,EAAAC,GACA,MAAAE,EAAAH,EAAAG,UACA,IAAA1B,EAAA,KACA,wBAAA0B,EAEA1B,EADA,+BAAAuB,EAAA++B,aACAV,EAAA,QAAA/8B,mBACAzP,KAAA2P,2BAAAxB,EACAC,EAAApO,MAEAwsC,EAAA,QAAA/8B,gBAAA,KACAzP,KAAA2P,2BAAAxB,EACAC,EAAApO,WAEG,qBAAAsO,GAAA,iBAAAA,EAAA,CACH,MAAAxC,EAAAsC,EAAA,GACA,IAEAI,EAAAC,EAFAS,EAAApD,EAAA,YACAiH,EAAAjH,EAAA,UAEA,MAAAqhC,EAAA,IACAC,EAAA,KACA,IAAAl+B,GAAAf,EAAAI,WAAA,CAEA,IADAW,KAAA6D,KACAvE,EAAA,EAAAC,EAAAN,EAAAI,WAAA1N,OAA8C2N,EAAAC,IAAQD,EAAA,CACtD,MAAAwsB,EAAA7sB,EAAAI,WAAAC,GACA,OAAAwsB,EAAArsB,SAAA,CACA,MAAA0+B,EAAArS,EAAAsS,SAAA93B,MAAA,KAAA+3B,MACA,QAAAr+B,EAAAuS,QAAA4rB,GAAA,CACA,IAAA1mC,EAAA,GACA6mC,EAAA,EACA,MAAAC,EAAAzS,EAAAkS,aACA,UAAAQ,KAAA36B,EAAA,CACA,GAAAA,EAAA26B,KAAAD,EAAA,CACA9mC,EAAA+mC,EACA,QAEAF,EAEA7mC,IAEAoM,EADApM,EAAAwmC,EAAAK,GACAC,GAEAv+B,EAAArI,KAAAF,EAAA,IAAA0mC,KAIA,iBAAA/+B,IAEAxC,EAAA,YAAAoD,EACApD,EAAA,UAAAiH,GAGA,oBAAAA,EAAA,CACA,MAAA46B,EAAA56B,GACAA,MACAq6B,GAAAO,EAEA,MAAAr+B,KACAmE,EAAAjT,MAAAgd,QAAAtO,SACA,UAAAmV,KAAAtR,EAAA,CACA,MAAA5D,KACA,IAAAX,EAAA,EAAAC,EAAAgF,EAAA5S,OAA2C2N,EAAAC,IAAQD,EAAA,GACnD,IAAAiF,EAAAjF,GAAAiT,QAAA,KACA2rB,EAAA35B,EAAAjF,GAAAgH,MAAA,WACA6O,IACAlV,EAAAsE,EAAAjF,GAAAgH,MAAA,KAAA+3B,OACA,kBAAAj/B,EACAk+B,EAAA,QAAAp9B,gBAAApP,KAAAqP,mBAAArP,MACAwsC,EAAA,QAAAK,aAAA7sC,KAAAqP,mBAAArP,OAGAsP,EAAAyD,EAAAsR,IAAAlV,EAGAvC,EADA,iBAAA0B,EACAk+B,EAAA,QAAA/8B,qBAAA3L,EAAAwL,EAAAnB,EAAAC,GAEAo+B,EAAA,QAAA/8B,mBAAAH,EAAAnB,EAAAC,GAMA,OAHA,OAAAxB,IACAA,MAEAA,GASA6/B,EAAAvsC,UAAA0tC,oBAAA,SAAAz/B,EAAAC,GACA,MAAAtC,EAAoCsC,EAAA,GACpCtC,EAAA,QAAAqC,EAAA0/B,kBAAAC,aAAA,WACAhiC,EAAA,aAAAqC,EAAA0/B,kBAAAC,aAAA,gBAEA,MAAAlsC,EAAA4qC,EAAA,QAAA/8B,gBAAA,KACAzP,KAAA+tC,kBAAA5/B,EAAAC,EAAApO,MACA,OAAA4B,EAEkCjB,OAAAqtC,EAAA,qBADlC,CACkCpsC,GAAA,EAAAkK,QAGlC,GAUA2gC,EAAAvsC,UAAAmP,mBAAA,SAAAlB,EAAAC,GACA,IAAAgnB,EACA,MAAA6Y,EAAA9/B,EAAA2/B,aAAA,QACAtB,EAAA,QAAA0B,eAAA//B,EAAAs+B,EAAAE,MAAA,MACAtQ,KACA,IAAA/6B,EACA,IAAA8zB,EAAAjnB,EAAA0/B,kBAAkCzY,EAAGA,IAAA+Y,mBAAA,CACrC,MAAA7/B,EAAA8mB,EAAA9mB,UAIA,OAAA8mB,EAAA7mB,WAAA1N,QACA,IAAAu0B,EAAA7mB,WAAA1N,SACA,IAAAu0B,EAAAgN,WAAAzzB,UAAA,IAAAymB,EAAAgN,WAAAzzB,UAAA,CACA,IAAAzD,EAAAshC,EAAA,QAAAjd,kBAAA6F,GAAA,GACAqX,EAAAQ,oBAAAtB,KAAAzgC,KACAA,OAAApH,GAEAu4B,EAAA/tB,GAAApD,MAGA,cAAAoD,IACAhN,EAAAgN,GAEA+tB,EAAA/tB,GAAAtO,KAAA4tC,oBAAAxY,EAAAhnB,GAGA,MAAA5B,EAAA,IAAA4hC,EAAA,QAAA/R,GAOA,OANA/6B,GACAkL,EAAA6hC,gBAAA/sC,GAEA2sC,GACAzhC,EAAA8hC,MAAAL,GAEAzhC,GASAigC,EAAAvsC,UAAAquC,UAAA,SAAApgC,EAAAC,GACA,MAAAqQ,EACAze,KAAAwuC,6BAAArgC,EAAAC,GACA,GAAAqQ,EAAA,CACA,MAAAa,EAAA,IAAAmvB,EAAA,cAEA,OADAnvB,EAAAT,mBAAA6vB,EAAA,QAAAhhB,IAAAjP,GACAa,IAUAmtB,EAAAvsC,UAAAyuC,eAAA,SAAAxgC,EAAAC,GAEA,MAAAue,EAAA6f,EAAA,QAAA/8B,mBACAzP,KAAA4uC,oBAAAzgC,EAAAC,EAAApO,MACA,OAAA2sB,EACA,IAAAkiB,EAAA,QAAAliB,QAEA,GAUA8f,EAAAvsC,UAAA4uC,oBAAA,SAAA3gC,EAAAC,GAEA,MAAA8Q,EAAAstB,EAAA,QAAA/8B,mBACAzP,KAAA+uC,yBAAA5gC,EAAAC,EAAApO,MACA,GAAAkf,EAAA,CACA,MAAAC,EAAA,IAAA6vB,EAAA,cAEA,OADA7vB,EAAA2V,eAAA5V,GACAC,IAYAstB,EAAAvsC,UAAA+uC,iBAAA,SAAA9gC,EAAAC,GAEA,MAAA6R,EAAAusB,EAAA,QAAA/8B,mBACAzP,KAAAkvC,sBAAA/gC,EAAAC,EAAApO,MACA,GAAAigB,EAAA,CACA,MAAAgW,EAAA,IAAAkZ,EAAA,cAEA,OADAlZ,EAAAoC,YAAApY,GACAgW,IAYAwW,EAAAvsC,UAAAkvC,mBAAA,SAAAjhC,EAAAC,GACAo+B,EAAA,QAAA6C,UAAArvC,KAAAsvC,qBACAnhC,EAAAC,EAAApO,OASAysC,EAAAvsC,UAAAqvC,wBAAA,SAAAphC,EAAAC,GACAo+B,EAAA,QAAA6C,UAAArvC,KAAAwvC,0BACArhC,EAAAC,EAAApO,OASAysC,EAAAvsC,UAAAuvC,qBAAA,SAAAthC,EAAAC,GACAo+B,EAAA,QAAA6C,UAAArvC,KAAA0vC,uBAAAvhC,EACAC,EAAApO,OASAysC,EAAAvsC,UAAAyvC,eAAA,SAAAxhC,EAAAC,GACA,MAAAqQ,EACAze,KAAAwuC,6BAAArgC,EAAAC,GACA,GAAAqQ,EAAA,CACA,MAAAE,EAAA,IAAAixB,EAAA,cAEA,OADAjxB,EAAAE,mBAAA6vB,EAAA,QAAAhhB,IAAAjP,GACAE,IAaA8tB,EAAAvsC,UAAA2vC,oBAAA,SAAA1hC,EAAAC,GACA,MAAA0hC,EAAAtD,EAAA,QAAA/8B,gBAAA,KACAzP,KAAA+vC,mCAAA5hC,EACAC,EAAApO,MACA,OAAA8vC,QAGA,GAUArD,EAAAvsC,UAAA8vC,eAAA,SAAA7hC,EAAAC,GACA,MAAAqQ,EACAze,KAAAwuC,6BAAArgC,EAAAC,GACA,GAAAqQ,EAAA,CACA,MAAAqxB,EAAA,IAAAG,EAAA,QAEA,OADAH,EAAAjxB,mBAAA6vB,EAAA,QAAAhhB,IAAAjP,GACAqxB,IAYArD,EAAAvsC,UAAAgwC,YAAA,SAAA/hC,EAAAC,GAEA,MAAA+hC,EAAA3D,EAAA,QAAA/8B,iBAAA,MACAzP,KAAAowC,2BAAAjiC,EAAAC,EAAApO,MACA,GAAAmwC,KAAA,IACA,MAAAtwB,EAAA,IAAAwwB,EAAA,cACA5xB,EAAA0xB,EAAA,GACAlxB,GAAAR,EAAA5d,QACA,IAAA2N,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA0hC,EAAAtvC,OAA4C2N,EAAAC,IAAQD,EACpD7N,OAAAsO,EAAA,OAAAtO,CAAA8d,EAAA0xB,EAAA3hC,IACAyQ,EAAApY,KAAA4X,EAAA5d,QAIA,OAFAgf,EAAAhB,mBACA6vB,EAAA,QAAAhhB,IAAAjP,EAAAQ,GACAY,IAaA4sB,EAAAvsC,UAAAsuC,6BAAA,SAAArgC,EAAAC,GACA,OAAAo+B,EAAA,QAAA/8B,gBAAA,KACAzP,KAAA+vC,mCAAA5hC,EACAC,EAAApO,OASAysC,EAAAvsC,UAAA0uC,qBACA0B,8BACAC,YAAA/D,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAkvC,oBACAoB,aAAAhE,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAkvC,sBAUA3C,EAAAvsC,UAAA6uC,0BACAuB,8BACAG,iBAAAjE,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAqvC,yBACAmB,kBAAAlE,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAqvC,2BAUA9C,EAAAvsC,UAAAgvC,uBACAoB,8BACAK,cAAAnE,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAuvC,sBACAmB,eAAApE,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAuvC,wBAUAhD,EAAAvsC,UAAAovC,sBACAgB,8BACA31B,MAAA6xB,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAsuC,gCAUA/B,EAAAvsC,UAAAsvC,2BACAc,8BACA91B,WAAAgyB,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAyvC,kBAUAlD,EAAAvsC,UAAAwvC,wBACAY,8BACAz1B,QAAA2xB,EAAA,QAAAp9B,gBACAq9B,EAAAvsC,UAAAgwC,eAUAzD,EAAAvsC,UAAA2wC,cACAP,8BACA/nB,WAAAikB,EAAA,QAAAK,aACAJ,EAAAvsC,UAAA2vC,uBAQApD,EAAAvsC,UAAAqiC,qBAAA,SAAAp0B,EAAAd,GACA,MAAAzL,EAAA5B,KAAA4tC,oBAAAz/B,GACAnO,KAAA+P,eAAA5B,EAAAd,SACA,OAAAzL,GAAA,MAaA6qC,EAAAvsC,UAAA0P,aAMA68B,EAAAvsC,UAAA2P,qBAAA,SAAA1B,EAAAd,GACA,MAAAC,GACA4B,YAAAlP,KAAAkP,YACA6D,UAAA/S,KAAA+S,WAMA,OAJA1F,GACA1M,OAAAmwC,EAAA,OAAAnwC,CAAA2M,EAAAtN,KAAA+P,eAAA5B,EAAAd,IAEArN,KAAA8sC,qBAAA3+B,GAAAb,SAQAm/B,EAAAvsC,UAAAwiC,uBAAA,SAAAv0B,GACA,OAAAxN,OAAAowC,EAAA,IAAApwC,CAAAX,KAAAyB,QAAAzB,KAAAyB,QACA0M,EAAA0/B,kBAAAC,aAAA,aAEAznC,EAAA,sFCrlBA,QAAAC,EAAA,QACAA,EAAA,IACYkT,IAAZlT,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,KACY0qC,IAAZ1qC,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,MACY2qC,IAAZ3qC,EAAA,iNAYA,IAAMC,EAAU,SAAS8J,EAAID,GAM3BpQ,KAAK64B,IAAMxoB,EAMXrQ,KAAK84B,OAAS1oB,qDAOhB7J,EAAQ2qC,UAAY,YAMpB3qC,EAAQ4qC,cAAgB,SAkBxB5qC,EAAQrG,UAAUu7B,oBAAsB,SAAS2V,EAC/CC,EAAkBC,EAAcC,EAAgBC,EAAUC,EAAYC,GAEtE,IAAMzwC,GACJ0wC,OAAUL,EACVM,OAAUP,GAERQ,SACAL,IACFvwC,EAAA,KAAiBuwC,GAEfD,IACFtwC,EAAA,WAAuBswC,EAEvBM,EAAeN,EAAeviC,QAAQ,aAAc,SAEtD,IAAM0Y,EAAS,IAAIoqB,WACjBz9B,IAAK+8B,EACLnwC,OAAQA,EACR8wC,WAAYF,EACZvjB,YAAaojB,IAMf,OAJID,GACF/pB,EAAOsqB,aAAaP,GAGf,IAAIQ,WAAcvqB,YAY3BnhB,EAAQrG,UAAUgyC,kCAAoC,SACpDjR,EAAYyQ,GAEZ,IAAMr9B,EAAM4sB,EAAW4F,OACvBx+B,UAAY0I,OAAOsD,GAEnB,IAAMg1B,EAAapI,EAAWiJ,mBAAmB91B,KAAK,KAChD29B,EAAa9Q,EAAWkD,cACxB3I,EAAYyF,EAAW8C,aAGvBr1B,EAAQ1O,KAAKy7B,oBACjBpnB,EACAg1B,EACA7N,EACAuW,OACAjuC,OACAA,EACA4tC,GASF,OALAhjC,EAAMyjC,WAAWlR,EAAWmR,SAG5B1jC,EAAMgX,IAAI,kBAAmBub,EAAWoR,KAEjC3jC,GAkBTnI,EAAQrG,UAAUi7B,iCAAmC,SAASmX,EAAiBvjC,EAAWwjC,GACxF,IAAMC,EAAS,IAAIC,UACb/jC,EAAQ,IAAI6tB,WAChBmW,QAASC,MAELtiC,EAAKrQ,KAAK64B,IAEhB,OAAO74B,KAAK84B,OAAOG,IAAIqZ,GAAkBzU,OAAO,IAAO3rB,KAAK,SAACoE,GAC3D,IAAIsO,SAIJ,GAHItO,EAASC,OACXqO,EAAS4tB,EAAOI,KAAKt8B,EAASC,OAE5BqO,EAAQ,CACV,IAAMtX,EAAUulC,UAAaC,wBAAwBluB,GACnD0J,YAAa,YACb5f,MAAOK,IAET1G,UAAY0I,OAAOzD,GACnB,IAAMoa,EAAS,IAAImrB,UAAoDvlC,GACnEilC,IAAmBvB,EAAM+B,QAAQR,IACnC7qB,EAAOsrB,iBAAiBT,GAE1B7jC,EAAMukC,UAAUvrB,GAGhB,IAAM/Z,EAASiX,EAAA,eACTR,EAAI5K,EAAQ0gB,KAAKvsB,EAAQ,SAACulC,EAAK/mC,EAAO4uB,GAAb,OAAuBmY,EAAA,YAAqBnkC,IAG3E,OAFAL,EAAMgX,IAAI,qBAAsBtB,EAAA,OAEzB/T,EAAGyE,QAAQpG,GAEpB,OAAO2B,EAAG8tB,OAAH,wCAAkDmU,MAe7D/rC,EAAQrG,UAAUizC,oCAAsC,SACtDC,EAAcC,EAAUd,GAGxB,IAAMjlC,EAAUulC,UAAaC,wBAAwBM,GACnD9kB,YAAa,YACb5f,MAAO2kC,EAAA,aAGThrC,UAAY0I,OAAOzD,GACnB,IAAMoa,EAAS,IAAImrB,UACsBvlC,GAMzC,OAJIilC,IAAmBvB,EAAM+B,QAAQR,IACnC7qB,EAAOsrB,iBAAiBT,GAGnB,IAAIhW,WACT+W,mBAAsBD,EAAA,MACtBX,QAASC,IACTjrB,OAAQA,KAaZnhB,EAAQrG,UAAUi8B,iBAAmB,SAASoX,GAC5C,IAAM7Z,EAAQ,IAAI8F,UAIlB,OAHI+T,GACF7Z,EAAMzrB,UAAUslC,GAEX7Z,GAcTnzB,EAAQrG,UAAUszC,gBAAkB,SAASrrC,EAAKsrC,GAChD,IACI/Z,SAcJ,OAfevxB,EAAIurC,gBAAgB1lC,YAE5B4yB,WAAW7D,KAAK,SAAC4W,GACtB,OAAIA,EAAc1a,IAAI1yB,EAAQ2qC,aAAeuC,IAC3C/Z,EAAuCia,GAChC,KAKNja,KACHA,EAAQ15B,KAAKm8B,oBACPzW,IAAInf,EAAQ2qC,UAAWuC,GAC7BtrC,EAAI04B,SAASnH,IAERA,GAWTnzB,EAAQrG,UAAU0zC,cAAgB,SAASllC,GACzC,OAAO1O,KAAK6zC,eAAenlC,OAY7BnI,EAAQrG,UAAU2zC,eAAiB,SAASnlC,EAAOqsB,GAC7CrsB,aAAiB8wB,UACD9wB,EAAMV,YACdjH,QAAQ,SAASqd,GACzBpkB,KAAK6zC,eAAezvB,EAAG2W,IACtB/6B,MAEC+6B,EAAMtZ,QAAQ/S,GAAS,GACzBqsB,EAAMl0B,KAAK6H,GAGf,OAAOqsB,GAaTx0B,EAAQrG,UAAU4zC,eAAiB,SAAS/kC,EAAWpB,GACrD,IAAIomC,EAAQ,KAWZ,OAVApmC,EAAOovB,KAAK,SAASruB,GACnB,GAAIA,aAAiB8wB,UAAc,CACjC,IAAMwU,EAAYtlC,EAAMV,YAAY4yB,WACpCmT,EAAQ/zC,KAAK8zC,eAAe/kC,EAAWilC,QAC9BtlC,EAAMuqB,IAAI,mBAAqBlqB,IACxCglC,EAAQrlC,GAEV,QAASqlC,GACR/zC,MAEI+zC,GAWTxtC,EAAQrG,UAAU+zC,iBAAmB,SAASvlC,GAE5C,IAAI2F,SACE0H,EAASrN,EAAMuqB,IAAI,sBACzB,QAAen1B,IAAXiY,EAAsB,CACxB,IAAMm4B,EAAYn4B,EAAO,GAAP,eACAjY,IAAdowC,IACF7/B,EAAM6/B,EAAU,GAAV,MAGV,OAAO7/B,GAaT9N,EAAQrG,UAAUi0C,gBAAkB,SAAS9/B,EAC3CtF,EAAWqlC,EAAWC,GACtB,GAAKhgC,EAAL,CAGA,IAAMigC,GACJ3C,OAAU,YACV4C,aAAe,EACfC,QAAW,MACXC,QAAW,QACXC,QAAW,mBACXC,MAAS5lC,GAQX,YANkBjL,IAAdswC,IACFE,EAAA,MAAuBF,QAEFtwC,IAAnBuwC,IACFC,EAAA,KAAsBD,GAEjBpD,EAAM2D,aAAavgC,EAAKigC,KAUjC/tC,EAAQrG,UAAU20C,eAAiB,SAASnmC,EAAOvG,GACjD,IAAKuG,EAAMomC,aACT,OAAO,EAGT,IAAMC,EAAoB5sC,EAAI8M,UAAU+/B,gBACxC,OAAOD,EAAoBrmC,EAAMumC,oBAC7BF,EAAoBrmC,EAAMwmC,oBAQhC3uC,EAAQrG,UAAUi1C,gBAAkB,SAASzmC,GAC3C,IAAM+Y,EAAU/Y,EAAM0mC,YACtB/sC,UAAY0I,OACV0W,aAAmBqqB,WACnBrqB,aAAmB4tB,WAErB,IAAM3tB,EAA8DD,EAC9DxmB,EAASymB,EAAO4tB,YACtBr0C,EAAOsF,EAAQ4qC,eAAiBzvB,KAAK6zB,SACrC7tB,EAAOsqB,aAAa/wC,IActBsF,EAAQrG,UAAUs1C,oBAAsB,SAAS9mC,EAAO+mC,EAAOjE,GAE7D,GAAIiE,EAAM50C,QAAU,EAClB6N,EAAMyjC,YAAW,OACZ,CACLzjC,EAAMyjC,YAAW,GACjB,IAAMzqB,EAA4ChZ,EAAM0mC,YACpD5D,EACF9pB,EAAOsqB,cAAcJ,OAAU6D,EAAOrJ,KAAQoF,IAE9C9pB,EAAOsqB,cAAcJ,OAAU6D,MAYrClvC,EAAQrG,UAAUw1C,kBAAoB,SAAShnC,GAC7C,OACEA,EAAMuqB,IAAI,oBAOd1yB,EAAQW,OAASC,QAAQD,OAAO,uBACjBE,QAAQ,kBAAmBb,GAC1Cc,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,iGC5cf,QAAAD,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,KACYkT,IAAZlT,EAAA,QACAA,EAAA,IACY0qC,IAAZ1qC,EAAA,gNA2BA,IAAMC,EAAU,SAAS+E,EAAUgtB,EAAWE,EAAgBD,EAC5Dod,EAAkBpsC,EAAWG,GAM7B1J,KAAK41C,UAAYtqC,EAMjBtL,KAAK61C,WAAavd,EAMlBt4B,KAAK81C,gBAAkBtd,EAMvBx4B,KAAKo5B,aAAeb,EAMpBv4B,KAAK+1C,kBAAoBJ,EAMzB31C,KAAK4J,WAAaL,EAQlBvJ,KAAKg2C,MACHzrC,aAUFvK,KAAK2R,SAAW,KAQhB3R,KAAKi2C,oCAAsC,EAM3Cj2C,KAAKk2C,gCAMLl2C,KAAKm2C,uCAAyC,KAM9Cn2C,KAAK+J,kBAAoBL,EAOzB1J,KAAK6Q,YAAc,KAEnB7J,UAAS4B,OAAO5I,KAAK4J,WAAY,SAAU5J,KAAK8R,oBAAqB9R,uPAUvEuG,EAAQrG,UAAU4R,oBAAsB,WAAW,IAAAR,EAAAtR,KACjDA,KAAK4J,WAAWqI,sBAAsBC,KAAK,SAACC,GAC1Cb,EAAKT,YAAcsB,IAGjBnS,KAAK2R,UAAY3R,KAAK2R,SAASpH,UACjCvK,KAAK4J,WAAW+yB,kBAAkBzqB,KAAK,SAACunB,GACtCnoB,EAAK8kC,yBAAyB3c,MAapClzB,EAAQrG,UAAUoK,oBAAsB,SAAS+rC,GAG/C,OAFAr2C,KAAKg2C,KAAKzrC,SAAS1J,OAAS,EAC5Bb,KAAK+J,kBAAkBusC,YAAYnrC,UAAQorC,eAAeC,aACnDx2C,KAAKwK,oBAAoB6rC,IAclC9vC,EAAQrG,UAAUsK,oBAAsB,SAAS6rC,EAC/CI,EAAStsC,GAAY,IAAA6H,EAAAhS,KACf02C,KAWN,OATAL,EAAiB51C,QAAQu7B,UAAUj1B,QAAQ,SAAC2yB,GACrC1nB,EAAK2kC,oBAAoBjd,IAC5Bgd,EAAc7vC,KAAK6yB,KAGnBgd,EAAc71C,OAAS,IAAMsJ,GAC/BnK,KAAK42C,qBAAqBF,GAGI,IAAzBA,EAAc71C,QASvB0F,EAAQrG,UAAU22C,uBAAyB,SAASC,GAClD,IAAMC,KACNA,EAAgB5rC,UAAQorC,eAAeC,aAAeM,EAAO3uC,IAAI,SAAAgG,GAAA,OAAQA,EAAK5G,OAAM6M,KAAK,KACzFpU,KAAK+J,kBAAkBK,YAAY2sC,GAC/B/2C,KAAK61C,WAAW7c,IAAI,iBACiBh5B,KAAK61C,WAAW5c,IAAI,gBAAiB+d,YAAYF,IAY5FvwC,EAAQrG,UAAUy2C,oBAAsB,SAASjd,GAAO,IAAAgE,EAAA19B,KAClDi3C,GAAe,EACbC,EAAUxd,EAAM2Y,GAWtB,OAVAryC,KAAKg2C,KAAKzrC,SAASwyB,KAAK,SAACoa,GACvB,GAAID,IAAYC,EAAU9E,GACxB,OAAO4E,GAAe,GAEvBj3C,MACHA,KAAKk2C,6BAA6BnZ,KAAK,SAACqa,GACtC,GAAIF,IAAYE,EAAI/E,GAClB,OAAO4E,GAAe,GAEvBj3C,OACCi3C,IAMJj3C,KAAKk2C,6BAA6BrvC,KAAK6yB,GACvC15B,KAAKi2C,oCAAsC,EAGS,OAAhDj2C,KAAKm2C,wCACPn2C,KAAK41C,UAAU7pC,OAAO/L,KAAKm2C,wCAM7Bn2C,KAAKm2C,uCAAyCn2C,KAAK41C,UAAU,WAE3DlY,EAAKuY,oCAAsCvY,EAAKwY,6BAA6Br1C,OAE7E68B,EAAKwY,6BAA6BnvC,QAAQ,SAASqwC,GACjDp3C,KAAKg2C,KAAKzrC,SAAS8sC,QAAQD,IAD7B1Z,GAIAA,EAAKmZ,uBAAuBnZ,EAAKsY,KAAKzrC,UAKtCmzB,EAAKwY,6BAA6Br1C,OAAS,EAC3C68B,EAAKyY,uCAAyC,QAGzC,IAWT5vC,EAAQrG,UAAUo3C,eAAiB,SAAS7D,EAAWgD,GAAS,IAAAc,EAAAv3C,KAC9DA,KAAK4J,WAAW+yB,kBAAkBzqB,KAAK,SAACunB,GACtC,IAAMC,EAAQpnB,UAAeunB,gBAAgBJ,EAAQga,GACjD/Z,GACF6d,EAAK/sC,qBAAqBkvB,GAAQ+c,GAAS,MAejDlwC,EAAQrG,UAAUs3C,oBAAsB,SAASzoC,EAAW0nC,EAAStsC,GAAY,IAAAstC,EAAAz3C,KAC/EA,KAAK4J,WAAW+yB,kBAAkBzqB,KAAK,SAACunB,GACtC,IAAMC,EAAQpnB,UAAeknB,yBAAyBC,EAAQ1qB,GAC9D,GAAI2qB,EAAO,CACT,IAAMge,EAAaD,EAAKjtC,qBAAqBkvB,GAAQ+c,EAAStsC,GAC9DstC,EAAK7B,UAAU,WACb,IAAMxjC,EAAWqlC,EAAKE,oBAAoBje,EAAM2Y,IAChD,GAAKjgC,EAAL,CAIA,IAAIwlC,SACJxlC,EAASR,mBAAmB,SAACQ,GAC3B,GAAIA,EAASjE,KAAK5G,OAASwH,EAEzB,OADA6oC,EAAmBxlC,EACZ4B,UAAwBmtB,gBAAgBC,OAK/CsW,GACFtlC,EAAS4tB,SAAS,OAIhB4X,GACFA,EAAiB5X,SAAS,WAlB1B3E,QAAQwc,KAAK,4DAgCvBtxC,EAAQrG,UAAU43C,YAAc,SAASpe,GACvC,IAAMnvB,EAAWvK,KAAKg2C,KAAKzrC,SACvB4B,EAAQ,EAAG4nC,GAAQ,EACvBxpC,EAASwyB,KAAK,SAAC/B,GACb,GAAIA,EAAMzzB,OAASmyB,EAAMnyB,KACvB,OAAOwsC,GAAQ,EAEjB5nC,MAEE4nC,IACFxpC,EAAS00B,OAAO9yB,EAAO,GACvBnM,KAAK62C,uBAAuBtsC,KAShChE,EAAQrG,UAAU6K,UAAY,WAC5B,KAAO/K,KAAKg2C,KAAKzrC,SAAS1J,QACxBb,KAAK83C,YAAY93C,KAAKg2C,KAAKzrC,SAAS,KAcxChE,EAAQrG,UAAU63C,gBAAkB,SAASre,EAAO+b,GAClD,IAAM7zB,EAA2CovB,EAAMgH,UAAWte,GAElE,OADA15B,KAAKi4C,iBAAiBr2B,EAAO6zB,GACtB7zB,GAYTrb,EAAQrG,UAAU+3C,iBAAmB,SAAS9pC,EAAMsnC,GAC7CtnC,EAAK5D,UAGV4D,EAAK5D,SAASxD,QAAQ,SAASmxC,GACzBA,EAAU3tC,SACZvK,KAAKi4C,iBAAiBC,EAAWzC,GACxByC,EAAUvd,WACnBud,EAAUvd,SAASwd,UAAY3+B,EAAQiJ,SAASgzB,EAAOyC,EAAU3wC,QAElEvH,OAWLuG,EAAQrG,UAAU02C,qBAAuB,SAASE,GAChD,IAAMrB,KACAjd,EAAiBx4B,KAAK81C,gBAC5BgB,EAAO/vC,QAAQ,SAAC2yB,GACd+b,EAAM5uC,KAAK6yB,EAAMnyB,QAEnB,IAAM6wC,EAAO3C,EAAM50C,OAAS,EAC1B23B,EAAe8D,UAAU,4BACzB9D,EAAe8D,UAAU,8BAC3Bt8B,KAAK+1C,kBAAkBsC,QACrBD,IAAQ3C,EAAMrhC,KAAK,MAAnB,IAA4BgkC,EAC5B/kC,KAAMilC,UAAmB9T,KAAK+T,eAWlChyC,EAAQrG,UAAUy3C,oBAAsB,SAAStF,GAC/C,IAAImG,EAAwB,KAS5B,OARIx4C,KAAK2R,UAAY3R,KAAK2R,SAASC,oBACjC5R,KAAK2R,SAASC,mBAAmB,SAACQ,GAChC,GAAIA,EAASjE,KAAKkkC,KAAOA,EAEvB,OADAmG,EAAwBpmC,EACjB4B,UAAwBmtB,gBAAgBC,OAI9CoX,GAUTjyC,EAAQrG,UAAUu4C,aAAe,SAASrmC,GACxC,GAAIA,EAASyB,OAAO1F,KAAK2F,MAAO,CAC9B,IAAMN,EAAoDpB,EAASjE,KAEnE,OADA9F,UAAY0I,OAAOyC,EAAYO,WACxB/T,KAAK6Q,YAAY2C,EAAYO,WAGpC,IADA,IAAI2kC,EAAsBtmC,GAClBsmC,EAAoB7kC,OAAO6qB,QACjCga,EAAsBA,EAAoB7kC,OAE5C,IAAM8kC,EAA8CD,EAAoBvqC,KAExE,OADA9F,UAAY0I,OAAO4nC,EAAS5kC,WACrB/T,KAAK6Q,YAAY8nC,EAAS5kC,YAcrCxN,EAAQrG,UAAUk2C,yBAA2B,SAAS3c,GAAQ,IAAAmf,EAAA54C,KACtD64C,KAGN74C,KAAK2R,SAASpH,SAASpC,IAAI,SAACiK,GAC1B,IAAM7K,EAAO6K,EAASjE,KAAK5G,KAC3BsxC,EAA0BtxC,GAAQqxC,EAAKE,6BAA6B1mC,KAItE,IAAM2mC,KAEN/4C,KAAKg2C,KAAKzrC,SAASpC,IAAI,SAACgG,GACtB,IAAM5G,EAAO4G,EAAK5G,KAGZyxC,EAAgB1mC,UAAeunB,gBAAgBJ,EAAQlyB,GAC7D,GAAIyxC,EAAe,CAEjB,IAAMC,EAAYJ,EAA0BtxC,GACxC0xC,GACFL,EAAKM,8BAA8BF,EAAeC,GAEpDF,EAAelyC,KAAKmyC,MAKxBh5C,KAAKsK,oBAAoByuC,GAGzB/4C,KAAK41C,UAAU,WACbgD,EAAK/B,uBAAuB+B,EAAK5C,KAAKzrC,aAa1ChE,EAAQrG,UAAU44C,6BAA+B,SAAS1mC,GAAU,IAAA+mC,EAAAn5C,KAC5DuK,KAEN6H,EAAS7H,SAASpC,IAAI,SAAC6yB,GACrBzwB,EAASywB,EAAM7sB,KAAK5G,MAAQ4xC,EAAKL,6BAA6B9d,KAGhE,IAAImd,SAAWiB,SAAYC,SAC3B,GAAIjnC,EAAS7H,SAAS1J,OAAS,EAAG,CAChC,IAAMy4C,EAAczhC,gCAAgCzF,EAAS1L,KAEzD4yC,IACFF,EAAaE,EAAYC,SAAS,WAE/B,CAIHpB,EADgB,QADlBA,EAAY/lC,EAASS,aAGI,QAAdslC,QAGGr0C,EAEd,IAAM01C,EAAgB3hC,yBAAyBzF,EAAS1L,IAAlC,WAClB8yC,IACFH,EAAmBG,EAAcC,GAAG,aAIxC,OACElvC,WACA4tC,YACAiB,aACAC,qBAcJ9yC,EAAQrG,UAAUg5C,8BAAgC,SAAS/qC,EAAM8qC,GAAW,IAAAS,EAAA15C,KAC1E,IAAKi5C,EACH,OAAO9qC,EAILA,EAAK5D,UACP4D,EAAK5D,SAASpC,IAAI,SAAC6yB,GACjB0e,EAAKR,8BAA8Ble,EAAOie,EAAU1uC,SAASywB,EAAMzzB,SAKvE,IAAMozB,EAAWxsB,EAAKwsB,SAKtB,OAJAA,EAASwd,UAAYc,EAAUd,UAC/Bxd,EAASye,WAAaH,EAAUG,WAChCze,EAAS0e,iBAAmBJ,EAAUI,iBAE/BlrC,IAOT5H,EAAQW,OAASC,QAAQD,OAAO,kBAC9BoL,UAAepL,OAAOK,KACtByM,UAAwB9M,OAAOK,KAC/BoyC,UAAwBzyC,OAAOK,KAC/B0D,UAAwB/D,OAAOK,QAElBH,QAAQ,iBAAkBb,GACzC4E,UAAQjE,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG7BhB,oGCtlBf,QAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,wDAWA,IAAMC,EAAU,SAASqzC,EAAcC,GAAmB,IAAAvoC,EAAAtR,KAMxDA,KAAK85C,gBAKL95C,KAAK45C,aAAeA,EAMpB55C,KAAK+5C,cAAgBF,EAMrB75C,KAAKg6C,iBAELh6C,KAAKi6C,oBAAmB,GAMxB,IAAMC,EAAYN,EAAaO,eAAe/uB,OAAO,SAAAzkB,GAAA,MAAc,SAAPA,GAAyB,eAAPA,IAE9E,GAAyB,IAArBuzC,EAAUr5C,QACZ,GAAIb,KAAKg6C,iBAAkB,KAAAI,EAAA,SACdzzC,GACT0B,UAAY0I,OAAOpK,GAEnB2K,EAAKyoC,cAAchd,KAAK,SAACsd,GACvB,GAAI1zC,EAAI2zC,MAAMD,GAAY,CACxB,IAAMnvC,EAAQuN,OAAO8hC,aAAa5zC,GAMlC,OAJE2K,EAAKwoC,aAAanzC,QADN7C,IAAVoH,GAAiC,OAAVA,EACAA,EAEA,IAEpB,MAXb,IAAK,IAAMvE,KAAO8R,OAAO8hC,aAAcH,EAA5BzzC,SAiBbuzC,EAAUnzC,QAAQ,SAACJ,GACjB2K,EAAKyoC,cAAchd,KAAK,SAACsd,GACvB,GAAI1zC,EAAI2zC,MAAMD,GAAY,CACxB,IAAMnvC,EAAQoG,EAAKsoC,aAAaY,SAAS7zC,GACzC,QAAc7C,IAAVoH,EAEF,OADAoG,EAAKwoC,aAAanzC,GAAOuE,GAClB,sGAanB3E,EAAQrG,UAAU+5C,mBAAqB,SAAS/uC,GAI9C,GAHAlL,KAAKg6C,iBAAmB9uC,EAGpBlL,KAAKg6C,iBACP,IACM,iBAAkBvhC,QACpBA,OAAO8hC,aAAP,KAA8B,UACvB9hC,OAAO8hC,aAAP,MAEPv6C,KAAKg6C,kBAAmB,EAE1B,MAAOpS,GACPvM,QAAQC,MAAMsM,GACd5nC,KAAKg6C,kBAAmB,EAG5B,OAAOh6C,KAAKg6C,kBAQdzzC,EAAQrG,UAAUu6C,gBAAkB,SAAS9zC,GAC3C,OAAO3G,KAAK85C,aAAanzC,IAS3BJ,EAAQrG,UAAUw6C,sBAAwB,SAAS/zC,GACjD,IAAMuE,EAAQlL,KAAK85C,aAAanzC,GAChC,QAAc7C,IAAVoH,EAGJ,OAAOA,GAST3E,EAAQrG,UAAUy6C,sBAAwB,SAASh0C,GACjD,IAAMuE,EAAQlL,KAAK85C,aAAanzC,GAChC,QAAc7C,IAAVoH,EAGJ,OAAOsW,WAAWtW,IASpB3E,EAAQrG,UAAU06C,uBAAyB,SAASj0C,GAClD,IAAMuE,EAAQlL,KAAK85C,aAAanzC,GAChC,QAAc7C,IAAVoH,EAGJ,MAAiB,SAAVA,GAQT3E,EAAQrG,UAAUkK,YAAc,SAAS+vB,GAEvC,GADAn6B,KAAK45C,aAAa5H,aAAa7X,GAC3Bn6B,KAAKg6C,iBACP,IAAK,IAAMrzC,KAAOwzB,EAAQ,CACxB9xB,UAAY0I,OAAOpK,GACnB,IAAMuE,EAAQivB,EAAOxzB,GACrB0B,UAAY0I,YAAiBjN,IAAVoH,GACnBuN,OAAO8hC,aAAa5zC,GAAOuE,IAUjC3E,EAAQrG,UAAUo2C,YAAc,SAAS3vC,GACvC3G,KAAK45C,aAAatD,YAAY3vC,GAC1B3G,KAAKg6C,yBACAvhC,OAAO8hC,aAAa5zC,KAQ/BJ,EAAQW,OAASC,QAAQD,OAAO,oBAC9B6f,UAAyB7f,OAAOK,QAEnBH,QAAQ,mBAAoBb,GAC3CA,EAAQW,OAAOgE,MAAM,qBAAsB,IAAI2vC,OAAO,QACtDxzC,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,oFCvMf,IAAA+oB,EAAAhpB,EAAA,GAaA,MAAAu7B,EAAA,aAQAA,EAAA3hC,UAAA0yC,KAAA,SAAAlrB,GACA,GAAA4H,EAAA,QAAAwS,WAAApa,GACA,OAAA1nB,KAAA86C,iBAAqD,GAClD,GAAAxrB,EAAA,QAAA0S,OAAAta,GACH,OAAA1nB,KAAA+6C,aAA6C,GAC1C,oBAAArzB,EAAA,CACH,MAAAwa,EAAA5S,EAAA,QAAAQ,MAAApI,GACA,OAAA1nB,KAAA86C,iBAAA5Y,GAEA,aAUAL,EAAA3hC,UAAA46C,iBAAA,SAAA5Y,KAQAL,EAAA3hC,UAAA66C,aAAA,SAAA5sC,KACA9H,EAAA,4JCjDA20C,EAAA10C,EAAA,GAuBA,MAAA2hC,EAAA,SAAA56B,GACA,MAAAC,EACAD,MAEA4tC,EAAA,EAAA16C,KAAAP,KAAAsN,GAEAtN,KAAA2P,2BAAAsrC,EAAA,EAAAtO,OACA,cACAqO,EAAA,QAAA5rC,gBAAA6rC,EAAA,EAAA/6C,UAAA4sC,sBAKA9sC,KAAA0sC,eAAAp/B,EAAAo/B,eACAp/B,EAAAo/B,eAAAzE,EAAAiT,iBAIAv6C,OAAAkN,EAAA,SAAAlN,CAAAsnC,EAAAgT,EAAA,GAQAhT,EAAAiT,gBAAAD,EAAA,EAAAtO,MACA,oDASA1E,EAAA/nC,UAAAi7C,qBAAA,SAAAhtC,EAAAC,GACA,MAAAihB,EAAA2rB,EAAA,QAAAzrB,kBAAAphB,GAAA,GAAAa,QAAA,iBAEAosC,EADiDhtC,EAAA,GACjD,QACA,IAAAitC,EAAA,MACA,GAAAD,EAAA,CACA,MAAAE,EAAA36C,OAAA46C,EAAA,IAAA56C,CAAAy6C,GACAE,IACAD,EAAAC,EAAAE,sBAGA,MAAAC,EAAApsB,EAAAiB,OAAA9a,MAAA,OACA,IAAAwP,EAAAC,EAAAy2B,EACA,MAAAj9B,KACA,QAAAjQ,EAAA,EAAAC,EAAAgtC,EAAA56C,OAA2C2N,EAAAC,EAAQD,IAAA,CACnD,MAAAmtC,EAAAF,EAAAjtC,GAAAgH,MAAA,MACAwP,EAAAxD,WAAAm6B,EAAA,IACA12B,EAAAzD,WAAAm6B,EAAA,IACAD,EAAA,IAAAC,EAAA96C,OAAA2gB,WAAAm6B,EAAA,MACA,OAAAN,EAAAO,OAAA,KACAn9B,EAAA5X,KAAAme,EAAAC,EAAAy2B,GAEAj9B,EAAA5X,KAAAoe,EAAAD,EAAA02B,GAGA,OAAAj9B,GAUAwpB,EAAA/nC,UAAA27C,SAAA,SAAA1tC,EAAAC,GAEA,MAAAqQ,EAAAu8B,EAAA,QAAAvrC,iBAAA,MACAzP,KAAA87C,aAAA3tC,EAAAC,EAAApO,MACA,OAAAW,OAAAo7C,EAAA,eAAAp7C,CAAA8d,EAAA,MACAA,EAAA,MAAAA,EAAA,MACAA,EAAA,QASAwpB,EAAA/nC,UAAA87C,uBAAA,SAAA7tC,EAAAC,GAEA,MAAA6tC,EAAAjB,EAAA,QAAAvrC,qBAAA3L,EACA9D,KAAA6wC,aAAA1iC,EAAAC,EAAApO,MACA,GAAAi8C,EAAA,CAEA7tC,IAAAvN,OAAA,GACAgG,KAAAo1C,KAUAhU,EAAA/nC,UAAAg8C,uBAAA,SAAA/tC,EAAAC,GAEA,MAAA6tC,EAAAjB,EAAA,QAAAvrC,qBAAA3L,EACA9D,KAAA6wC,aAAA1iC,EAAAC,EAAApO,MACA,GAAAi8C,EAAA,CAEA7tC,IAAAvN,OAAA,GACA,GAAAo7C,IAUAhU,EAAA/nC,UAAA6vC,oCACAO,8BACA3jB,YAAAquB,EAAA,QAAAnO,aACA5E,EAAA/nC,UAAAi7C,wBAUAlT,EAAA/nC,UAAAkwC,4BACAE,8BACA6L,gBAAAlU,EAAA/nC,UAAA87C,uBACAI,gBAAAnU,EAAA/nC,UAAAg8C,yBAUAjU,EAAA/nC,UAAA47C,cACAxL,8BACA3jB,YAAAquB,EAAA,QAAA5rC,gBACA64B,EAAA/nC,UAAAi7C,wBAUAlT,EAAA/nC,UAAA6tC,mBACAuC,8BACA31B,MAAAqgC,EAAA,QAAAnO,aAAAoO,EAAA,EAAA/6C,UAAAquC,WACAvzB,WAAAggC,EAAA,QAAAnO,aACAoO,EAAA,EAAA/6C,UAAAyuC,gBACAn0B,WAAAwgC,EAAA,QAAAnO,aACAoO,EAAA,EAAA/6C,UAAAyvC,gBACA50B,gBAAAigC,EAAA,QAAAnO,aACAoO,EAAA,EAAA/6C,UAAA4uC,qBACAvmB,WAAAyyB,EAAA,QAAAnO,aACAoO,EAAA,EAAA/6C,UAAA8vC,gBACAn1B,QAAAmgC,EAAA,QAAAnO,aAAAoO,EAAA,EAAA/6C,UAAAgwC,aACAj1B,aAAA+/B,EAAA,QAAAnO,aACAoO,EAAA,EAAA/6C,UAAA+uC,kBACAoN,IAAArB,EAAA,QAAAnO,aAAA5E,EAAA/nC,UAAA27C,YAaA5T,EAAA/nC,UAAAo8C,uBAAA,SAAApxC,EAAAkD,EAAAmuC,GACA,MAAAzwC,EAAAsC,IAAAvN,OAAA,GACA27C,EAAA1wC,EAAA,aACA2wC,EAAA3wC,EAAA,QACA4wC,EAAA5wC,EAAA,WACA,IAAAwhC,EAaA,OAZA9sC,MAAAgd,QAAAtS,GAUAoiC,EAAA,WARA,kBADAA,EAA2C,EAAA7mB,aAC3C,IAAA+1B,EACAlP,EAAA,eACK,YAAAA,IAAA,IAAAmP,EACLnP,EAAA,UACK,oBAAAA,IAAA,IAAAoP,IACLpP,EAAA,cAKA0N,EAAA,QAAA2B,gBAAA,6BACArP,IASArF,EAAA/nC,UAAA08C,oBAAA,SAAAzuC,EAAA3B,EAAA4B,GACA,MAAA6/B,EAAAzhC,EAAAqwC,QACA5O,GACA9/B,EAAAE,aAAA,MAAA4/B,GAEA,MAAAniC,EAAoCsC,IAAAvN,OAAA,GACpCkS,EAAAjH,EAAA,UACAxK,EAAAkL,EAAA4Z,kBACAta,EAAAgxC,cACAhxC,EAAAgxC,eACAhxC,EAAAgxC,YAAA/pC,OAEA,MAAAiH,EAAAxN,EAAAgP,gBACAjK,KACA8qB,KACA,UAAA11B,KAAAqT,EAAA,CACA,MAAA9O,EAAA8O,EAAArT,GACA,OAAAuE,IACAqG,EAAA1K,KAAAF,GACA01B,EAAAx1B,KAAAqE,GACAvE,GAAArF,GAAA4J,aAAA6xC,EAAA,QACAp2C,KAAAmF,EAAAgxC,YAAA/pC,KACAjH,EAAAgxC,YAAA/pC,GAAApM,GAAAq0C,EAAA,QAAAgC,kBACAh9C,KAAAi9C,qBAAAj9C,OAGA2G,KAAAmF,EAAAgxC,YAAA/pC,KACAjH,EAAAgxC,YAAA/pC,GAAApM,GAAAq0C,EAAA,QAAAgC,kBACAE,EAAA,EAAAzsB,uBAKA,MAAAzf,EAAArQ,OAAAw8C,EAAA,OAAAx8C,IAAwBmL,GACxBkF,EAAA7C,OACA6sC,EAAA,QAAAoC,oBACA,EAAAtxC,EAAAgxC,YACA9B,EAAA,QAAAqC,2BAAAv5C,EAAAiP,GACAspB,EACAjuB,EAAAmD,IASA02B,EAAA/nC,UAAA+8C,qBAAA,SAAA9uC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAqDsC,IAAAvN,OAAA,GACrDmQ,EAAArQ,OAAAw8C,EAAA,OAAAx8C,IAAwBmL,GAExB,IAAAZ,EADA8F,EAAA7C,OAIAjD,EAFA1K,MAAAgd,QAAA5b,GACAkK,EAAAwxC,eACA38C,OAAA46C,EAAA,gBAAA56C,CACAiB,EAAAkK,EAAAyxC,kBAAAzxC,EAAAwxC,gBAEA17C,EAGAjB,OAAAghC,EAAA,qBAAAhhC,CAA6D,KAAAmL,GAE7DkvC,EAAA,QAAAoC,oBACA,EAAAnV,EAAAuV,sBACAx9C,KAAAs8C,wBAAApxC,GACAkD,OAAAtK,EAAA9D,OAUAioC,EAAA/nC,UAAAu9C,wBAAA,SAAAtvC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QAIA,GAHA,sBAAAsN,EAAAm/B,UAAA7rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,eAAA0M,EAAAm/B,UACA,sBAAAn/B,EAAAm/B,SAAA,CACA,MAAA3gB,EAAA3sB,KAAA09C,uBAAAvvC,EAAA++B,cACA/+B,EAAAwiB,YAAAhE,GACA3sB,KAAA29C,kBAAAhxB,EAAA/qB,EAAAwM,QACG,aAAAD,EAAAm/B,SAAA,CACH,MAAApiB,EAAA8vB,EAAA,QAAA2B,gBAAAxuC,EAAA++B,aAAA,YACA/+B,EAAAwiB,YAAAzF,GACAlrB,KAAA49C,oBAAA1yB,EACAtpB,EAAAwM,KAUA65B,EAAA/nC,UAAAw9C,uBAAA,SAAAxQ,GACA,MAAAvgB,EAAAquB,EAAA,QAAA2B,gBAAAzP,EAAA,eAKA,OAJAvgB,EAAAte,aAAA,eACAse,EAAAte,aAAA,UACAse,EAAAte,aAAA,UAEAse,GAUAsb,EAAA/nC,UAAAy9C,kBAAA,SAAAxvC,EAAAjD,EAAAkD,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QAEAqhB,EAAAjiB,EAAA2hB,iBACApI,EAAA0I,EAAAtsB,OACA6hB,EAAA,IAAAliB,MAAAikB,GACA,IAAAnF,EACA,QAAA9Q,EAAA,EAAiBA,EAAAiW,IAASjW,EAC1B8Q,EAAA6N,EAAA3e,GACAkU,EAAAlU,GAAAxO,KAAA89C,WAAAx+B,EAAA7d,EAAAo8C,GAEAX,EAAA,EAAAzsB,oBAAAtiB,EAAAuU,EAAAtO,KAAA,OAUA6zB,EAAA/nC,UAAA09C,oBAAA,SAAAzvC,EAAA4vC,EAAA3vC,GACA,MAAA4sB,EAAAggB,EAAA,QAAA2B,gBAAAxuC,EAAA++B,aACA,qBACA/+B,EAAAwiB,YAAAqK,GACAh7B,KAAAy9C,wBAAAziB,EAAA+iB,EAAA3vC,IAUA65B,EAAA/nC,UAAA89C,uBAAA,SAAA7vC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QAIA,GAHA,iBAAAqC,EAAAm/B,UAAA7rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,YAAA0M,EAAAm/B,UAAA,iBAAAn/B,EAAAm/B,SAAA,CACA,MAAA1tB,EAAAhe,EAAAq8C,iBACAjD,EAAA,QAAAoC,qBACOjvC,OAAA0vC,OAAAp8C,WACPwmC,EAAAiW,kBACAl+C,KAAAm+C,mBACAv+B,EAAAxR,OAAAtK,EAAA9D,WACG,eAAAmO,EAAAm/B,SAAA,CACH,MAAA8Q,EAAApD,EAAA,QAAA2B,gBAAAxuC,EAAA++B,aAAA,WACA/+B,EAAAwiB,YAAAytB,GACAp+C,KAAAq+C,qBACAD,EAAAx8C,EAAAwM,KAYA65B,EAAA/nC,UAAAi+C,mBAAA,SAAAjzC,EAAAkD,EAAAmuC,GACA,MAAAzwC,EAAAsC,IAAAvN,OAAA,GACAy9C,EAAAxyC,EAAAqC,KACAowC,EAAAzyC,EAAA,gBAIA,YAHAhI,IAAAy6C,IACAzyC,EAAA,oBAEAkvC,EAAA,QAAA2B,gBAAA2B,EAAApR,kBACAppC,IAAAy6C,EAAA,sCAUAtW,EAAA/nC,UAAAm+C,qBAAA,SAAAlwC,EAAA0R,EAAAzR,GACA,MAAA4sB,EAAAggB,EAAA,QAAA2B,gBAAAxuC,EAAA++B,aAAA,gBACA/+B,EAAAwiB,YAAAqK,GACAh7B,KAAAg+C,uBAAAhjB,EAAAnb,EAAAzR,IAUA65B,EAAA/nC,UAAAs+C,WAAA,SAAArwC,EAAA2hC,EAAA1hC,GACA,MAAAqwC,EAAAzD,EAAA,QAAA2B,gBAAAxuC,EAAA++B,aAAA,cACA/+B,EAAAwiB,YAAA8tB,GACAz+C,KAAA0+C,iBAAAD,EAAA3O,EAAA1hC,IAWA65B,EAAA/nC,UAAA49C,WAAA,SAAAx+B,EAAA9d,EAAAm9C,GACA,IAAAtD,EAAA,MACA75C,IACA65C,EAAA16C,OAAA46C,EAAA,IAAA56C,CAAAa,GAAAg6C,sBAEA,IAAAG,EAAA,OAAAN,EAAAO,OAAA,KACAt8B,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACA,GAAAq/B,EAAA,CAGAhD,GAAA,KADAr8B,EAAA,OAIA,OAAAq8B,GAUA1T,EAAA/nC,UAAA0+C,6BAAA,SAAAzwC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QACA+yC,EAAA/yC,EAAA,MACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAyrB,EAAAtrB,EAAAiyB,iBACAmnB,EAAA,QAAAoC,qBAAgCjvC,OAAA0vC,OAAAp8C,UAAAo9C,SAChC5W,EAAA6W,qCACA9+C,KAAA++C,mCAAA7xB,EACA9e,OAAAtK,EAAA9D,OAUAioC,EAAA/nC,UAAA8+C,YAAA,SAAA7wC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAkrB,EAAA3sB,KAAA09C,uBAAAvvC,EAAA++B,cACA/+B,EAAAwiB,YAAAhE,GACA,MAAArN,EAAA1d,EAAAirB,iBACAoyB,EAAAj/C,KAAA89C,WAAAx+B,EAAA7d,EAAAo8C,GACAX,EAAA,EAAAzsB,oBAAA9D,EAAAsyB,IAUAhX,EAAA/nC,UAAAg/C,iBAAA,SAAA/wC,EAAAvM,EACAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAA0rB,EAAAvrB,EAAA0zB,YACA0lB,EAAA,QAAAoC,qBAAgCjvC,OAAA0vC,OAAAp8C,WAChCwmC,EAAAkX,yBACAnE,EAAA,QAAAqC,sBAAA,eAAAlwB,EACA/e,OAAAtK,EAAA9D,OAUAioC,EAAA/nC,UAAAk/C,kBAAA,SAAAjxC,EAAAmR,EAAAlR,GACA,MAAA4sB,EAAAggB,EAAA,QAAA2B,gBAAAxuC,EAAA++B,aAAA,SACA/+B,EAAAwiB,YAAAqK,GACAh7B,KAAAg/C,YAAAhkB,EAAA1b,EAAAlR,IAUA65B,EAAA/nC,UAAAm/C,8BAAA,SAAAlxC,EAAA4vC,EAAA3vC,GACA,MAAA4sB,EAAAh7B,KAAAs8C,uBAAAyB,EAAA3vC,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAAy9C,wBAAAziB,EAAA+iB,EAAA3vC,KAWA65B,EAAA/nC,UAAAw+C,iBAAA,SAAAvwC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAkrB,EAAA3sB,KAAA09C,uBAAAvvC,EAAA++B,cACA/+B,EAAAwiB,YAAAhE,GACA3sB,KAAA29C,kBAAAhxB,EAAA/qB,EAAAwM,IAUA65B,EAAA/nC,UAAAo/C,4BAAA,SAAAnxC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QACA2wC,EAAA3wC,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAwe,EAAAre,EAAAo2B,cACAgjB,EAAA,QAAAoC,qBAAgCjvC,OAAA0vC,OAAAp8C,UAAAg7C,WAChCxU,EAAAsX,oCACAv/C,KAAA++C,mCAAA9+B,EACA7R,OAAAtK,EAAA9D,OAUAioC,EAAA/nC,UAAAs/C,6BAAA,SAAArxC,EAAA0R,EAAAzR,GACA,MAAA4sB,EAAAh7B,KAAAs8C,uBACAz8B,EAAAzR,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAAg+C,uBAAAhjB,EAAAnb,EAAAzR,KAWA65B,EAAA/nC,UAAAu/C,cAAA,SAAAtxC,EAAA5M,EAAA6M,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MACA46B,GAAA96B,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACAy5C,EAAA,QAAAoC,qBACMjvC,QAAW85B,EAAAyX,sBACjB1E,EAAA,QAAA2E,6BACAtjB,EACAjuB,GANA,6BAMApO,OASAioC,EAAAuV,uBACAlN,8BACAsP,MAAA5E,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAu9C,yBACAoC,WAAA7E,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAA0+C,8BACAjkC,MAAAqgC,EAAA,QAAAgC,kBAAA/U,EAAA/nC,UAAA8+C,aACAhkC,WAAAggC,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAg/C,kBACA1kC,WAAAwgC,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAu9C,yBACA1iC,gBAAAigC,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAA0+C,8BACAr2B,WAAAyyB,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAw+C,kBACA7jC,QAAAmgC,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAA89C,wBACA/iC,aAAA+/B,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAo/C,6BACAQ,QAAA9E,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAA89C,wBACA+B,aAAA/E,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAo/C,6BACAU,SAAAhF,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAu/C,iBASAxX,EAAAiW,mBACA5N,8BACA8L,gBAAApB,EAAA,QAAAgC,kBAAA/U,EAAA/nC,UAAAs+C,YACArC,gBAAAnB,EAAA,QAAAgC,kBAAA/U,EAAA/nC,UAAAs+C,cASAvW,EAAAkX,0BACA7O,8BACAC,YAAAyK,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAk/C,qBASAnX,EAAA6W,sCACAxO,8BACAG,iBAAAuK,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAm/C,+BACAY,YAAAjF,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAm/C,iCAaApX,EAAA/nC,UAAA6+C,mCAAA,SAAA7zC,EAAAkD,EAAAmuC,GACA,MAAA+B,EAAAlwC,IAAAvN,OAAA,GAAAsN,KACA,OAAA6sC,EAAA,QAAA2B,gBAAA,6BACA1U,EAAAiY,kCAAA5B,EAAAhR,YAQArF,EAAAiY,mCACAnlC,gBAAA,mBACA8kC,WAAA,cACA5kC,aAAA,gBACA8kC,aAAA,iBASA9X,EAAAsX,qCACAjP,8BACA6P,cAAAnF,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAs/C,8BACA7O,cAAAqK,EAAA,QAAAgC,kBACA/U,EAAA/nC,UAAAs/C,gCASAvX,EAAAyX,uBACApP,8BACA8P,YAAApF,EAAA,QAAAgC,kBAAAE,EAAA,EAAAzsB,qBACA4vB,YAAArF,EAAA,QAAAgC,kBAAAE,EAAA,EAAAzsB,uBAGApqB,EAAA,6FCtwBAC,EAAA,KACAA,EAAA,KACA,QAAAA,EAAA,QAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yDAZA,IAAMC,KAgBNA,EAAQW,OAASC,QAAQD,OAAO,UAC9BiE,UAAQjE,OAAOK,KACf+4C,UAAgB/4C,OAGlBhB,EAAQg6C,SAAS,eAAgB,QACjCh6C,EAAQg6C,SAAS,sBAAuB,yCAOxCh6C,EAAQi6C,eAAiB,WAMvBxgD,KAAKmI,IAAM,IAAII,WACboF,QACE,IAAI4uB,WACF7U,OAAQ,IAAI+4B,aAGhBzrC,KAAM,IAAI0rC,WACRC,QAAS,EAAG,GACZC,KAAM,OAMZr6C,EAAQW,OAAO4P,WAAW,iBAAkBvQ,EAAQi6C,0BAGrCj6C,wGCnDf,QAAAD,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,wDAPA,IAAMC,GAgBNA,QAAkB,SAAS3E,GACzB,IAAIi/C,SAaJ,OAZIj/C,aAAoB2d,WACtBshC,EAAY,IAAInhC,eACNuV,YAAYrzB,GACbA,aAAoBgd,WAC7BiiC,EAAY,IAAIzhC,eACNgT,iBAAiBxwB,GAClBA,aAAoBke,WAC7B+gC,EAAY,IAAIxgC,eACN2V,cAAcp0B,GAExBi/C,EAAYj/C,EAEPi/C,GAOTt6C,SAAmB,WACjB,OAAiD,GAA1Cu6C,UAAUC,UAAUt/B,QAAQ,YAA6D,GAA1Cq/B,UAAUC,UAAUt/B,QAAQ,WASpFlb,iBAA2B,SAASy6C,GAClC,OAAqB,GAAdA,EAAIngD,OAAJ,IAAsBmgD,EAAQA,GAQvCz6C,cAAwB,SAAS06C,GAC/B,IAAMC,EAAID,EAAI,GACRE,EAAIF,EAAI,GACRv8B,EAAIu8B,EAAI,GACd,GAAIC,IAAU,IAAJA,IAAYC,IAAU,IAAJA,IAAYz8B,IAAU,IAAJA,GAC5C,MAAM08B,WAAWF,EAAX,IAAgBC,EAAhB,IAAqBz8B,EAArB,+BAKR,UAHane,EAAQ86C,iBAAiBH,EAAE56B,SAAS,KACpC/f,EAAQ86C,iBAAiBF,EAAE76B,SAAS,KACpC/f,EAAQ86C,iBAAiB38B,EAAE4B,SAAS,MASnD/f,kBAA4B,SAAS+tC,GACnC,IAAMgN,KACN,GAAIhN,EAAa,CACf,IAAMiN,EAAQjN,EAAY91B,UAAU,GAAGhJ,MAAM,KAD9B0xB,GAAA,EAAAC,GAAA,EAAAC,OAAAtjC,EAAA,IAEf,QAAAujC,EAAAC,EAAmBia,EAAnBha,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA0B,KAAfsa,EAAena,EAAAn8B,MAClBu2C,EAAgBD,EAAK//B,QAAQ,KACnC,GAAIggC,GAAiB,EAAG,CACtB,IAAMl6C,EAAOi6C,EAAKhjC,UAAU,EAAGijC,GACzBv2C,EAAQs2C,EAAKhjC,UAAUijC,EAAgB,GAC7CH,EAAU1+B,mBAAmBrb,IAASqb,mBAAmB1X,QAEzDo2C,EAAUE,GAAQ,IATP,MAAA5Z,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,IAajB,OAAOka,GAQT/6C,kBAA4B,SAAS+6C,GACnC,IAAMI,KACN,IAAK,IAAM/6C,KAAO26C,EAAW,CAC3B,IAAMp2C,EAAQo2C,EAAU36C,GACxB+6C,EAAU76C,KAAQsW,mBAAmBxW,GAArC,IAA6CwW,mBAAmBjS,IAElE,OAAOw2C,EAAUttC,KAAK,MASxB7N,gBAA0B,SAASo7C,GACjC,OAAOC,UAAkBC,eAAeF,IAAUC,UAAkBE,YAAYH,eAInEp7C,+FC5Gbyb,MAAO,IAKP+/B,MAAO,IAKP1/B,UAAW,IAKXC,aAAc,IAKdf,QAAS,IAKTygC,KAAM,IAKNx/B,WAAY,IAKZP,QAAS,IAKTggC,OAAQ,IAKR1/B,aAAc,IAKdL,KAAM,IAKNC,OAAQ,uFCzDV,IAAM5b,EAAU,aAUhBA,EAAQrG,UAAUgiD,YAAc,SAAS9mB,KAWzC70B,EAAQrG,UAAUiiD,KAAO,SAAShoB,GACbn6B,KAAKoiD,kBAAkBjoB,GAC/BpzB,QAAQ/G,KAAKkiD,YAAaliD,OAUvCuG,EAAQrG,UAAUo7B,MAAQ,SAASF,GACjCp7B,KAAKmiD,KAAKniD,KAAKoiD,kBAAkBhnB,EAAS70B,EAAQi+B,KAAK6d,SASzD97C,EAAQrG,UAAUoiD,KAAO,SAASlnB,GAChCp7B,KAAKmiD,KAAKniD,KAAKoiD,kBAAkBhnB,EAAS70B,EAAQi+B,KAAK+T,eASzDhyC,EAAQrG,UAAUqiD,QAAU,SAASnnB,GACnCp7B,KAAKmiD,KAAKniD,KAAKoiD,kBAAkBhnB,EAAS70B,EAAQi+B,KAAKge,WASzDj8C,EAAQrG,UAAU23C,KAAO,SAASzc,GAChCp7B,KAAKmiD,KAAKniD,KAAKoiD,kBAAkBhnB,EAAS70B,EAAQi+B,KAAKie,WAezDl8C,EAAQrG,UAAUkiD,kBAAoB,SAASjoB,EAAQuoB,GACrD,IAAMC,KACFC,EAAY,KACVC,EAAct8C,EAAQi+B,KAAK+T,YAiCjC,MA/BsB,iBAAXpe,EACTwoB,EAAW97C,MACTuxC,IAAKje,EACL9mB,UAAmBvP,IAAb4+C,EAAyBA,EAAWG,IAEnCriD,MAAMgd,QAAQ2c,GACvBA,EAAOpzB,QAAQ,SAACqxC,GACQ,iBAAXje,EACTyoB,GACExK,IAAKA,EACL/kC,UAAmBvP,IAAb4+C,EAAyBA,EAAWG,IAG5CD,EAAYxK,OACKt0C,IAAb4+C,IACFE,EAAUvvC,KAAOqvC,IAGrBC,EAAW97C,KAAK+7C,IACf5iD,OAEH4iD,EAAYzoB,OACKr2B,IAAb4+C,IACFE,EAAUvvC,KAAOqvC,QAEI5+C,IAAnB8+C,EAAUvvC,OACZuvC,EAAUvvC,KAAOwvC,GAEnBF,EAAW97C,KAAK+7C,IAGXD,GAQTp8C,EAAQi+B,MAKN6d,MAAO,QAKP9J,YAAa,cAKbiK,QAAS,UAKTC,QAAS,qBAIIl8C,mCC1Jf,MAAAu8C,KAcAA,EAAAC,SAAA,SAAA50C,GACA,OAAAA,EAAA+/B,eARA,+BAQA,SAEA7nC,EAAA,iJCAA,MAAA28C,EAAA,SAAAzhD,EAAA0hD,EAAAC,EAAAC,EAAA70B,EAAA80B,GAEAC,EAAA,EAAA9iD,KAAAP,KAAAuB,EAAA0hD,EAAAC,EAAAI,EAAA,EAAAC,MAMAvjD,KAAAwjD,KAAAL,EAMAnjD,KAAAyjD,OAAA,IAAAC,MACA,OAAAp1B,IACAtuB,KAAAyjD,OAAAn1B,eAOAtuB,KAAA2jD,mBAAA,KAMA3jD,KAAAigC,MAAAqjB,EAAA,EAAAC,KAMAvjD,KAAA4jD,mBAAAR,GAIAziD,OAAAG,EAAA,SAAAH,CAAAqiD,EAAAK,EAAA,GAOAL,EAAA9iD,UAAAoc,SAAA,WACA,OAAAtc,KAAAyjD,QASAT,EAAA9iD,UAAA2jD,kBAAA,WACA7jD,KAAAigC,MAAAqjB,EAAA,EAAAjB,MACAriD,KAAA8jD,iBACA9jD,KAAAqyB,WASA2wB,EAAA9iD,UAAA6jD,iBAAA,gBACAjgD,IAAA9D,KAAAijD,aACAjjD,KAAAijD,WAAAtiD,OAAAqjD,EAAA,UAAArjD,CAAAX,KAAAuB,QAAAvB,KAAAyjD,OAAAQ,QAEAjkD,KAAAigC,MAAAqjB,EAAA,EAAAY,OACAlkD,KAAA8jD,iBACA9jD,KAAAqyB,WAWA2wB,EAAA9iD,UAAAikD,KAAA,WACAnkD,KAAAigC,OAAAqjB,EAAA,EAAAC,MAAAvjD,KAAAigC,OAAAqjB,EAAA,EAAAjB,QACAriD,KAAAigC,MAAAqjB,EAAA,EAAAc,QACApkD,KAAAqyB,UACAryB,KAAA2jD,oBACAU,EAAA,QAAAC,WAAAtkD,KAAAyjD,OAAA54C,EAAA,EAAAw3C,MACAriD,KAAA6jD,kBAAA7jD,MACAqkD,EAAA,QAAAC,WAAAtkD,KAAAyjD,OAAA54C,EAAA,EAAA05C,KACAvkD,KAAA+jD,iBAAA/jD,OAEAA,KAAA4jD,mBAAA5jD,UAAAwjD,QAQAR,EAAA9iD,UAAAskD,SAAA,SAAArjC,GACAnhB,KAAAyjD,OAAAtiC,GASA6hC,EAAA9iD,UAAA4jD,eAAA,WACA9jD,KAAA2jD,mBAAA58C,QAAAs9C,EAAA,QAAAp9C,eACAjH,KAAA2jD,mBAAA,MAEA,IAAAc,EAAA,iEC5GA,MAAAC,EAAA,SAAAr3C,GAEA,MAAAC,EAAAD,MAEAs3C,EAAA,QAAApkD,KAAAP,MACAouB,aAAA9gB,EAAA8gB,aACAT,WAAArgB,EAAAqgB,WACAi3B,YAAAt3C,EAAAs3C,cAOA5kD,KAAA6kD,kBACA/gD,IAAAwJ,EAAAghB,YAAAhhB,EAAAghB,YAAA,KAMAtuB,KAAA8kD,KAAAx3C,EAAA+G,IAMArU,KAAA4jD,wBAAA9/C,IAAAwJ,EAAA81C,kBACA91C,EAAA81C,kBAAAuB,EAAA,QAAAI,yBAMA/kD,KAAAglD,QAAA13C,EAAArM,WAMAjB,KAAAilD,MAAA,EACAjlD,KAAAklD,aAMAllD,KAAAmlD,YAAkE73C,EAAA,WAMlEtN,KAAAolD,YAAAthD,IAAAwJ,EAAA+3C,OAAA/3C,EAAA+3C,MAMArlD,KAAAyjD,OAAA,KAMAzjD,KAAAslD,YAAA,KAMAtlD,KAAAulD,kBAAA,EAMAvlD,KAAAwlD,YAAA1hD,IAAAwJ,EAAAm4C,MAAAn4C,EAAAm4C,MAAA,KAIA9kD,OAAAG,EAAA,SAAAH,CAAA+jD,EAAAC,EAAA,SAQAD,EAAAgB,4BAAA,SAiBAhB,EAAAxkD,UAAAylD,qBAAA,SAAAr4B,EAAA21B,EAAAt1B,EAAA1sB,GACA,QAAA6C,IAAA9D,KAAA8kD,KACA,OAEA,MAAAc,EAAAjlD,OAAA26C,EAAA,IAAA36C,CAAAgtB,GACAk4B,EAAA7lD,KAAAsV,gBAEAuwC,OAAAD,IACA3C,EAAA6C,EAAA,EAAAC,0BAAAF,EAAAD,EAAAt4B,EAAA21B,GACA31B,EAAA3sB,OAAA26C,EAAA,UAAA36C,CAAA2sB,EAAAs4B,EAAAC,IAGA,MAAAtkD,EAAAZ,OAAAqjD,EAAA,kBAAArjD,CAAA2sB,EAAA21B,EAAA,EACAyB,EAAAgB,4BAEAM,GACAxR,QAAA,MACAC,QAAAwR,EAAA,EACAvR,QAAA,iBACA/C,OAAA,YACA4C,aAAA,EACA2R,aAAAlmD,KAAAglD,QAAA,QAEArkD,OAAAwlD,EAAA,OAAAxlD,CAAAqlD,EAAAhmD,KAAAglD,QAAA/jD,GAEA,MAAA+jB,EAAAtD,KAAAwD,OAAAoI,EAAA,GAAA/rB,EAAA,IAAA0hD,GACAh+B,EAAAvD,KAAAwD,OAAA3jB,EAAA,GAAA+rB,EAAA,IAAA21B,GAIA,OAHA+C,EAAAhmD,KAAAilD,KAAA,SAAAjgC,EACAghC,EAAAhmD,KAAAilD,KAAA,SAAAhgC,EAEAjlB,KAAAomD,eACA7kD,EAAAmjD,EAAAgB,2BACA,EAAAG,GAAAD,EAAAI,IAUAtB,EAAAxkD,UAAAo1C,UAAA,WACA,OAAAt1C,KAAAglD,SAOAN,EAAAxkD,UAAAmmD,iBAAA,SAAA9kD,EAAA0hD,EAAAC,EAAAv1B,GAEA,QAAA7pB,IAAA9D,KAAA8kD,KACA,YAGA7B,EAAAjjD,KAAAsmD,sBAAArD,GAEA,GAAAC,GAAAljD,KAAAolD,aAAAthD,IAAA9D,KAAAmlD,cACAjC,EAAA,GAGA,MAAAqD,EAAAtD,EAAAC,EAEAvC,EAAAhgD,OAAAqjD,EAAA,UAAArjD,CAAAY,GACAilD,EAAA9kC,KAAA+kC,KAAA9lD,OAAAqjD,EAAA,SAAArjD,CAAAY,GAAAglD,GACAG,EAAAhlC,KAAA+kC,KAAA9lD,OAAAqjD,EAAA,UAAArjD,CAAAY,GAAAglD,GACAI,EAAAhmD,OAAAqjD,EAAA,kBAAArjD,CAAAggD,EAAA4F,EAAA,GACAC,EAAAE,IACAE,EAAAllC,KAAA+kC,KAAAzmD,KAAAwlD,OAAA7kD,OAAAqjD,EAAA,SAAArjD,CAAAY,GAAAglD,GACAM,EAAAnlC,KAAA+kC,KAAAzmD,KAAAwlD,OAAA7kD,OAAAqjD,EAAA,UAAArjD,CAAAY,GAAAglD,GACAO,EAAAnmD,OAAAqjD,EAAA,kBAAArjD,CAAAggD,EAAA4F,EAAA,GACAK,EAAAC,IAEA1lC,EAAAnhB,KAAAyjD,OACA,GAAAtiC,GACAnhB,KAAAulD,mBAAAvlD,KAAA2yB,eACAxR,EAAA6zB,iBAAAiO,GACA9hC,EAAA4lC,iBAAA7D,GACAviD,OAAAqjD,EAAA,eAAArjD,CAAAwgB,EAAA4H,YAAA49B,GACA,OAAAxlC,EAGA,MAAAlgB,GACAuzC,QAAA,MACAC,QAAAwR,EAAA,EACAvR,QAAA,SACA/C,OAAA,YACA4C,aAAA,GAEA5zC,OAAAwlD,EAAA,OAAAxlD,CAAAM,EAAAjB,KAAAglD,SAEAhlD,KAAAslD,WAAA,GAAA5jC,KAAAC,MAAAhhB,OAAAqjD,EAAA,SAAArjD,CAAAmmD,GAAAP,GACAvmD,KAAAslD,WAAA,GAAA5jC,KAAAC,MAAAhhB,OAAAqjD,EAAA,UAAArjD,CAAAmmD,GAAAP,GAEA,MAAAlyC,EAAArU,KAAAomD,eAAAU,EAAA9mD,KAAAslD,WAAApC,EACAv1B,EAAA1sB,GAUA,OARAjB,KAAAyjD,OAAA,IAAAgB,EAAAqC,EAAA7D,EAAAC,EACA7uC,EAAArU,KAAA6kD,aAAA7kD,KAAA4jD,oBAEA5jD,KAAAulD,kBAAAvlD,KAAA2yB,cAEA0xB,EAAA,QAAAz7C,OAAA5I,KAAAyjD,OAAA54C,EAAA,EAAAse,OACAnpB,KAAAgnD,kBAAAhnD,MAEAA,KAAAyjD,QAUAiB,EAAAxkD,UAAA+mD,qBAAA,WACA,OAAAjnD,KAAA4jD,oBAaAc,EAAAxkD,UAAAkmD,eAAA,SAAA7kD,EAAA2T,EAAAguC,EAAAv1B,EAAA1sB,GAUA,GARAN,OAAAC,EAAA,EAAAD,MAAAmD,IAAA9D,KAAA8kD,KAAA,GAEA7jD,EAAAjB,KAAAilD,KAAA,aAAAt3B,EAAApY,UAEA,WAAAvV,KAAAglD,UACA/jD,EAAA,WAGA,GAAAiiD,EACA,OAAAljD,KAAAmlD,aACA,KAAA+B,EAAA,EAAAtb,UACA,MAAAub,EAAA,GAAAjE,EAAA,KACA,mBAAAjiD,EACAA,EAAA,wBAAwCkmD,EAExClmD,EAAA,sBAAAkmD,EAEA,MACA,KAAAD,EAAA,EAAA7iB,UACApjC,EAAA,kBAAAiiD,EACA,MACA,KAAAgE,EAAA,EAAAE,gBACA,KAAAF,EAAA,EAAAG,KACApmD,EAAA,OAAAiiD,EACA,MACA,QACAviD,OAAAC,EAAA,EAAAD,EAAA,KAKAM,EAAA,MAAAiU,EAAA,GACAjU,EAAA,OAAAiU,EAAA,GAEA,MAAAmmC,EAAA1tB,EAAA6tB,qBACA,IAAAj2C,EAQA,OANAA,EADAvF,KAAAilD,MAAA,MAAA5J,EAAAO,OAAA,MACAr6C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAEAN,EAAA,KAAAsE,EAAA6O,KAAA,KAEAzT,OAAA8sC,EAAA,aAAA9sC,CAAwCX,KAAA,KAAAiB,IASxCyjD,EAAAxkD,UAAAonD,OAAA,WACA,OAAAtnD,KAAA8kD,MASAJ,EAAAxkD,UAAAqnD,qBAAA,SACAnE,GACApjD,KAAAyjD,OAAA,KACAzjD,KAAA4jD,mBAAAR,EACApjD,KAAAqyB,WASAqyB,EAAAxkD,UAAAsnD,OAAA,SAAAnzC,GACAA,GAAArU,KAAA8kD,OACA9kD,KAAA8kD,KAAAzwC,EACArU,KAAAyjD,OAAA,KACAzjD,KAAAqyB,YAUAqyB,EAAAxkD,UAAA8xC,aAAA,SAAA/wC,GACAN,OAAAwlD,EAAA,OAAAxlD,CAAAX,KAAAglD,QAAA/jD,GACAjB,KAAAklD,aACAllD,KAAAyjD,OAAA,KACAzjD,KAAAqyB,WAOAqyB,EAAAxkD,UAAAglD,WAAA,WACA,MAAAuC,EAAAznD,KAAAglD,QAAA,SAAAiB,EAAA,EACAjmD,KAAAilD,KAAAx1B,EAAA,QAAAi4B,gBAAAD,EAAA,WAEAphD,EAAA,sLCnXAshD,EAAArhD,EAAA,GA6BA,MAAAshD,EAAA,SAAAv6C,GACA,MAAAC,EAAAD,MAMArN,KAAA6nD,aAAAv6C,EAAA4B,YAMAlP,KAAAuN,WAAAD,EAAAyF,UAMA/S,KAAAwN,WAAAF,EAAA66B,UACA76B,EAAA66B,UAAA,IAAA2f,EAAA,QAMA9nD,KAAAk7C,gBAAA5tC,EAAAo/B,eACAp/B,EAAAo/B,eACAkb,EAAAG,iBAAAH,EAAAI,iBAEAC,EAAA,EAAA1nD,KAAAP,OAGAW,OAAAkN,EAAA,SAAAlN,CAAAinD,EAAAK,EAAA,GAOAL,EAAAM,eAAA,UAOAN,EAAAO,MAAA,gCAOAP,EAAAQ,MAAA,6BAOAR,EAAAS,MAAA,6BAOAT,EAAAU,MAAA,6BAOAV,EAAAG,kBACAQ,QAAA,0EAEAC,QAAA,2EASAZ,EAAAI,gBAAA,QAMAJ,EAAA1nD,UAAAuoD,eAAA,WACA,OAAAzoD,KAAA6nD,cAOAD,EAAA1nD,UAAAwoD,eAAA,SAAAx5C,GACAlP,KAAA6nD,aAAA34C,GAaA04C,EAAA1nD,UAAA0P,aAMAg4C,EAAA1nD,UAAA2P,qBAAA,SAAA1B,EAAAd,GACA,MAAAvB,GACAoD,YAAAlP,KAAA6nD,aACA90C,UAAA/S,KAAAuN,YAEA5M,OAAAgoD,EAAA,OAAAhoD,CAAAmL,EAAA9L,KAAA+P,eAAA5B,EAAAd,QACA,MAAAe,GAAAtC,GACA9L,KAAAwN,WAAAmC,2BAAAi5C,EAAA,EAAAjc,OACA,cACAgb,EAAA,QAAAv4C,gBAAAw5C,EAAA,EAAA1oD,UAAA4sC,sBACA,IAAAlgC,EAAA+6C,EAAA,QAAAl4C,mBACAzP,KAAAwN,WAAAmC,2BAAAxB,EACAC,EAAApO,KAAAwN,YAIA,OAHAZ,IACAA,MAEAA,GAWAg7C,EAAA1nD,UAAA2oD,wBAAA,SAAAnhC,GACA,GAAAigC,EAAA,QAAA7lB,WAAApa,GACA,OAAA1nB,KAAA8oD,oCAC0B,GACvB,GAAAnB,EAAA,QAAA3lB,OAAAta,GACH,OAAA1nB,KAAA+oD,gCAAgE,GAC7D,oBAAArhC,EAAA,CACH,MAAAwa,EAAAylB,EAAA,QAAA73B,MAAApI,GACA,OAAA1nB,KAAA8oD,oCAAA5mB,KAeA0lB,EAAA1nD,UAAA8oD,8BAAA,SAAAthC,GACA,GAAAigC,EAAA,QAAA7lB,WAAApa,GACA,OAAA1nB,KAAAipD,0CAC0B,GACvB,GAAAtB,EAAA,QAAA3lB,OAAAta,GACH,OAAA1nB,KAAAkpD,sCACsB,GACnB,oBAAAxhC,EAAA,CACH,MAAAwa,EAAAylB,EAAA,QAAA73B,MAAApI,GACA,OAAA1nB,KAAAipD,0CAAA/mB,KAYA0lB,EAAA1nD,UAAA+oD,0CAAA,SAAA/mB,GACA,QAAA9M,EAAA8M,EAAAE,WAA8BhN,EAAGA,IAAAiN,YACjC,GAAAjN,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAAkpD,sCAAA9zB,IAYAwyB,EAAAuB,6BACA7Y,8BACA8Y,UAAAzB,EAAA,QAAA0B,yBACAT,EAAA,EAAA1oD,UAAA0tC,oBAAA,YAUAga,EAAA1nD,UAAAgpD,sCAAA,SAAA/6C,GACA,MAAAyW,KACA1Z,EAAAo+C,EAAA,EAAAn5B,6BACAhiB,EAAA2/B,aAAA,qBAEA,OADAlpB,EAAA,iBAAA1Z,EACAy8C,EAAA,QAAAl4C,gBAC+C,EAC/Cm4C,EAAAuB,4BAAAh7C,KAAAnO,KAAAwN,aASAo6C,EAAA2B,8BACAC,8BACAC,cAAA9B,EAAA,QAAA0B,yBACAC,EAAA,EAAAp5B,wBACAw5B,aAAA/B,EAAA,QAAA0B,yBACAC,EAAA,EAAAp5B,wBACAy5B,aAAAhC,EAAA,QAAA0B,yBACAC,EAAA,EAAAp5B,0BAWA03B,EAAAgC,wBAAA,SAAAz7C,EAAAC,GACA,OAAAu5C,EAAA,QAAAl4C,mBACMm4C,EAAA2B,6BAAAp7C,EAAAC,IASNw5C,EAAAiC,kBACAC,8BACAC,UAAApC,EAAA,QAAAv4C,gBAAA,SAAAjB,EAAAC,GACA,OAAAD,EAAA2/B,aAAA,WAWA8Z,EAAAoC,WAAA,SAAA77C,EAAAC,GACAu5C,EAAA,QAAAtY,UAAAuY,EAAAiC,iBAAA17C,EAAAC,IASAw5C,EAAAqC,yBACAT,8BACAU,QAAAtC,EAAAoC,aAWApC,EAAAuC,mBAAA,SAAAh8C,EAAAC,GACA,OAAAu5C,EAAA,QAAAl4C,mBACAm4C,EAAAqC,wBAAA97C,EAAAC,IASAw5C,EAAAwC,+BACAZ,8BACAa,mBAAA1C,EAAA,QAAA0B,yBACAzB,EAAAgC,wBAAA,sBACAU,cAAA3C,EAAA,QAAA0B,yBACAzB,EAAAuC,mBAAA,eASAvC,EAAA1nD,UAAA4oD,oCAAA,SAAA5mB,GACA,QAAA9M,EAAA8M,EAAAE,WAA8BhN,EAAGA,IAAAiN,YACjC,GAAAjN,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA+oD,gCAAA3zB,IAWAwyB,EAAA1nD,UAAA6oD,gCAAA,SAAA56C,GACA,OAAAw5C,EAAA,QAAAl4C,mBAEAm4C,EAAAwC,8BAAAj8C,OAQAy5C,EAAA2C,oBACAf,8BACAgB,aAAA7C,EAAA,QAAA3K,kBAAAsM,EAAA,EAAA74B,uBAWAm3B,EAAA6C,cAAA,SAAAt8C,EAAA3B,EAAA4B,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAqO,EAAApD,EAAA,YACAiH,EAAAjH,EAAA,UACA4+C,EAAA5+C,EAAA,WACAkvB,EAAA2sB,EAAA,QAAAhL,gBAAA5pC,EAAA7D,GACAf,EAAAwiB,YAAAqK,GACA,IAAA0vB,EACAj9C,EAAA,QAAAvN,UAAA08C,oBAAA5hB,EAAAxuB,EAAA4B,GAEA05C,EAAA,QAAA5nD,UAAA08C,oBAAA5hB,EAAAxuB,EAAA4B,IAWAw5C,EAAA+C,mBAAA,SAAAx8C,EAAA8/B,EAAA7/B,GACA,MAAAgd,EAAAu8B,EAAA,QAAAhL,gBAAAiL,EAAAQ,MAAA,UACAptB,EAAA2sB,EAAA,QAAAhL,gBAAAiL,EAAAQ,MAAA,aACAh9B,EAAAuF,YAAAqK,GACAA,EAAA3sB,aAAA,MAAA4/B,GACA9/B,EAAAwiB,YAAAvF,IAUAw8B,EAAAgD,aAAA,SAAA53C,EAAA9D,GAGA,MAAAi+B,GAFAn6B,KACA40C,EAAAM,gBACA,IAEA,WAAAh5C,EAAAuS,QAAA0rB,GACAj+B,EAEAi+B,EAAAj+B,GAWA04C,EAAAiD,aAAA,SAAA18C,EAAA3B,EAAA4B,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAF,OAAAmqD,EAAA,EAAAnqD,MAAAmD,IAAA0I,EAAAqwC,QAAA,IACA,MAAA3tC,EAAApD,EAAA,YACAkH,EAAAlH,EAAA,cACAiH,EAAAjH,EAAA,UACAi/C,EAAAnD,EAAAgD,aAAA53C,EAAA9D,GACAf,EAAAE,aAAA,WAAA08C,GACApD,EAAA,QAAAqD,eAAA78C,EAAAy5C,EAAAO,MAAA,SAAAn1C,EACAD,GACA,MAAAk7B,EAAAzhC,EAAAqwC,aACA/4C,IAAAmqC,GACA2Z,EAAA+C,mBAAAx8C,EAAA8/B,EAAA7/B,IAWAw5C,EAAAqD,aAAA,SAAA98C,EAAA3B,EAAA4B,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAF,OAAAmqD,EAAA,EAAAnqD,MAAAmD,IAAA0I,EAAAqwC,QAAA,IACA,MAAA3tC,EAAApD,EAAA,YACAkH,EAAAlH,EAAA,cACAiH,EAAAjH,EAAA,UACAi/C,EAAAnD,EAAAgD,aAAA53C,EAAA9D,GACA5N,EAAAkL,EAAA4Z,kBACAjY,EAAAE,aAAA,WAAA08C,GACApD,EAAA,QAAAqD,eAAA78C,EAAAy5C,EAAAO,MAAA,SAAAn1C,EACAD,GACA,MAAAk7B,EAAAzhC,EAAAqwC,QACA,QAAA/4C,IAAAmqC,EAAA,CACA,MAAA18B,EAAA/E,EAAA0+C,UACA7uB,KACA,QAAA7tB,EAAA,EAAAC,EAAA8C,EAAA1Q,OAAqC2N,EAAAC,EAAQD,IAAA,CAC7C,MAAAtD,EAAAsB,EAAAysB,IAAA1nB,EAAA/C,IACA,QAAA1K,IAAAoH,EAAA,CACA,IAAA3D,EAAAgK,EAAA/C,GACAtD,aAAAigD,EAAA,UACA5jD,EAAAjG,GAEA+6B,EAAAx1B,MAAqBU,OAAA2D,WAGrBy8C,EAAA,QAAAvK,qBACOsN,WAAA5+C,EAAA,WAAAqC,OACP0vC,KAAA/xC,EAAA,KAAArK,QAAAqK,EAAA,SACA87C,EAAAwD,yBACAzD,EAAA,QAAAtK,sBAAA,YAAAhhB,EACAjuB,GACAw5C,EAAA+C,mBAAAx8C,EAAA8/B,EAAA7/B,KAWAw5C,EAAAyD,eAAA,SAAAl9C,EAAAqzC,EAAApzC,GACA,MAAA7G,EAAAogD,EAAA,QAAAhL,gBAAAiL,EAAAS,MAAA,QAEAqC,EADAt8C,IAAAvN,OAAA,GACA,WAGA,GAFAsN,EAAAwiB,YAAAppB,GACA+hD,EAAA,EAAA74B,oBAAAlpB,EAAAi6C,EAAAj6C,WACAzD,IAAA09C,EAAAt2C,OAAA,OAAAs2C,EAAAt2C,MAAA,CACA,MAAAA,EAAAy8C,EAAA,QAAAhL,gBAAAiL,EAAAS,MAAA,SACAl6C,EAAAwiB,YAAAzlB,GACAs2C,EAAAt2C,iBAAAigD,EAAA,QACA,IAAAT,EACAj9C,EAAA,QAAAvN,UAAA+8C,qBAAA/xC,EACAs2C,EAAAt2C,MAAAkD,GAEA05C,EAAA,QAAA5nD,UAAA+8C,qBAAA/xC,EACAs2C,EAAAt2C,MAAAkD,GAGAk7C,EAAA,EAAA74B,oBAAAvlB,EAAAs2C,EAAAt2C,SAaA08C,EAAA0D,aAAA,SAAAn9C,EAAAo9C,EAAAn9C,GACAm9C,EAAAC,UACAr9C,EAAAE,aAAA,WAAAk9C,EAAAC,eAEA1nD,IAAAynD,EAAAE,cACAt9C,EAAAE,aAAA,eAAAk9C,EAAAE,mBAEA3nD,IAAAynD,EAAArgD,OACAo+C,EAAA,EAAA74B,oBAAAtiB,EAAAo9C,EAAArgD,QASA08C,EAAAwD,0BACA5B,8BACAkC,OAAA/D,EAAA,QAAA3K,kBAAA4K,EAAA6C,eACAkB,OAAAhE,EAAA,QAAA3K,kBAAA4K,EAAAqD,cACAW,OAAAjE,EAAA,QAAA3K,kBAAA4K,EAAAiD,cACAgB,SAAAlE,EAAA,QAAA3K,kBAAA4K,EAAAyD,gBACAS,OAAAnE,EAAA,QAAA3K,kBAAA4K,EAAA0D,gBAWA1D,EAAAmE,YAAA,SAAA59C,EAAAe,EAAAd,GACA,MAAAtC,EAAoCsC,IAAAvN,OAAA,GACpCmS,EAAAlH,EAAA,cACAiH,EAAAjH,EAAA,UACAkgD,EAAAlgD,EAAA,cACArK,EAAAqK,EAAA,QACA,IAAAi/C,EAGAA,EADA/3C,EACA40C,EAAAgD,aAAA53C,EAAA9D,GAEAA,EAEAf,EAAAE,aAAA,WAAA08C,GACAtpD,GACA0M,EAAAE,aAAA,UAAA5M,GAEAsR,GACA40C,EAAA,QAAAqD,eAAA78C,EAAAy5C,EAAAO,MAAA,SAAAn1C,EACAD,GAEA,MAAA/B,EAA8CrQ,OAAAgoD,EAAA,WAAc78C,GAC5DkF,EAAA7C,OACAw5C,EAAA,QAAAvK,oBAAApsC,EACA42C,EAAA2C,mBACA5C,EAAA,QAAAtK,sBAAA,gBAAA2O,EACA59C,GACA,MAAAgd,EAAAtf,EAAA,OACA,GAAAsf,EAAA,CACA,MAAA4P,EAAA2sB,EAAA,QAAAhL,gBAAAiL,EAAAQ,MAAA,UACAj6C,EAAAwiB,YAAAqK,GACA4sB,EAAAqE,sBAAAjxB,EAAA5P,EAAAhd,KAWAw5C,EAAAqE,sBAAA,SAAA99C,EAAAid,EAAAhd,GAEA,MAAA4C,GAAgB7C,QAChBw5C,EAAA,QAAAvK,oBAAApsC,EACA42C,EAAAsE,wBACAvE,EAAA,QAAAtK,sBAAAjyB,EAAAjrB,eACAirB,GAAAhd,IAUAw5C,EAAAuE,iBAAA,SAAAh+C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAmmD,EAAAwE,sBAAAj+C,EAAAid,EAAA9pB,cACAwmD,EAAA,QAAA5nD,UAAA+8C,qBAAA9uC,EAAAid,EAAA7pB,OAAA6M,IAUAw5C,EAAAyE,qBAAA,SAAAl+C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAmmD,EAAAwE,sBAAAj+C,EAAAid,EAAA9pB,cACAwmD,EAAA,QAAA5nD,UAAA+8C,qBAAA9uC,EAAAid,EAAAxpB,SAAAwM,IAUAw5C,EAAA0E,uBAAA,SAAAn+C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAmmD,EAAAwE,sBAAAj+C,EAAAid,EAAA9pB,cACAwmD,EAAA,QAAA5nD,UAAA+8C,qBAAA9uC,EAAAid,EAAAxpB,SAAAwM,IAUAw5C,EAAA2E,mBAAA,SAAAp+C,EAAAid,EAAAhd,GACAA,IAAAvN,OAAA,GACA,QAAAuqB,EAAA3pB,QAEAmmD,EAAAwE,sBAAAj+C,EAAAid,EAAA9pB,cACAwmD,EAAA,QAAA5nD,UAAA+8C,qBAAA9uC,EAAAid,EAAAxpB,SAAAwM,IAUAw5C,EAAA4E,mBAAA,SAAAr+C,EAAAid,EAAAhd,GAEA,MAAAq+C,EAAA9E,EAAA,QAAAhL,gBAAAiL,EAAAU,MAAA,kBACAgB,EAAA,EAAA74B,oBAAAg8B,EAAArhC,EAAAnpB,cACAkM,EAAAwiB,YAAA87B,GAEA,MAAAC,EAAA/E,EAAA,QAAAhL,gBAAAiM,EAAA,EAAAjc,MAAA,cAEAx+B,EAAAwiB,YAAA+7B,GAEA,MAAAtqD,EAAAulD,EAAA,QAAAhL,gBAAAiM,EAAA,EAAAjc,MAAA,SACA+f,EAAA/7B,YAAAvuB,GACAwlD,EAAA+E,kBAAAvqD,EAAAgpB,EAAAhpB,OAEA,MAAAC,EAAAslD,EAAA,QAAAhL,gBAAAiM,EAAA,EAAAjc,MAAA,OACA+f,EAAA/7B,YAAAtuB,GACAulD,EAAA+E,kBAAAtqD,EAAA+oB,EAAA/oB,MAUAulD,EAAAgF,oBAAA,SAAAz+C,EAAAid,EAAAhd,GAEA,MAAA4C,GAAgB7C,QAChB7N,EAAA8qB,EAAA9qB,WACA,QAAAkO,EAAA,EAAAC,EAAAnO,EAAAO,OAAyC2N,EAAAC,IAAQD,EAAA,CACjD,MAAA/J,EAAAnE,EAAAkO,GACAm5C,EAAA,QAAAvK,oBAAApsC,EACA42C,EAAAsE,wBACAvE,EAAA,QAAAtK,sBAAA54C,EAAAtE,eACAsE,GAAA2J,KAWAw5C,EAAAiF,gBAAA,SAAA1+C,EAAAid,EAAAhd,GAEA,MAAA4C,GAAgB7C,QAChB1J,EAAA2mB,EAAA3mB,UACAkjD,EAAA,QAAAvK,oBAAApsC,EACA42C,EAAAsE,wBACAvE,EAAA,QAAAtK,sBAAA54C,EAAAtE,eACAsE,GAAA2J,IAUAw5C,EAAAkF,uBAAA,SAAA3+C,EAAAid,EAAAhd,QACAtK,IAAAsnB,EAAA1oB,WACAyL,EAAAE,aAAA,YAAA+c,EAAA1oB,UAAA4jB,YAEAshC,EAAAwE,sBAAAj+C,EAAAid,EAAAnpB,cACA2lD,EAAAmF,iBAAA5+C,EAAA,GAAAid,EAAA5oB,aAUAolD,EAAAoF,mBAAA,SAAA7+C,EAAAid,EAAAhd,GACAw5C,EAAAwE,sBAAAj+C,EAAAid,EAAAnpB,eAUA2lD,EAAAqF,sBAAA,SAAA9+C,EAAAid,EAAAhd,GACAw5C,EAAAwE,sBAAAj+C,EAAAid,EAAAnpB,cAEA,MAAAoB,EAAAskD,EAAA,QAAAhL,gBAAAiL,EAAAQ,MAAA,iBACAj6C,EAAAwiB,YAAAttB,GACAukD,EAAAmF,iBAAA1pD,EAAA,GAAA+nB,EAAA/nB,eAEA,MAAAC,EAAAqkD,EAAA,QAAAhL,gBAAAiL,EAAAQ,MAAA,iBACAj6C,EAAAwiB,YAAArtB,GACAskD,EAAAmF,iBAAAzpD,EAAA,GAAA8nB,EAAA9nB,gBAUAskD,EAAAsF,mBAAA,SAAA/+C,EAAAid,EAAAhd,GACAD,EAAAE,aAAA,WAAA+c,EAAAvnB,UACAsK,EAAAE,aAAA,aAAA+c,EAAArnB,YACAoK,EAAAE,aAAA,aAAA+c,EAAApnB,iBACAF,IAAAsnB,EAAA1oB,WACAyL,EAAAE,aAAA,YAAA+c,EAAA1oB,UAAA4jB,YAEAshC,EAAAwE,sBAAAj+C,EAAAid,EAAAnpB,cACA2lD,EAAAmF,iBAAA5+C,EAAA,GAAAid,EAAA3nB,UAUAmkD,EAAAuF,oBAAA,SAAAptD,EAAAoO,EAAAjD,GACA,MAAAkiD,EAAAzF,EAAA,QAAAhL,gBAAAiL,EAAAQ,MAAAroD,GACAupD,EAAA,EAAA74B,oBAAA28B,EAAAliD,GACAiD,EAAAwiB,YAAAy8B,IASAxF,EAAAwE,sBAAA,SAAAj+C,EAAAjD,GACA08C,EAAAuF,oBAAA,eAAAh/C,EAAAjD,IASA08C,EAAAmF,iBAAA,SAAA5+C,EAAAjD,GACA08C,EAAAuF,oBAAA,UAAAh/C,EAAAjD,IASA08C,EAAA+E,kBAAA,SAAAx+C,EAAA48B,GACA,MAAAsiB,EAAA1F,EAAA,QAAAhL,gBAAAiM,EAAA,EAAAjc,MAAA,eACAx+B,EAAAwiB,YAAA08B,GAEA,MAAAC,EAAA3F,EAAA,QAAAhL,gBAAAiM,EAAA,EAAAjc,MAAA,gBACA0gB,EAAA18B,YAAA28B,GACAhE,EAAA,EAAA74B,oBAAA68B,EAAAviB,IAQA6c,EAAAsE,yBACA1C,8BACA+D,MAAA5F,EAAA,QAAA3K,kBAAA4K,EAAAmE,cAEAjC,8BACA3nD,OAAAwlD,EAAA,QAAA3K,kBAAA4K,EAAA4E,oBACAxrD,IAAA2mD,EAAA,QAAA3K,kBAAA4K,EAAAgF,qBACA/nD,GAAA8iD,EAAA,QAAA3K,kBAAA4K,EAAAgF,qBACApoD,IAAAmjD,EAAA,QAAA3K,kBAAA4K,EAAAiF,iBACAW,KAAA7F,EAAA,QAAA3K,kBAAA4K,EAAAuE,kBACArqD,SAAA6lD,EAAA,QAAA3K,kBAAA4K,EAAAyE,sBACAnpD,WAAAykD,EAAA,QAAA3K,kBAAA4K,EAAA0E,wBACAvnD,OAAA4iD,EAAA,QAAA3K,kBAAA4K,EAAA2E,oBACAkB,kBAAA9F,EAAA,QAAA3K,kBAAA4K,EAAAkF,wBACAY,qBAAA/F,EAAA,QAAA3K,kBAAA4K,EAAAkF,wBACAa,mBAAAhG,EAAA,QAAA3K,kBAAA4K,EAAAkF,wBACAc,4BAAAjG,EAAA,QAAA3K,kBAAA4K,EAAAkF,wBACAe,sBAAAlG,EAAA,QAAA3K,kBAAA4K,EAAAkF,wBACAgB,+BAAAnG,EAAA,QAAA3K,kBAAA4K,EAAAkF,wBACAiB,eAAApG,EAAA,QAAA3K,kBAAA4K,EAAAoF,oBACAgB,kBAAArG,EAAA,QAAA3K,kBAAA4K,EAAAqF,uBACAgB,eAAAtG,EAAA,QAAA3K,kBAAA4K,EAAAsF,sBAYAtF,EAAAsG,YAAA,SAAA9iC,GACA,MAAA4P,EAAA2sB,EAAA,QAAAhL,gBAAAiL,EAAAQ,MAAA,UAEA,OADAR,EAAAqE,sBAAAjxB,EAAA5P,MACA4P,GAUA4sB,EAAAuG,iBAAA,SAAAhgD,EAAAsF,EAAArF,GACA,MAAAtC,EAAoCsC,IAAAvN,OAAA,GACpCmQ,EAA8CrQ,OAAAgoD,EAAA,WAAc78C,GAC5DkF,EAAA7C,OACAw5C,EAAA,QAAAvK,oBAAApsC,EACA42C,EAAAsE,wBACAvE,EAAA,QAAAtK,sBAAA,SAAA5pC,EACArF,IAWAw5C,EAAA1nD,UAAA8V,gBAAA,SAAA1I,GACA,MAAAa,EAAAw5C,EAAA,QAAAhL,gBAAAiL,EAAAS,MAAA,cAGA,IAAAj9B,EACA,GAHAjd,EAAAE,aAAA,iBACAF,EAAAE,aAAA,mBAEAf,IACAA,EAAA8gD,QACAjgD,EAAAE,aAAA,SAAAf,EAAA8gD,QAEA9gD,EAAAoI,cACAvH,EAAAE,aAAA,eAAAf,EAAAoI,mBAEA5R,IAAAwJ,EAAA2F,aACA9E,EAAAE,aAAA,cAAAf,EAAA2F,aAEA3F,EAAA+gD,YACAlgD,EAAAE,aAAA,aAAAf,EAAA+gD,iBAEAvqD,IAAAwJ,EAAAghD,YACAngD,EAAAE,aAAA,aAAAf,EAAAghD,iBAEAxqD,IAAAwJ,EAAAkgC,OACAr/B,EAAAE,aAAA,QAAAf,EAAAkgC,OAEApiB,EAAA9d,EAAA8d,OACA9d,EAAA/H,MAAA,CACA5E,OAAAmqD,EAAA,EAAAnqD,CAAA2M,EAAAhM,aACA,IACA,MAAAiE,EAAAgpD,EAAA,QAAAhpD,KAC0B+H,EAAA,aAAAA,EAAA/H,KAAA+H,EAAA7L,SAG1B2pB,EAFAA,EAEAmjC,EAAA,QAAArpD,IAAAkmB,EAAA7lB,GAEAA,EAIAoiD,EAAA,QAAAqD,eAAA78C,EAAA,4CACA,qBAAAnO,KAAAk7C,iBAEA,MAAApvC,GACAqC,OACA1M,QAAA6L,EAAA7L,QACAsR,UAAAzF,EAAAyF,UAAAzF,EAAAyF,UAAA/S,KAAAuN,WACAyF,cAAA1F,EAAA0F,cACA1R,aAAAgM,EAAAhM,aACA8pB,SACA4gC,cAAA1+C,EAAA0+C,cAAA1+C,EAAA0+C,kBAKA,OAHArrD,OAAAmqD,EAAA,EAAAnqD,CAAAH,MAAAgd,QAAAlQ,EAAAmG,cACA,IACAm0C,EAAAuG,iBAAAhgD,EAAwDb,EAAA,cAAAxB,IACxDqC,GAcAy5C,EAAA1nD,UAAAsuD,iBAAA,SAAAC,EAAAC,EAAAC,EACArhD,GACA,MAAAc,KACAD,EAAAw5C,EAAA,QAAAhL,gBAAAiL,EAAAS,MAAA,eACAZ,EAAAn6C,EAAAm6C,QACAn6C,EAAAm6C,QAAAG,EAAAI,gBACA0C,EAAA,UAAAjD,EAAA,IAGA,IAAAmH,EAEAzI,EAJAh4C,EAAAE,aAAA,iBACAF,EAAAE,aAAA,UAAAo5C,GAIAn6C,IACAshD,EAAAthD,EAAAuhD,WAAAvhD,EAAAuhD,cACAvhD,EAAA8gD,QACAjgD,EAAAE,aAAA,SAAAf,EAAA8gD,SAGA,MAAA1hB,EAAAkb,EAAAG,iBAAAN,GACAE,EAAA,QAAAqD,eAAA78C,EAAA,4CACA,qBAAAu+B,GACA,MAAA15B,EAAA1F,EAAA0F,cAAA1F,EAAA0F,cAAA40C,EAAAM,eAqCA,OApCAuG,IACAtI,GAAWh4C,OAAA4E,UAAAzF,EAAAyF,UACX7D,YAAA5B,EAAA4B,YAAA8D,gBACA03C,aAAA7M,KAAAvwC,EAAAuwC,KAAAp8C,QAAA6L,EAAA7L,SACAd,OAAAgoD,EAAA,OAAAhoD,CAAAwlD,EAAAyI,GACAjH,EAAA,QAAAvK,oBAAA+I,EACAyB,EAAAwD,yBACAzD,EAAA,QAAAtK,sBAAA,UAAAoR,EACArgD,IAEAsgD,IACAvI,GAAWh4C,OAAA4E,UAAAzF,EAAAyF,UACX7D,YAAA5B,EAAA4B,YAAA8D,gBACA03C,aAAA7M,KAAAvwC,EAAAuwC,KAAAp8C,QAAA6L,EAAA7L,SACAd,OAAAgoD,EAAA,OAAAhoD,CAAAwlD,EAAAyI,GACAjH,EAAA,QAAAvK,oBAAA+I,EACAyB,EAAAwD,yBACAzD,EAAA,QAAAtK,sBAAA,UAAAqR,EACAtgD,IAEAugD,GACAhH,EAAA,QAAAvK,qBAAkCjvC,OAAA4E,UAAAzF,EAAAyF,UAClC7D,YAAA5B,EAAA4B,YAAA8D,gBACA03C,aAAAjpD,QAAA6L,EAAA7L,SACAmmD,EAAAwD,yBACAzD,EAAA,QAAAtK,sBAAA,UAAAsR,EACAvgD,GAEAd,EAAAwhD,gBACAnH,EAAA,QAAAvK,qBAAkCjvC,OAAA4E,UAAAzF,EAAAyF,UAClC7D,YAAA5B,EAAA4B,YAAA8D,gBACA03C,aAAAjpD,QAAA6L,EAAA7L,SACAmmD,EAAAwD,yBACAzD,EAAA,QAAAtK,sBAAA,UAAA/vC,EAAAwhD,eACA1gD,GAEAD,GAYAy5C,EAAA1nD,UAAAsiC,eAMAolB,EAAA1nD,UAAAuiC,2BAAA,SAAAP,GACA,QAAA9M,EAAA8M,EAAAE,WAA8BhN,EAAGA,IAAAiN,YACjC,GAAAjN,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA0iC,uBAAAtN,GAGA,aAOAwyB,EAAA1nD,UAAAwiC,uBAAA,SAAAv0B,GACA,GAAAA,EAAA0/B,mBACA1/B,EAAA0/B,oCAEA,QAAAzY,GADAjnB,IAAA0/B,qCACAA,kBAAwCzY,EAAGA,IAAA+Y,mBAC3C,OAAA/Y,EAAA7mB,WAAA1N,SACA,IAAAu0B,EAAA7mB,WAAA1N,QACA,IAAAu0B,EAAAgN,WAAAzzB,UAAA,CACA,MAAAP,OAEA,OADApO,KAAAwN,WAAAogC,oBAAAxY,EAAAhnB,GACAzN,OAAAouD,EAAA,IAAApuD,CAAAyN,EAAAm/B,MAAA9rC,SAKA,aAEA4E,EAAA,2CC/kCAA,EAAA,2CCOAA,EAAA,GACA+gD,gBAAA,iBACAxb,UAAA,YACAvH,UAAA,YACAgjB,KAAA,uVCXA/gD,EAAA,SACAA,EAAA,MACAA,EAAA,yDAEA,IAAMC,aAWJ,SAAAA,EAAY+G,gGAASs1B,CAAA5iC,KAAAuG,GAQnBvG,KAAKgvD,uBAAyB,IAAI/iD,UAAaqB,EAAQ2hD,aASvDjvD,KAAKkvD,OAAS5hD,EAAQ6hD,MA5BpB,OAAAxmB,EAAApiC,IAAAI,IAAA,UAAAuE,MAAA,WAmCFlL,KAAKgvD,uBAAuBtiD,WAnC1B/F,IAAA,qBAAAuE,MAAA,SAiHe+1B,GACjB,OAAOA,EAAWmR,QAChB7rC,EAAQ6oD,gBAAgBC,GACxB9oD,EAAQ6oD,gBAAgBE,OApHxB3oD,IAAA,gBAAAuE,MAAA,SA2HU+1B,GACZjhC,KAAKgvD,uBAAuBnoD,KAAKo6B,MA5H/Bt6B,IAAA,mBAAAuE,MAAA,SAmIa+1B,GACfjhC,KAAKgvD,uBAAuB9kC,OAAO+W,MApIjCt6B,IAAA,wBAAAuE,MAAA,WAkJF,IAAMqkD,EACFvvD,KAAKwvD,kBAAoBjpD,EAAQ6oD,gBAAgBC,GAF/BnoB,GAAA,EAAAC,GAAA,EAAAC,OAAAtjC,EAAA,IAGtB,QAAAujC,EAAAC,EAAyBtnC,KAAKivD,YAA9B1nB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAhCjG,EAAgCoG,EAAAn8B,MACrC+1B,EAAWmR,UAAYmd,IACzBtuB,EAAWmR,QAAUmd,IALH,MAAA3nB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,OAjJpBzgC,IAAA,cAAAsyB,IAAA,WA+CF,OAAOj5B,KAAKgvD,uBAAuBpuB,cA/CjCj6B,IAAA,wBAAAsyB,IAAA,WAwDF,OAAOj5B,KAAKgvD,0BAxDVroD,IAAA,QAAAsyB,IAAA,WAqEF,OAAOj5B,KAAKkvD,UArEVvoD,IAAA,kBAAAsyB,IAAA,WAkFF,IAAIgH,SADgBqJ,GAAA,EAAAC,GAAA,EAAAC,OAAA1lC,EAAA,IAGpB,QAAA2lC,EAAAC,EAAyB1pC,KAAKivD,YAA9B1nB,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAA2C,KAAhCrI,EAAgCwI,EAAAv+B,MACzC,QAAcpH,IAAVm8B,EACFA,EAAQjgC,KAAKyvD,mBAAmBxuB,QAEbjhC,KAAKyvD,mBAAmBxuB,KACxBhB,IACjBA,EAAQ15B,EAAQ6oD,gBAAgBM,eAGpC,GAAIzvB,IAAU15B,EAAQ6oD,gBAAgBM,cACpC,OAbgB,MAAA9nB,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAmBpB,OAFAnhC,UAAYi3B,aAAaW,GAElBA,MApGL15B,KAgKNA,EAAQ6oD,iBACNM,cAAe,gBACfJ,IAAK,MACLD,GAAI,gBAIS9oD,+LC9KfopD,EAAArpD,EAAA,IA4BA,MAAAspD,EAAA,SAAAviD,GAEA,MAAAC,EAAAD,MAEApM,EAAAqM,EAAArM,WAEA4uD,IAAA,gBAAA5uD,MAAA,YAEA6uD,EAAA,EAAAvvD,KAAAP,MACAouB,aAAA9gB,EAAA8gB,aACAC,UAAA/gB,EAAA+gB,UACAC,YAAAhhB,EAAAghB,YACAC,QAAAshC,EACAliC,WAAArgB,EAAAqgB,WACAa,2BAAAlhB,EAAAkhB,2BACAuhC,UAAAziD,EAAAyiD,UACAniC,SAAAtgB,EAAAsgB,SACAa,iBAAAnhB,EAAAmhB,iBACApa,IAAA/G,EAAA+G,IACAua,KAAAthB,EAAAshB,KACAC,WAAA/qB,IAAAwJ,EAAAuhB,OAAAvhB,EAAAuhB,MACAC,WAAAxhB,EAAAwhB,aAOA9uB,KAAAgwD,aAAAlsD,IAAAwJ,EAAA2iD,OAAA3iD,EAAA2iD,OAAA,EAMAjwD,KAAAglD,QAAA/jD,EAMAjB,KAAAilD,MAAA,EAMAjlD,KAAAmlD,YAAkE73C,EAAA,WAMlEtN,KAAAolD,YAAAthD,IAAAwJ,EAAA+3C,OAAA/3C,EAAA+3C,MAMArlD,KAAAkwD,WAAAvvD,OAAAwvD,EAAA,YAAAxvD,GAEAX,KAAAklD,aACAllD,KAAAowD,OAAApwD,KAAAqwD,qBAIA1vD,OAAA2vD,EAAA,SAAA3vD,CAAAivD,EAAAE,EAAA,GAiBAF,EAAA1vD,UAAAylD,qBAAA,SAAAr4B,EAAA21B,EAAAt1B,EAAA1sB,GACA,MAAA2kD,EAAAjlD,OAAA4vD,EAAA,IAAA5vD,CAAAgtB,GACAk4B,EAAA7lD,KAAAsV,gBAEA,IAAAsY,EAAA5tB,KAAAwwD,cACA5iC,IACAA,EAAA5tB,KAAAywD,yBAAA7K,IAGA,MAAA8K,EAAA9iC,EAAA+iC,kCAAArjC,EAAA21B,GAEA,GAAAr1B,EAAAgjC,iBAAA/vD,QAAA6vD,EAAA,GACA,OAGA,IAAAG,EAAAjjC,EAAAonB,cAAA0b,EAAA,IACAI,EAAAljC,EAAAmjC,mBAAAL,EAAA1wD,KAAAkwD,YACAhiC,EAAA8iC,EAAA,QAAAC,OAAArjC,EAAAsjC,YAAAR,EAAA,IAAA1wD,KAAAmxD,SAGA,MAAAlB,EAAAjwD,KAAAgwD,QACA,IAAAC,IACA/hC,EAAA8iC,EAAA,QAAAI,OAAAljC,EAAA+hC,EAAAjwD,KAAAmxD,SACAL,EAAAnwD,OAAAwvD,EAAA,OAAAxvD,CAAAmwD,EAAAD,EAAAZ,EAAAa,IAGAjL,OAAAD,IACAiL,EAAAQ,EAAA,EAAAtL,0BAAAF,EAAAD,EAAAt4B,EAAAujC,GACAC,EAAAnwD,OAAA4vD,EAAA,gBAAA5vD,CAAAmwD,EAAAlL,EAAAC,GACAv4B,EAAA3sB,OAAA4vD,EAAA,UAAA5vD,CAAA2sB,EAAAs4B,EAAAC,IAGA,MAAAG,GACAxR,QAAA,MACAC,QAAA6c,EAAA,EACA5c,QAAA,iBACA/C,OAAA,YACA4C,aAAA,EACA2R,aAAAlmD,KAAAglD,QAAA,QAEArkD,OAAAmP,EAAA,OAAAnP,CAAAqlD,EAAAhmD,KAAAglD,QAAA/jD,GAEA,MAAA+jB,EAAAtD,KAAAwD,OAAAoI,EAAA,GAAAwjC,EAAA,IAAAD,GACA5rC,EAAAvD,KAAAwD,OAAA4rC,EAAA,GAAAxjC,EAAA,IAAAujC,GAKA,OAHA7K,EAAAhmD,KAAAilD,KAAA,SAAAjgC,EACAghC,EAAAhmD,KAAAilD,KAAA,SAAAhgC,EAEAjlB,KAAAomD,eAAAsK,EAAAxiC,EAAA4iC,EACA,EAAAjL,GAAAD,EAAAI,IAOA4J,EAAA1vD,UAAAqxD,kBAAA,WACA,OAAAvxD,KAAAgwD,SAUAJ,EAAA1vD,UAAAo1C,UAAA,WACA,OAAAt1C,KAAAglD,SAcA4K,EAAA1vD,UAAAkmD,eAAA,SAAAsK,EAAAxiC,EAAA4iC,EACA5N,EAAAv1B,EAAA1sB,GAEA,MAAA2tB,EAAA5uB,KAAA4uB,KACA,IAAAA,EACA,OAYA,GATA3tB,EAAA,MAAAitB,EAAA,GACAjtB,EAAA,OAAAitB,EAAA,GAEAjtB,EAAAjB,KAAAilD,KAAA,aAAAt3B,EAAApY,UAEA,WAAAvV,KAAAglD,UACA/jD,EAAA,WAGA,GAAAiiD,EACA,OAAAljD,KAAAmlD,aACA,KAAAqM,EAAA,EAAA5lB,UACA,MAAAub,EAAA,GAAAjE,EAAA,KACA,mBAAAjiD,EACAA,EAAA,wBAAwCkmD,EAExClmD,EAAA,sBAAAkmD,EAEA,MACA,KAAAqK,EAAA,EAAAntB,UACApjC,EAAA,kBAAAiiD,EACA,MACA,KAAAsO,EAAA,EAAApK,gBACA,KAAAoK,EAAA,EAAAnK,KACApmD,EAAA,OAAAiiD,EACA,MACA,QACAviD,OAAA8wD,EAAA,EAAA9wD,EAAA,MAKA,MAAA06C,EAAA1tB,EAAA6tB,qBACAj2C,EAAAurD,EACA,GAAA9wD,KAAAilD,MAAA,MAAA5J,EAAAO,OAAA,MACA,IAAA8V,EACAA,EAAAZ,EAAA,GACAvrD,EAAA,GAAAurD,EAAA,GACAvrD,EAAA,GAAAmsD,EACAA,EAAAZ,EAAA,GACAvrD,EAAA,GAAAurD,EAAA,GACAvrD,EAAA,GAAAmsD,EAIA,IAAAr9C,EACA,GAHApT,EAAA,KAAAsE,EAAA6O,KAAA,KAGA,GAAAwa,EAAA/tB,OACAwT,EAAAua,EAAA,OACG,CAEHva,EAAAua,EADAjuB,OAAAgxD,EAAA,OAAAhxD,CAAAixD,EAAA,EAAAC,KAAAnB,GAAA9hC,EAAA/tB,SAGA,OAAAF,OAAAgvD,EAAA,aAAAhvD,CAAA0T,EAAApT,IAOA2uD,EAAA1vD,UAAA4xD,kBAAA,SAAA5O,GACA,OAAAljD,KAAAolD,aAAAthD,IAAA9D,KAAAmlD,YACoB,EADpB,GASAyK,EAAA1vD,UAAAmwD,iBAAA,WACA,IAAA7hD,EAAA,EACA,MAAA06B,KACA,UAAAviC,KAAA3G,KAAAglD,QACA9b,EAAA16B,KAAA7H,EAAA,IAAA3G,KAAAglD,QAAAr+C,GAEA,OAAAuiC,EAAA90B,KAAA,MAOAw7C,EAAA1vD,UAAA6xD,qBAAA,SAAArB,EAAAxN,EAAAv1B,GAEA,IAAAC,EAAA5tB,KAAAwwD,cAKA,GAJA5iC,IACAA,EAAA5tB,KAAAywD,yBAAA9iC,IAGAC,EAAAgjC,iBAAA/vD,QAAA6vD,EAAA,GACA,OAGA,GAAAxN,GAAAljD,KAAAolD,aAAAthD,IAAA9D,KAAAmlD,cACAjC,EAAA,GAGA,MAAA2N,EAAAjjC,EAAAonB,cAAA0b,EAAA,IACA,IAAAI,EAAAljC,EAAAmjC,mBAAAL,EAAA1wD,KAAAkwD,YACAhiC,EAAA8iC,EAAA,QAAAC,OACArjC,EAAAsjC,YAAAR,EAAA,IAAA1wD,KAAAmxD,SAEA,MAAAlB,EAAAjwD,KAAAgwD,QACA,IAAAC,IACA/hC,EAAA8iC,EAAA,QAAAI,OAAAljC,EAAA+hC,EAAAjwD,KAAAmxD,SACAL,EAAAnwD,OAAAwvD,EAAA,OAAAxvD,CAAAmwD,EAAAD,EAAAZ,EAAAa,IAGA,GAAA5N,IACAh1B,EAAA8iC,EAAA,QAAAgB,MAAA9jC,EAAAg1B,EAAAljD,KAAAmxD,UAGA,MAAAnL,GACAxR,QAAA,MACAC,QAAA6c,EAAA,EACA5c,QAAA,SACA/C,OAAA,YACA4C,aAAA,GAIA,OAFA5zC,OAAAmP,EAAA,OAAAnP,CAAAqlD,EAAAhmD,KAAAglD,SAEAhlD,KAAAomD,eAAAsK,EAAAxiC,EAAA4iC,EACA5N,EAAAv1B,EAAAq4B,IAQA4J,EAAA1vD,UAAA8xC,aAAA,SAAA/wC,GACAN,OAAAmP,EAAA,OAAAnP,CAAAX,KAAAglD,QAAA/jD,GACAjB,KAAAklD,aACAllD,KAAAowD,OAAApwD,KAAAqwD,qBAOAT,EAAA1vD,UAAAglD,WAAA,WACA,MAAAuC,EAAAznD,KAAAglD,QAAA,SAAAsM,EAAA,EACAtxD,KAAAilD,KAAAgN,EAAA,QAAAvK,gBAAAD,EAAA,WAEAphD,EAAA,4FCrVA,QAAAC,EAAA,QACAA,EAAA,QACAA,EAAA,wDA6BA,IAAMC,EAAU,SAAS2rD,EAAUC,GAKjCnyD,KAAKoyD,SAAWD,EAMhBnyD,KAAKqyD,QAAUH,EAASI,SAAS9zC,UAAU,EAAG0zC,EAASI,SAASzxD,OAAS,GAMzEb,KAAKuyD,QAAUL,EAASM,SAMxBxyD,KAAKyyD,MAAQP,EAASQ,KAAOtiC,SAAS8hC,EAASQ,KAAM,SAAM5uD,EAM3D9D,KAAK2yD,MAAQT,EAASU,SAMtB5yD,KAAK6yD,WAAaj1C,UAAUk1C,kBAAkBZ,EAASa,QAMvD/yD,KAAKgzD,UAAYp1C,UAAUk1C,kBAAkBZ,EAASL,OAQxDtrD,EAAQ0sD,aAAe,SAASd,EAASlyB,GACvC,IACEkyB,EAAQc,aAAa,KAAM,GAAIhzB,GAC/B,MAAO3E,MAYX/0B,EAAQrG,UAAUgzD,QAAU,WAC1B,OAAOlzD,KAAK2yD,OASdpsD,EAAQrG,UAAUizD,aAAe,WAC/B,IAAMC,KAEFpzD,KAAKqyD,SACPe,EAAIvsD,KAAK7G,KAAKqyD,QAAS,MAGrBryD,KAAKuyD,SAA4B,SAAjBvyD,KAAKqyD,WACvBe,EAAIvsD,KAAK,MAETusD,EAAIvsD,KAAK7G,KAAKuyD,cAEKzuD,IAAf9D,KAAKyyD,OACPW,EAAIvsD,KAAK,IAAKwsD,OAAOrzD,KAAKyyD,SAI1BzyD,KAAK2yD,QACH3yD,KAAKuyD,SAAoC,MAAzBvyD,KAAK2yD,MAAM72C,OAAO,IACpCs3C,EAAIvsD,KAAK,KAEXusD,EAAIvsD,KAAK7G,KAAK2yD,QAGhB,IAAMW,EAAmB11C,UAAU21C,kBAAkBvzD,KAAK6yD,YACtDS,EAAiBzyD,OAAS,GAC5BuyD,EAAIvsD,KAAK,IAAKysD,GAGhB,IAAME,EAAkB51C,UAAU21C,kBAAkBvzD,KAAKgzD,WAIzD,OAHIQ,EAAgB3yD,OAAS,GAC3BuyD,EAAIvsD,KAAK,IAAK2sD,GAETJ,EAAIh/C,KAAK,KAUlB7N,EAAQrG,UAAU89B,SAAW,SAASr3B,GACpC,OAAOA,KAAO3G,KAAK6yD,YAUrBtsD,EAAQrG,UAAUuzD,iBAAmB,SAAS9sD,GAC5C,OAAOA,KAAO3G,KAAKgzD,WAUrBzsD,EAAQrG,UAAUs6C,SAAW,SAAS7zC,GACpC,OAAO3G,KAAK6yD,WAAWlsD,IAUzBJ,EAAQrG,UAAUwzD,iBAAmB,SAAS/sD,GAC5C,OAAO3G,KAAKgzD,UAAUrsD,IAWxBJ,EAAQrG,UAAUyzD,cAAgB,SAAShtD,GACzC,IAAMuE,EAAQlL,KAAKw6C,SAAS7zC,GAC5B,QAAc7C,IAAVoH,EAAJ,CAGA7C,UAAYi3B,aAAap0B,GACzB,IAAM0oD,EAAaxjC,SAASllB,EAAO,IACnC,OAAQ6kB,MAAM6jC,QAAe9vD,EAAY8vD,IAY3CrtD,EAAQrG,UAAU2zD,gBAAkB,SAASltD,GAC3C,IAAMuE,EAAQlL,KAAKw6C,SAAS7zC,GAC5B,QAAc7C,IAAVoH,EAAJ,CAGA7C,UAAYi3B,aAAap0B,GACzB,IAAM4oD,EAAetyC,WAAWtW,GAChC,OAAO6kB,MAAM+jC,QAAgBhwD,EAAYgwD,IAW3CvtD,EAAQrG,UAAU6zD,sBAAwB,SAASptD,GACjD,IAAMuE,EAAQlL,KAAK0zD,iBAAiB/sD,GACpC,QAAc7C,IAAVoH,EAAJ,CAGA7C,UAAYi3B,aAAap0B,GACzB,IAAM0oD,EAAaxjC,SAASllB,EAAO,IACnC,OAAQ6kB,MAAM6jC,QAAe9vD,EAAY8vD,IAS3CrtD,EAAQrG,UAAUi6C,aAAe,WAC/B,IAAM5oC,KACN,IAAK,IAAM5K,KAAO3G,KAAK6yD,WACrBthD,EAAK1K,KAAKF,GAEZ,OAAO4K,GASThL,EAAQrG,UAAU8zD,qBAAuB,WACvC,IAAMziD,KACN,IAAK,IAAM5K,KAAO3G,KAAKgzD,UACrBzhD,EAAK1K,KAAKF,GAEZ,OAAO4K,GAWThL,EAAQrG,UAAU+zD,uBAAyB,SAAS9mB,GAClD,IAAM57B,KACN,IAAK,IAAM5K,KAAO3G,KAAK6yD,WACM,GAAvBlsD,EAAI8a,QAAQ0rB,IACd57B,EAAK1K,KAAKF,GAGd,OAAO4K,GAWThL,EAAQrG,UAAUg0D,+BAAiC,SAAS/mB,GAC1D,IAAM57B,KACN,IAAK,IAAM5K,KAAO3G,KAAKgzD,UACM,GAAvBrsD,EAAI8a,QAAQ0rB,IACd57B,EAAK1K,KAAKF,GAGd,OAAO4K,GASThL,EAAQrG,UAAU8xC,aAAe,SAAS/wC,GACxC,IAAK,IAAM0F,KAAO1F,EAChBjB,KAAK6yD,WAAWlsD,GAAO1F,EAAO0F,IAUlCJ,EAAQrG,UAAUi0D,qBAAuB,SAASlzD,GAChD,IAAK,IAAM0F,KAAO1F,EAChBjB,KAAKgzD,UAAUrsD,GAAO1F,EAAO0F,IAUjCJ,EAAQrG,UAAUo2C,YAAc,SAAS3vC,UAChC3G,KAAK6yD,WAAWlsD,IASzBJ,EAAQrG,UAAUk0D,oBAAsB,SAASztD,UACxC3G,KAAKgzD,UAAUrsD,IAQxBJ,EAAQrG,UAAUm0D,QAAU,WAC1B9tD,EAAQ0sD,aAAajzD,KAAKoyD,SAAUpyD,KAAKmzD,iBAS3C5sD,EAAQrG,UAAUo0D,QAAU,SAASC,GACnCv0D,KAAK2yD,MAAQ4B,IAYfhuD,EAAQiuD,gBAAkB,SAASlrD,EAAY1B,GAC7C,IAAMuqD,EAAUvqD,EAAQuqD,QAClB/qD,EAAU,IAAIb,EAAQqB,EAAQsqD,SAAUtqD,EAAQuqD,SAElDsC,EAAUrtD,EAAQ+rD,eActB,OAbA7pD,EAAWsJ,OAAO,WAChB,IAAM8hD,EAASttD,EAAQ+rD,eACnBsB,IAAYC,GACdprD,EAAWqrD,WAAW,WACpBF,EAAUC,OACM5wD,IAAZquD,QAAkDruD,IAAzBquD,EAAQc,cACnC1sD,EAAQ0sD,aAAad,EAASuC,GAEhCprD,EAAWs2B,WAAW,0BAKrBx4B,sCAcTb,EAAQquD,aAAe,SAASC,GAI9BA,EAAA,KAA4B,WA0D1B,OArDEC,OAJqD,WAKnD,MAAO,IAMTjD,KAXqD,SAWhDkD,GACH,YAAoBjxD,IAAbixD,EAAyB/0D,KAAO,IAKzCg1D,KAjBqD,WAkBnD,MAAO,IAMTT,KAxBqD,SAwBhDQ,GACH,YAAoBjxD,IAAbixD,EAAyB/0D,KAAO,IAKzC0yD,KA9BqD,WA+BnD,OAAO,GAKTJ,SApCqD,WAqCnD,MAAO,IAETtjD,QAvCqD,aA8CrD+jD,OA9CqD,SA8C9CkC,EAAYC,GACjB,YAAsBpxD,IAAfmxD,EAA2Bj1D,SAMpCqU,IArDqD,SAqDjD8gD,GACF,MAAO,uCAaf5uD,EAAQW,OAASC,QAAQD,OAAO,oBACjB8E,QAAQ,eAAgBzF,EAAQiuD,iBAC/CntD,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,+UCref6E,EAAA9E,EAAA,uBAKA,IAAMC,aAkBJ,SAAAA,EAAY+G,gGAASs1B,CAAA5iC,KAAAuG,GAiBnBvG,KAAKo1D,UAA+B,IAApB9nD,EAAQ+nD,QAQxBr1D,KAAKs1D,UAA+B,IAApBhoD,EAAQ8kC,QAcxBpyC,KAAK6oC,WAAav7B,EAAQu7B,YAAc,KAOxC7oC,KAAKu1D,IAAMjoD,EAAQ+kC,GASnBryC,KAAKw1D,qBAAuBloD,EAAQmoD,oBAOpCz1D,KAAK01D,eAAiBpoD,EAAQ6vB,cAO9Bn9B,KAAK21D,eAAiBroD,EAAQgwB,cAO9Bt9B,KAAK41D,MAAQtoD,EAAQ/F,KA9FnB,OAAAohC,EAAApiC,IAAAI,IAAA,gBAAAuE,MAAA,WA8IF,OAAOlL,KAAK6oC,cA9IVliC,IAAA,gBAAAuE,MAAA,SAqJU29B,GACZ7oC,KAAK6oC,WAAaA,KAtJhBliC,IAAA,UAAAsyB,IAAA,WA0GF,OAAOj5B,KAAKo1D,UA1GV1vC,IAAA,SAiHQ2vC,GACVr1D,KAAKo1D,SAAWC,KAlHd1uD,IAAA,UAAAsyB,IAAA,WA0HF,OAAOj5B,KAAKs1D,UA1HV5vC,IAAA,SAiIQ0sB,GACVpyC,KAAKs1D,SAAWljB,KAlIdzrC,IAAA,KAAAsyB,IAAA,WA8JF,OAAOj5B,KAAKu1D,OA9JV5uD,IAAA,sBAAAsyB,IAAA,WAsKF,OAAOj5B,KAAKw1D,wBAtKV7uD,IAAA,gBAAAsyB,IAAA,WA8KF,OAAOj5B,KAAK01D,kBA9KV/uD,IAAA,gBAAAsyB,IAAA,WAsLF,OAAOj5B,KAAK21D,kBAtLVhvD,IAAA,OAAAsyB,IAAA,WA8LF,OAAOj5B,KAAK41D,SA9LVjvD,IAAA,YAAAsyB,IAAA,WA4MF,OAAO,KA5MLtyB,IAAA,yBAAAsyB,IAAA,WAqNF,OAA8B,OAAvBj5B,KAAKm9B,eAAiD,OAAvBn9B,KAAKs9B,kBArNzC/2B,eA0NSA,gGClOfsvD,EAAAvvD,EAAA,KAcA,MAAAwvD,EAAA,SAAAzoD,GAEA,MAAAC,EAAAD,MAMArN,KAAA+1D,MAAAzoD,EAAA+Q,KAMAre,KAAAg2D,UAAA1oD,EAAA2oD,SAMAj2D,KAAAk2D,gBAAA5oD,EAAA6oD,eAMAn2D,KAAAo2D,OAAA9oD,EAAA0kD,MAMAhyD,KAAAq2D,MAAA/oD,EAAAiR,KAMAve,KAAAs2D,WAAAhpD,EAAAipD,UAMAv2D,KAAAw2D,cAAAlpD,EAAAmpD,aAMAz2D,KAAA02D,WAAA5yD,IAAAwJ,EAAAyT,KAAAzT,EAAAyT,KACA,IAAA41C,EAAA,SAAc/1C,MAAAk1C,EAAAc,sBAMd52D,KAAA62D,eAAA/yD,IAAAwJ,EAAAwpD,SAAAxpD,EAAAwpD,SAAAp1C,KAAAq1C,GAAA,EAMA/2D,KAAAg3D,gBAAAlzD,IAAAwJ,EAAAsL,UAAAtL,EAAAsL,UAAAi9C,EAAA,EAAAj7C,MAMA5a,KAAAi3D,YAAA3pD,EAAA4pD,SAMAl3D,KAAAm3D,aAAArzD,IAAAwJ,EAAA0T,OAAA1T,EAAA0T,OAAA,KAMAhhB,KAAAo3D,cAAAtzD,IAAAwJ,EAAA+pD,QAAA/pD,EAAA+pD,QAAA,EAMAr3D,KAAAs3D,cAAAxzD,IAAAwJ,EAAAiqD,QAAAjqD,EAAAiqD,QAAA,EAMAv3D,KAAAw3D,gBAAAlqD,EAAAmqD,eAAAnqD,EAAAmqD,eAAA,KAMAz3D,KAAA03D,kBAAApqD,EAAAqqD,iBAAArqD,EAAAqqD,iBAAA,KAMA33D,KAAA43D,cAAA9zD,IAAAwJ,EAAAuqD,QAAA,KAAAvqD,EAAAuqD,SAWA/B,EAAAc,oBAAA,OAQAd,EAAA51D,UAAA0hB,MAAA,WACA,WAAAk0C,GACAz3C,KAAAre,KAAAoe,UACAxF,UAAA5Y,KAAA83D,eACAhB,SAAA92D,KAAA+3D,cACAb,SAAAl3D,KAAAg4D,cACA/B,SAAAj2D,KAAAi4D,cACA9B,eAAAn2D,KAAAk4D,oBACAlG,MAAAhyD,KAAAm4D,WACA55C,KAAAve,KAAA0c,UACA65C,UAAAv2D,KAAAo4D,eACA3B,aAAAz2D,KAAAq4D,kBACAt3C,KAAA/gB,KAAAoc,UAAApc,KAAAoc,UAAAwF,aAAA9d,EACAkd,OAAAhhB,KAAAwc,YAAAxc,KAAAwc,YAAAoF,aAAA9d,EACAuzD,QAAAr3D,KAAAs4D,aACAf,QAAAv3D,KAAAu4D,aACAd,eAAAz3D,KAAAw4D,oBAAAx4D,KAAAw4D,oBAAA52C,aAAA9d,EACA6zD,iBAAA33D,KAAAy4D,sBAAAz4D,KAAAy4D,sBAAA72C,aAAA9d,KAUAgyD,EAAA51D,UAAA83D,YAAA,WACA,OAAAh4D,KAAAi3D,WASAnB,EAAA51D,UAAAke,QAAA,WACA,OAAApe,KAAA+1D,OASAD,EAAA51D,UAAA63D,YAAA,WACA,OAAA/3D,KAAA62D,WASAf,EAAA51D,UAAA43D,aAAA,WACA,OAAA93D,KAAAg3D,YASAlB,EAAA51D,UAAAo4D,WAAA,WACA,OAAAt4D,KAAAo3D,UASAtB,EAAA51D,UAAAq4D,WAAA,WACA,OAAAv4D,KAAAs3D,UASAxB,EAAA51D,UAAAkc,QAAA,WACA,OAAApc,KAAA02D,OASAZ,EAAA51D,UAAAg4D,kBAAA,WACA,OAAAl4D,KAAAk2D,iBASAJ,EAAA51D,UAAA+3D,YAAA,WACA,OAAAj4D,KAAAg2D,WASAF,EAAA51D,UAAAi4D,SAAA,WACA,OAAAn4D,KAAAo2D,QASAN,EAAA51D,UAAAsc,UAAA,WACA,OAAAxc,KAAAm3D,SASArB,EAAA51D,UAAAwc,QAAA,WACA,OAAA1c,KAAAq2D,OASAP,EAAA51D,UAAAk4D,aAAA,WACA,OAAAp4D,KAAAs2D,YASAR,EAAA51D,UAAAm4D,gBAAA,WACA,OAAAr4D,KAAAw2D,eASAV,EAAA51D,UAAAs4D,kBAAA,WACA,OAAAx4D,KAAAw3D,iBASA1B,EAAA51D,UAAAu4D,oBAAA,WACA,OAAAz4D,KAAA03D,mBASA5B,EAAA51D,UAAAw4D,WAAA,WACA,OAAA14D,KAAA43D,UAUA9B,EAAA51D,UAAAy4D,YAAA,SAAAzB,GACAl3D,KAAAi3D,UAAAC,GAUApB,EAAA51D,UAAA04D,QAAA,SAAAv6C,GACAre,KAAA+1D,MAAA13C,GAUAy3C,EAAA51D,UAAA24D,YAAA,SAAA/B,GACA92D,KAAA62D,UAAAC,GAUAhB,EAAA51D,UAAA44D,WAAA,SAAAzB,GACAr3D,KAAAo3D,SAAAC,GAUAvB,EAAA51D,UAAA64D,WAAA,SAAAxB,GACAv3D,KAAAs3D,SAAAC,GAUAzB,EAAA51D,UAAA84D,aAAA,SAAApgD,GACA5Y,KAAAg3D,WAAAp+C,GAUAk9C,EAAA51D,UAAA+4D,QAAA,SAAAl4C,GACA/gB,KAAA02D,MAAA31C,GAUA+0C,EAAA51D,UAAAg5D,YAAA,SAAAjD,GACAj2D,KAAAg2D,UAAAC,GAUAH,EAAA51D,UAAAi5D,SAAA,SAAAnH,GACAhyD,KAAAo2D,OAAApE,GAUA8D,EAAA51D,UAAAk5D,UAAA,SAAAp4C,GACAhhB,KAAAm3D,QAAAn2C,GAUA80C,EAAA51D,UAAAm5D,QAAA,SAAA96C,GACAve,KAAAq2D,MAAA93C,GAUAu3C,EAAA51D,UAAAo5D,aAAA,SAAA/C,GACAv2D,KAAAs2D,WAAAC,GAUAT,EAAA51D,UAAAq5D,gBAAA,SAAA9C,GACAz2D,KAAAw2D,cAAAC,GAUAX,EAAA51D,UAAAs5D,kBAAA,SAAAz4C,GACA/gB,KAAAw3D,gBAAAz2C,GAUA+0C,EAAA51D,UAAAu5D,oBAAA,SAAAz4C,GACAhhB,KAAA03D,kBAAA12C,GAUA80C,EAAA51D,UAAAw5D,WAAA,SAAA7B,GACA73D,KAAA43D,SAAAC,GAEAxxD,EAAA,2MCxfAszD,EAAArzD,EAAA,GA+BA,MAAA6/B,EAAA,SAAA94B,GACA,MAAAC,EACAD,MAEAu7C,EAAA,EAAAroD,KAAAP,KAAAsN,GAMAtN,KAAA45D,cAAA91D,IAAAwJ,EAAAmvC,SAAAnvC,EAAAmvC,QAMAz8C,KAAA65D,YAAA/1D,IAAAwJ,EAAAuxC,OAAAvxC,EAAAuxC,MAMA7+C,KAAA85D,iBAAAh2D,IAAAwJ,EAAAovC,YACApvC,EAAAovC,WAMA18C,KAAA+5D,mBAAAj2D,IAAAwJ,EAAAkvC,cACAlvC,EAAAkvC,aAKAx8C,KAAA0sC,eAAAp/B,EAAAo/B,eACAp/B,EAAAo/B,eAAAvG,EAAA+U,gBAMAl7C,KAAA69C,UAAA/5C,IAAAwJ,EAAAuwC,MACAvwC,EAAAuwC,MAIAl9C,OAAAkN,EAAA,SAAAlN,CAAAwlC,EAAAyiB,EAAA,GAQAziB,EAAA+U,gBAAA0N,EAAA,EAAAjc,MACA,8EAUAxG,EAAAjmC,UAAA85D,gBAAA,SAAA7rD,EAAAC,GAEA,MAAA8Q,EAAAy6C,EAAA,QAAAlqD,mBACAzP,KAAAi6D,oBAAA9rD,EAAAC,EAAApO,MACA,GAAAkf,EAAA,CACA,MAAAC,EAAA,IAAA+6C,EAAA,cAEA,OADA/6C,EAAA2V,eAAA5V,GACAC,IAaAgnB,EAAAjmC,UAAAi6D,kBAAA,SAAAhsD,EAAAC,GAEA,MAAA6R,EAAA05C,EAAA,QAAAlqD,mBACAzP,KAAAo6D,sBAAAjsD,EAAAC,EAAApO,MACA,GAAAigB,EAAA,CACA,MAAAgW,EAAA,IAAAkZ,EAAA,cAEA,OADAlZ,EAAAoC,YAAApY,GACAgW,IAYAkQ,EAAAjmC,UAAAm6D,mBAAA,SAAAlsD,EAAAC,GACAurD,EAAA,QAAAtqB,UAAArvC,KAAAs6D,qBAAAnsD,EAAAC,EAAApO,OASAmmC,EAAAjmC,UAAAq6D,qBAAA,SAAApsD,EAAAC,GACAurD,EAAA,QAAAtqB,UAAArvC,KAAAw6D,uBACArsD,EAAAC,EAAApO,OAUAmmC,EAAAjmC,UAAAu6D,WAAA,SAAAtsD,EAAAC,GACA,OAAAurD,EAAA,QAAAlqD,iBAAA,MACAzP,KAAA06D,iBAAAvsD,EAAAC,EAAApO,OAUAmmC,EAAAjmC,UAAAy6D,aAAA,SAAAxsD,EAAAC,GACA,OAAAurD,EAAA,QAAAlqD,iBAAA,MACAzP,KAAA46D,kBAAAzsD,EAAAC,EAAApO,OAUAmmC,EAAAjmC,UAAA26D,kBAAA,SAAA1sD,EAAAC,GACA,OAAAurD,EAAA,QAAAlqD,iBAAA,MACAzP,KAAAowC,2BAAAjiC,EAAAC,EAAApO,OAUAmmC,EAAAjmC,UAAA46D,uBAAA,SAAA3sD,EAAAC,GACA,OAAAurD,EAAA,QAAAlqD,iBAAA,MACAzP,KAAA+vC,mCACA5hC,EAAAC,EAAApO,OASAmmC,EAAAjmC,UAAA66D,gBAAA,SAAA5sD,EAAAC,GAEA,MAAA6tC,EAAA0d,EAAA,QAAAlqD,qBAAA3L,EACA9D,KAAA6wC,aAAA1iC,EAAAC,EAAApO,MACA,GAAAi8C,EAAA,CAEA7tC,IAAAvN,OAAA,GACAgG,KAAAo1C,KAUA9V,EAAAjmC,UAAA86D,gBAAA,SAAA7sD,EAAAC,GAEA,MAAA6tC,EAAA0d,EAAA,QAAAlqD,qBAAA3L,EACA9D,KAAA6wC,aAAA1iC,EAAAC,EAAApO,MACA,GAAAi8C,EAAA,CAEA7tC,IAAAvN,OAAA,GACA,GAAAo7C,IAWA9V,EAAAjmC,UAAA+6D,aAAA,SAAA9sD,EAAAC,GAEA,MAAA+hC,EAAAwpB,EAAA,QAAAlqD,iBAAA,MACAzP,KAAAk7D,iBAAA/sD,EAAAC,EAAApO,MACA,GAAAmwC,KAAA,IACA,MAAAtwB,EAAA,IAAAs7C,EAAA,cACA18C,EAAA0xB,EAAA,GACAlxB,GAAAR,EAAA5d,QACA,IAAA2N,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAA0hC,EAAAtvC,OAA4C2N,EAAAC,IAAQD,EACpD7N,OAAAsO,EAAA,OAAAtO,CAAA8d,EAAA0xB,EAAA3hC,IACAyQ,EAAApY,KAAA4X,EAAA5d,QAIA,OAFAgf,EAAAhB,mBACAu8C,EAAA,QAAA1tC,IAAAjP,EAAAQ,GACAY,IAaAsmB,EAAAjmC,UAAAm7D,WAAA,SAAAltD,EAAAC,GAEA,MAAAqQ,EAAAk7C,EAAA,QAAAlqD,iBAAA,MACAzP,KAAAs7D,eAAAntD,EAAAC,EAAApO,MACA,GAAAye,EAAA,CACA,MAAAE,EAAA,IAAA48C,EAAA,cAEA,OADA58C,EAAAE,mBAAAu8C,EAAA,QAAA1tC,IAAAjP,GACAE,IAaAwnB,EAAAjmC,UAAAs7D,cAAA,SAAArtD,EAAAC,GAEA,MAAAqQ,EAAAk7C,EAAA,QAAAlqD,iBAAA,MACAzP,KAAAy7D,kBAAAttD,EAAAC,EAAApO,MACA,OAAAW,OAAA+xB,EAAA,eAAA/xB,CAAA8d,EAAA,MACAA,EAAA,MAAAA,EAAA,MACAA,EAAA,QAUA0nB,EAAAjmC,UAAAw7D,aAAA,SAAAvtD,EAAAC,GACA,IAAAihB,EAAAsqC,EAAA,QAAApqC,kBAAAphB,GAAA,GACA,MAAAwtD,EAAA,6CAEAl9C,KACA,IAAAiR,EACA,KAAAA,EAAAisC,EAAAhsC,KAAAN,IACA5Q,EAAA5X,KAAA2a,WAAAkO,EAAA,KACAL,IAAAusB,OAAAlsB,EAAA,GAAA7uB,QAEA,QAAAwuB,EACA,OAEA,MACA+rB,EADAhtC,EAAA,GACA,QACA,IAAAitC,EAAA,MACA,GAAAD,EAAA,CAEAC,EADA16C,OAAAi7D,EAAA,IAAAj7D,CAAAy6C,GACAI,qBAEA,WAAAH,EAAA,CACA,IAAA7sC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAgQ,EAAA5d,OAA4C2N,EAAAC,EAAQD,GAAA,GACpD,MAAAyW,EAAAxG,EAAAjQ,GACAwW,EAAAvG,EAAAjQ,EAAA,GACAiQ,EAAAjQ,GAAAwW,EACAvG,EAAAjQ,EAAA,GAAAyW,GAGA,MAAAR,EAAAhG,EAAA5d,OAIA,OAHA,GAAA4jB,GACAhG,EAAA5X,KAAA,GAEA,IAAA4d,EAGAhG,OAHA,GAaA0nB,EAAAjmC,UAAA27D,iBAAA,SAAA1tD,EAAAC,GACA,MAAAihB,EAAAsqC,EAAA,QAAApqC,kBAAAphB,GAAA,GAAAa,QAAA,iBACAlD,EAAAsC,EAAA,GACAgtC,EAAAtvC,EAAA,QACAgwD,EAAAhwD,EAAA,aACA,IAAAuvC,EAAA,MACA,GAAAD,EAAA,CAEAC,EADA16C,OAAAi7D,EAAA,IAAAj7D,CAAAy6C,GACAI,qBAEA,MAAAG,EAAAtsB,EAAA7Z,MAAA,OAEA,IAaAwP,EAAAC,EAAAy2B,EAbAqgB,EAAA,EACA5tD,EAAA2/B,aAAA,gBACAiuB,EAAAC,EAAA,EAAA7rC,6BACAhiB,EAAA2/B,aAAA,iBACG3/B,EAAA2/B,aAAA,aACHiuB,EAAAC,EAAA,EAAA7rC,6BACAhiB,EAAA2/B,aAAA,cACG3/B,EAAAmwC,WAAAxQ,aAAA,gBACHiuB,EAAAC,EAAA,EAAA7rC,6BACAhiB,EAAAmwC,WAAAxQ,aAAA,iBACGguB,IACHC,EAAAC,EAAA,EAAA7rC,6BAAA2rC,IAGA,MAAAr9C,KACA,QAAAjQ,EAAA,EAAAC,EAAAktC,EAAA96C,OAAqC2N,EAAAC,EAAQD,GAAAutD,EAC7C/2C,EAAAxD,WAAAm6B,EAAAntC,IACAyW,EAAAzD,WAAAm6B,EAAAntC,EAAA,IACAktC,EAAA,IAAAqgB,EAAAv6C,WAAAm6B,EAAAntC,EAAA,MACA,OAAA6sC,EAAAO,OAAA,KACAn9B,EAAA5X,KAAAme,EAAAC,EAAAy2B,GAEAj9B,EAAA5X,KAAAoe,EAAAD,EAAA02B,GAGA,OAAAj9B,GASA0nB,EAAAjmC,UAAA6vC,oCACAO,8BACA2rB,IAAAtC,EAAA,QAAA9sB,aAAA1G,EAAAjmC,UAAAw7D,cACAQ,QAAAvC,EAAA,QAAA9sB,aAAA1G,EAAAjmC,UAAA27D,oBAUA11B,EAAAjmC,UAAAkwC,4BACAE,8BACA6rB,SAAAh2B,EAAAjmC,UAAA66D,gBACAqB,SAAAj2B,EAAAjmC,UAAA86D,kBAUA70B,EAAAjmC,UAAA6tC,mBACAuC,8BACA31B,MAAAg/C,EAAA,QAAA9sB,aAAA+b,EAAA,EAAA1oD,UAAAquC,WACAvzB,WAAA2+C,EAAA,QAAA9sB,aACA+b,EAAA,EAAA1oD,UAAAyuC,gBACAn0B,WAAAm/C,EAAA,QAAA9sB,aACA+b,EAAA,EAAA1oD,UAAAyvC,gBACA50B,gBAAA4+C,EAAA,QAAA9sB,aACA+b,EAAA,EAAA1oD,UAAA4uC,qBACAvmB,WAAAoxC,EAAA,QAAA9sB,aACA+b,EAAA,EAAA1oD,UAAA8vC,gBACAn1B,QAAA8+C,EAAA,QAAA9sB,aAAA+b,EAAA,EAAA1oD,UAAAgwC,aACAj1B,aAAA0+C,EAAA,QAAA9sB,aACA+b,EAAA,EAAA1oD,UAAA+uC,kBACA6Q,QAAA6Z,EAAA,QAAA9sB,aAAA1G,EAAAjmC,UAAA+6D,cACAlb,aAAA4Z,EAAA,QAAA9sB,aACA1G,EAAAjmC,UAAAi6D,mBACAva,MAAA+Z,EAAA,QAAA9sB,aAAA1G,EAAAjmC,UAAAm7D,YACAxb,WAAA8Z,EAAA,QAAA9sB,aACA1G,EAAAjmC,UAAA85D,iBACAha,SAAA2Z,EAAA,QAAA9sB,aAAA1G,EAAAjmC,UAAAs7D,iBAUAr1B,EAAAjmC,UAAA+5D,qBACA3pB,8BACA2P,YAAA0Z,EAAA,QAAAvqD,gBACA+2B,EAAAjmC,UAAAm6D,oBACAgC,aAAA1C,EAAA,QAAAvqD,gBACA+2B,EAAAjmC,UAAAm6D,sBAUAl0B,EAAAjmC,UAAAk6D,uBACA9pB,8BACA6P,cAAAwZ,EAAA,QAAAvqD,gBACA+2B,EAAAjmC,UAAAq6D,sBACA+B,eAAA3C,EAAA,QAAAvqD,gBACA+2B,EAAAjmC,UAAAq6D,wBAUAp0B,EAAAjmC,UAAAo6D,sBACAhqB,8BACA91B,WAAAm/C,EAAA,QAAAvqD,gBACAw5C,EAAA,EAAA1oD,UAAAyvC,gBACAiQ,MAAA+Z,EAAA,QAAAvqD,gBAAA+2B,EAAAjmC,UAAAm7D,cAUAl1B,EAAAjmC,UAAAs6D,wBACAlqB,8BACAz1B,QAAA8+C,EAAA,QAAAvqD,gBAAAw5C,EAAA,EAAA1oD,UAAAgwC,aACA4P,QAAA6Z,EAAA,QAAAvqD,gBAAA+2B,EAAAjmC,UAAA+6D,gBAUA90B,EAAAjmC,UAAAg7D,kBACA5qB,8BACA8N,QAAAub,EAAA,QAAA9sB,aAAA1G,EAAAjmC,UAAAu6D,cAUAt0B,EAAAjmC,UAAAo7D,gBACAhrB,8BACAplB,SAAAyuC,EAAA,QAAA9sB,aAAA1G,EAAAjmC,UAAAy6D,gBAUAx0B,EAAAjmC,UAAAu7D,mBACAnrB,8BACA8P,YAAAuZ,EAAA,QAAAvqD,gBACA+2B,EAAAjmC,UAAA27D,kBACAxb,YAAAsZ,EAAA,QAAAvqD,gBACA+2B,EAAAjmC,UAAA27D,oBAUA11B,EAAAjmC,UAAAw6D,kBACApqB,8BACAisB,aAAA5C,EAAA,QAAA9sB,aACA1G,EAAAjmC,UAAA26D,qBAUA10B,EAAAjmC,UAAA06D,mBACAtqB,8BACAksB,kBAAA7C,EAAA,QAAA9sB,aACA1G,EAAAjmC,UAAA46D,0BAWA30B,EAAAjmC,UAAAu8D,UAAA,SAAAtuD,EAAAjD,EAAAkD,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACA4wD,EAAA7e,EAAA,IACA1vC,EAAAE,aAAA,eAAAquD,GACA,MAAAj7D,EAAAqK,EAAA,QACA,IAAAuvC,EAAA,MACA55C,IACA45C,EAAA16C,OAAAi7D,EAAA,IAAAj7D,CAAAc,GAAA+5C,sBAEA,MAAAl8B,EAAApU,EAAA2hB,iBACA,IAAA8uB,EAOA,GAJAA,EADA,OAAAN,EAAAO,OAAA,KACAt8B,EAAA,OAAAA,EAAA,GAEAA,EAAA,OAAAA,EAAA,GAEAu+B,EAAA,CAGAlC,GAAA,KADAr8B,EAAA,OAGA08C,EAAA,EAAAvrC,oBAAAtiB,EAAAwtC,IAWAxV,EAAAjmC,UAAA49C,WAAA,SAAAx+B,EAAA9d,EAAAm9C,GACA,IAAAtD,EAAA,MACA75C,IACA65C,EAAA16C,OAAAi7D,EAAA,IAAAj7D,CAAAa,GAAAg6C,sBAEA,IAAAG,EAAA,OAAAN,EAAAO,OAAA,KACAt8B,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACA,GAAAq/B,EAAA,CAGAhD,GAAA,KADAr8B,EAAA,OAIA,OAAAq8B,GAUAxV,EAAAjmC,UAAAy8D,cAAA,SAAAxuD,EAAAjD,EAAAkD,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACA4wD,EAAA7e,EAAA,IACA1vC,EAAAE,aAAA,eAAAquD,GACA,MAAAj7D,EAAAqK,EAAA,QAEAqhB,EAAAjiB,EAAA2hB,iBACApI,EAAA0I,EAAAtsB,OACA6hB,EAAA,IAAAliB,MAAAikB,GACA,IAAAnF,EACA,QAAA9Q,EAAA,EAAiBA,EAAAiW,IAASjW,EAC1B8Q,EAAA6N,EAAA3e,GACAkU,EAAAlU,GAAAxO,KAAA89C,WAAAx+B,EAAA7d,EAAAo8C,GAEAme,EAAA,EAAAvrC,oBAAAtiB,EAAAuU,EAAAtO,KAAA,OAUA+xB,EAAAjmC,UAAA8+C,YAAA,SAAA7wC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAw6D,EAAAtC,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,OACA/+B,EAAAwiB,YAAAsrC,GACAj8D,KAAAy8D,UAAAR,EAAAr6D,EAAAwM,IAQA+3B,EAAAuZ,uBACApP,8BACA8P,YAAAuZ,EAAA,QAAA3c,kBAAAgf,EAAA,EAAAvrC,qBACA4vB,YAAAsZ,EAAA,QAAA3c,kBAAAgf,EAAA,EAAAvrC,uBAUA0V,EAAAjmC,UAAAu/C,cAAA,SAAAtxC,EAAA5M,EAAA6M,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MACA46B,GAAA96B,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACAo4D,EAAA,QAAAvc,qBACMjvC,QAAWg4B,EAAAuZ,sBACjBia,EAAA,QAAAha,6BACAtjB,EACAjuB,GANA,6BAMApO,OAUAmmC,EAAAjmC,UAAAw+C,iBAAA,SAAAvwC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QACAY,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAy6D,EAAAvC,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,WACA/+B,EAAAwiB,YAAAurC,GACAl8D,KAAA28D,cAAAT,EAAAt6D,EAAAwM,IAWA+3B,EAAAjmC,UAAAi+C,mBAAA,SAAAjzC,EAAAkD,EAAAmuC,GACA,MAAAzwC,EAAAsC,IAAAvN,OAAA,GACAy9C,EAAAxyC,EAAAqC,KACAowC,EAAAzyC,EAAA,gBAIA,YAHAhI,IAAAy6C,IACAzyC,EAAA,oBAEA6tD,EAAA,QAAAhd,gBAAA2B,EAAApR,kBACAppC,IAAAy6C,EAAA,wBAUApY,EAAAjmC,UAAA89C,uBAAA,SAAA7vC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QAIA,GAHA,iBAAAqC,EAAAm/B,UAAA7rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,YAAA0M,EAAAm/B,UAAA,iBAAAn/B,EAAAm/B,SAAA,CACA,MAAA1tB,EAAAhe,EAAAq8C,iBACA0b,EAAA,QAAAvc,qBACOjvC,OAAA0vC,OAAAp8C,WACP0kC,EAAA+X,kBACAl+C,KAAAm+C,mBACAv+B,EAAAxR,OAAAtK,EAAA9D,WACG,eAAAmO,EAAAm/B,SAAA,CACH,MAAA8Q,EAAAub,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,WACA/+B,EAAAwiB,YAAAytB,GACAp+C,KAAAq+C,qBACAD,EAAAx8C,EAAAwM,KAWA+3B,EAAAjmC,UAAAu9C,wBAAA,SAAAtvC,EAAAvM,EAAAwM,GACA,MACA3M,EADA2M,IAAAvN,OAAA,GACA,QAIA,GAHA,sBAAAsN,EAAAm/B,UAAA7rC,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,eAAA0M,EAAAm/B,UACA,sBAAAn/B,EAAAm/B,SAAA,CACA,MAAA4uB,EAAAvC,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,WACA/+B,EAAAwiB,YAAAurC,GACAl8D,KAAA28D,cAAAT,EAAAt6D,EAAAwM,QACG,aAAAD,EAAAm/B,SAAA,CACH,MAAApiB,EAAAyuC,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,YACA/+B,EAAAwiB,YAAAzF,GACAlrB,KAAA49C,oBAAA1yB,EACAtpB,EAAAwM,KAWA+3B,EAAAjmC,UAAAo/C,4BAAA,SAAAnxC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QACA2wC,EAAA3wC,EAAA,QACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAwe,EAAAre,EAAAo2B,cACA2hC,EAAA,QAAAvc,qBAAgCjvC,OAAA0vC,OAAAp8C,UAAAg7C,WAChCtW,EAAAoZ,oCACAv/C,KAAA++C,mCAAA9+B,EACA7R,OAAAtK,EAAA9D,OAUAmmC,EAAAjmC,UAAAg/C,iBAAA,SAAA/wC,EAAAvM,EACAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAY,EAAAqK,EAAA,QACA+xC,EAAA/xC,EAAA,KACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAA0rB,EAAAvrB,EAAA0zB,YACAqkC,EAAA,QAAAvc,qBAAgCjvC,OAAA0vC,OAAAp8C,WAChC0kC,EAAAgZ,yBACAwa,EAAA,QAAAtc,sBAAA,eAAAlwB,EACA/e,OAAAtK,EAAA9D,OAUAmmC,EAAAjmC,UAAA0+C,6BAAA,SAAAzwC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAAsC,IAAAvN,OAAA,GACAg9C,EAAA/xC,EAAA,KACArK,EAAAqK,EAAA,QACA+yC,EAAA/yC,EAAA,MACArK,GACA0M,EAAAE,aAAA,UAAA5M,GAEA,MAAAyrB,EAAAtrB,EAAAiyB,iBACA8lC,EAAA,QAAAvc,qBAAgCjvC,OAAA0vC,OAAAp8C,UAAAo9C,SAChC1Y,EAAA2Y,qCACA9+C,KAAA++C,mCAAA7xB,EACA9e,OAAAtK,EAAA9D,OAUAmmC,EAAAjmC,UAAAs+C,WAAA,SAAArwC,EAAA2hC,EAAA1hC,GACA,MAAAqwC,EAAAkb,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,cACA/+B,EAAAwiB,YAAA8tB,GACAz+C,KAAA0+C,iBAAAD,EAAA3O,EAAA1hC,IAUA+3B,EAAAjmC,UAAAs/C,6BAAA,SAAArxC,EAAA0R,EAAAzR,GACA,MAAA4sB,EAAAh7B,KAAAs8C,uBACAz8B,EAAAzR,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAAg+C,uBAAAhjB,EAAAnb,EAAAzR,KAWA+3B,EAAAjmC,UAAAk/C,kBAAA,SAAAjxC,EAAAmR,EAAAlR,GACA,MAAA4sB,EAAA2+B,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,SACA/+B,EAAAwiB,YAAAqK,GACAh7B,KAAAg/C,YAAAhkB,EAAA1b,EAAAlR,IAUA+3B,EAAAjmC,UAAAm/C,8BAAA,SAAAlxC,EAAA4vC,EAAA3vC,GACA,MAAA4sB,EAAAh7B,KAAAs8C,uBAAAyB,EAAA3vC,GACA4sB,IACA7sB,EAAAwiB,YAAAqK,GACAh7B,KAAAy9C,wBAAAziB,EAAA+iB,EAAA3vC,KAWA+3B,EAAAjmC,UAAAm+C,qBAAA,SAAAlwC,EAAA0R,EAAAzR,GACA,MAAA4sB,EAAA2+B,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aAAA,gBACA/+B,EAAAwiB,YAAAqK,GACAh7B,KAAAg+C,uBAAAhjB,EAAAnb,EAAAzR,IAUA+3B,EAAAjmC,UAAA09C,oBAAA,SAAAzvC,EAAA4vC,EAAA3vC,GACA,MAAA4sB,EAAA2+B,EAAA,QAAAhd,gBAAAxuC,EAAA++B,aACA,qBACA/+B,EAAAwiB,YAAAqK,GACAh7B,KAAAy9C,wBAAAziB,EAAA+iB,EAAA3vC,IASA+3B,EAAAjmC,UAAA+8C,qBAAA,SAAA9uC,EAAAvM,EAAAwM,GACA,MAAAtC,EAAqDsC,IAAAvN,OAAA,GACrDmQ,EAAArQ,OAAAi8D,EAAA,OAAAj8D,IAAwBmL,GAExB,IAAAZ,EADA8F,EAAA7C,OAIAjD,EAFA1K,MAAAgd,QAAA5b,GACAkK,EAAAwxC,eACA38C,OAAAi7D,EAAA,gBAAAj7D,CACAiB,EAAAkK,EAAAyxC,kBAAAzxC,EAAAwxC,gBAEA17C,EAGAjB,OAAAqtC,EAAA,qBAAArtC,CAA6D,KAAAmL,GAE7D6tD,EAAA,QAAAvc,oBACA,EAAAjX,EAAAqX,sBACAx9C,KAAAs8C,wBAAApxC,GACAkD,OAAAtK,EAAA9D,OASAmmC,EAAAjmC,UAAA08C,oBAAA,SAAAzuC,EAAA3B,EAAA4B,GACA,MAAA6/B,EAAAzhC,EAAAqwC,QACA5O,GACA9/B,EAAAE,aAAA,MAAA4/B,GAEA,MAAAniC,EAAoCsC,IAAAvN,OAAA,GACpCkS,EAAAjH,EAAA,UACAxK,EAAAkL,EAAA4Z,kBACAta,EAAAgxC,cACAhxC,EAAAgxC,eACAhxC,EAAAgxC,YAAA/pC,OAEA,MAAAiH,EAAAxN,EAAAgP,gBACAjK,KACA8qB,KACA,UAAA11B,KAAAqT,EAAA,CACA,MAAA9O,EAAA8O,EAAArT,GACA,OAAAuE,IACAqG,EAAA1K,KAAAF,GACA01B,EAAAx1B,KAAAqE,GACAvE,GAAArF,GAAA4J,aAAA2xD,EAAA,QACAl2D,KAAAmF,EAAAgxC,YAAA/pC,KACAjH,EAAAgxC,YAAA/pC,GAAApM,GAAAgzD,EAAA,QAAA3c,kBACAh9C,KAAAi9C,qBAAAj9C,OAGA2G,KAAAmF,EAAAgxC,YAAA/pC,KACAjH,EAAAgxC,YAAA/pC,GAAApM,GAAAgzD,EAAA,QAAA3c,kBACAgf,EAAA,EAAAvrC,uBAKA,MAAAzf,EAAArQ,OAAAi8D,EAAA,OAAAj8D,IAAwBmL,GACxBkF,EAAA7C,OACAwrD,EAAA,QAAAvc,oBACA,EAAAtxC,EAAAgxC,YACA6c,EAAA,QAAAtc,2BAAAv5C,EAAAiP,GACAspB,EACAjuB,EAAAmD,IAUA40B,EAAAjmC,UAAA48D,qBAAA,SAAA3uD,EAAAvB,EAAAwB,GACA,MAAAtC,EAAoCsC,IAAAvN,OAAA,GACpCqO,EAAApD,EAAA,YACAiH,EAAAjH,EAAA,UACAgxC,KACAA,EAAA/pC,MACA+pC,EAAA/pC,GAAA7D,GAAAyqD,EAAA,QAAA3c,kBACAh9C,KAAA48C,oBAAA58C,MACA,MAAAgR,EAAArQ,OAAAi8D,EAAA,OAAAj8D,IAAwBmL,GACxBkF,EAAA7C,OACAwrD,EAAA,QAAAvc,oBACA,EACAN,EACA6c,EAAA,QAAAtc,sBAAAnuC,EAAA6D,GAAAnG,EACAwB,IAQA+3B,EAAAoZ,qCACAjP,8BACA6P,cAAAwZ,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAs/C,8BACA7O,cAAAgpB,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAs/C,gCASArZ,EAAAgZ,0BACA7O,8BACAC,YAAAopB,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAk/C,qBASAjZ,EAAA2Y,sCACAxO,8BACAG,iBAAAkpB,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAm/C,+BACAY,YAAA0Z,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAm/C,iCASAlZ,EAAA+X,mBACA5N,8BACA8rB,SAAAzC,EAAA,QAAA3c,kBAAA7W,EAAAjmC,UAAAs+C,YACA2d,SAAAxC,EAAA,QAAA3c,kBAAA7W,EAAAjmC,UAAAs+C,cASArY,EAAAqX,uBACAlN,8BACAsP,MAAA+Z,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAu9C,yBACAoC,WAAA8Z,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAA0+C,8BACAjkC,MAAAg/C,EAAA,QAAA3c,kBAAA7W,EAAAjmC,UAAA8+C,aACAhkC,WAAA2+C,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAg/C,kBACA1kC,WAAAm/C,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAu9C,yBACA1iC,gBAAA4+C,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAA0+C,8BACAr2B,WAAAoxC,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAw+C,kBACA7jC,QAAA8+C,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAA89C,wBACA/iC,aAAA0+C,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAo/C,6BACAQ,QAAA6Z,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAA89C,wBACA+B,aAAA4Z,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAo/C,6BACAU,SAAA2Z,EAAA,QAAA3c,kBACA7W,EAAAjmC,UAAAu/C,iBAUAtZ,EAAA+Z,mCACAnlC,gBAAA,mBACA8kC,WAAA,cACA5kC,aAAA,gBACA8kC,aAAA,iBAYA5Z,EAAAjmC,UAAA6+C,mCAAA,SAAA7zC,EAAAkD,EAAAmuC,GACA,MAAA+B,EAAAlwC,IAAAvN,OAAA,GAAAsN,KACA,OAAAwrD,EAAA,QAAAhd,gBAAA,6BACAxW,EAAA+Z,kCAAA5B,EAAAhR,YAYAnH,EAAAjmC,UAAAo8C,uBAAA,SAAApxC,EAAAkD,EAAAmuC,GACA,MAAAzwC,EAAAsC,IAAAvN,OAAA,GACA27C,EAAA1wC,EAAA,aACA2wC,EAAA3wC,EAAA,QACA+yC,EAAA/yC,EAAA,MACA4wC,EAAA5wC,EAAA,WACA,IAAAwhC,EAeA,OAdA9sC,MAAAgd,QAAAtS,GAYAoiC,EAAA,WAVA,kBADAA,EAA2C,EAAA7mB,aAC3C,IAAA+1B,EACAlP,EAAA,eACK,YAAAA,IAAA,IAAAmP,EACLnP,EAAA,UACK,eAAAA,IAAA,IAAAuR,EACLvR,EAAA,QACK,oBAAAA,IAAA,IAAAoP,IACLpP,EAAA,cAKAqsB,EAAA,QAAAhd,gBAAA,6BACArP,IAaAnH,EAAAjmC,UAAAgQ,kBAAA,SAAAtO,EAAAyL,GACAA,EAAArN,KAAA+8D,aAAA1vD,GACA,MAAA2vD,EAAArD,EAAA,QAAAhd,gBAAA,qCACA7wC,GAAmBqC,KAAA6uD,EAAAnf,KAAA79C,KAAA69C,KAAAp8C,QAAAzB,KAAAyB,QACnBo9C,MAAA7+C,KAAA65D,OAAApd,QAAAz8C,KAAA45D,SACApd,aAAAx8C,KAAA+5D,cAAArd,WAAA18C,KAAA85D,aAKA,OAJAzsD,GACA1M,OAAAi8D,EAAA,OAAAj8D,CAAAmL,EAAAuB,GAEArN,KAAAi9C,qBAAA+f,EAAAp7D,GAAAkK,IACAkxD,GAaA72B,EAAAjmC,UAAAmb,cAYA8qB,EAAAjmC,UAAA+P,kBAAA,SAAArD,EAAAS,GACAA,EAAArN,KAAA+8D,aAAA1vD,GACA,MAAAc,EAAAwrD,EAAA,QAAAhd,gBAAA,6BACA,kBACAgd,EAAA,QAAA3O,eAAA78C,EAAA,4CACA,qBAAAnO,KAAA0sC,gBACA,MAAA5gC,GACArK,QAAAzB,KAAAyB,QACAo8C,KAAA79C,KAAA69C,KACAgB,MAAA7+C,KAAA65D,OACApd,QAAAz8C,KAAA45D,SACApd,aAAAx8C,KAAA+5D,cACArd,WAAA18C,KAAA85D,YACA/mD,UAAA/S,KAAA+S,UACA7D,YAAAlP,KAAAkP,aAMA,OAJA7B,GACA1M,OAAAi8D,EAAA,OAAAj8D,CAAAmL,EAAAuB,GAEArN,KAAA88D,qBAAA3uD,EAAAvB,GAAAd,IACAqC,GAEA9H,EAAA,4FCvuCA,QAAAC,EAAA,QACAA,EAAA,QACAA,EAAA,MACY6J,IAAZ7J,EAAA,QACAA,EAAA,KACY0qC,IAAZ1qC,EAAA,QACAA,EAAA,SACAA,EAAA,iNAyBA,IAAMC,EAAU,WAMdvG,KAAKi9D,2BAMLj9D,KAAKk9D,WAMLl9D,KAAKynB,QAAU,IAAI01C,WACjBC,iBAAiB,IAOnBp9D,KAAKq9D,OAAS,IAAIC,WAChB51C,OAAQ1nB,KAAKynB,QACbxa,MAAOjN,KAAKu9D,eAAen4D,KAAKpF,MAChCw9D,sBAAsB,EACtBC,wBAAwB,KAW5Bl3D,EAAQrG,UAAUqM,WAAa,SAASC,EAASkxD,GAC/Cr1D,UAAY0I,OAAO2sD,GAAc,GACjCr1D,UAAY0I,OAAO2sD,EAAa19D,KAAKk9D,QAAQr8D,QAC7C,IAAM88D,EAAaxtD,EAAOuC,OAAOlG,GAAS8Z,WAC1CtmB,KAAKi9D,wBAAwBU,GAAcD,EAC3C19D,KAAKk9D,QAAQQ,GAAY9wD,SAAS+wD,GAAcnxD,EAChDxM,KAAKynB,QAAQlb,WAAWC,IAS1BjG,EAAQrG,UAAUuM,cAAgB,SAASD,EAASkxD,GAClDr1D,UAAY0I,OAAO2sD,GAAc,GACjCr1D,UAAY0I,OAAO2sD,EAAa19D,KAAKk9D,QAAQr8D,QAC7C,IAAM88D,EAAaxtD,EAAOuC,OAAOlG,GAAS8Z,kBACnCtmB,KAAKi9D,wBAAwBU,UAC7B39D,KAAKk9D,QAAQQ,GAAY9wD,SAAS+wD,GACzC39D,KAAKynB,QAAQhb,cAAcD,IAQ7BjG,EAAQrG,UAAUwM,MAAQ,SAASgxD,GACjCr1D,UAAY0I,OAAO2sD,GAAc,GACjCr1D,UAAY0I,OAAO2sD,EAAa19D,KAAKk9D,QAAQr8D,QAC7C,IAAM64B,EAAQ15B,KAAKk9D,QAAQQ,GAC3B,IAAK,IAAMC,KAAcjkC,EAAM9sB,SAC7B5M,KAAKyM,cAAcitB,EAAM9sB,SAAS+wD,GAAaD,GAEjDr1D,UAAY0I,OAAOigC,EAAM+B,QAAQrZ,EAAM9sB,YAQzCrG,EAAQrG,UAAU09D,SAAW,WAC3B,OAAO59D,KAAKq9D,QAQd92D,EAAQrG,UAAU29D,kBAAoB,WACpC,IAAMH,EAAa19D,KAAKk9D,QAAQr8D,OAKhC,OAJAb,KAAKk9D,QAAQr2D,MACX0f,cAAerF,UAAa48C,gBAC5BlxD,cAEK,IAAImxD,UAAsB/9D,KAAM09D,IAQzCn3D,EAAQrG,UAAUwX,KAAO,SAASvP,GAChCnI,KAAKq9D,OAAOhsD,OAAOlJ,IAUrB5B,EAAQrG,UAAU8M,SAAW,SAASC,EAAOywD,GAC3Cr1D,UAAY0I,OAAO2sD,GAAc,GACjCr1D,UAAY0I,OAAO2sD,EAAa19D,KAAKk9D,QAAQr8D,QAC7Cb,KAAKk9D,QAAQQ,GAAYn3C,cAA0B,OAAVtZ,EACvCiU,UAAa48C,gBAAkB58C,UAAa88C,eAAe/wD,IAU/D1G,EAAQrG,UAAUq9D,eAAiB,SAAS/wD,EAASy2C,GACnD,IAAM0a,EAAaxtD,EAAOuC,OAAOlG,GAAS8Z,WAC1Cje,UAAY0I,OAAO4sD,KAAc39D,KAAKi9D,yBACtC,IAAMS,EAAa19D,KAAKi9D,wBAAwBU,GAEhD,OADc39D,KAAKk9D,QAAQQ,GACdn3C,cAAc/Z,EAASy2C,KAOtC18C,EAAQW,OAASC,QAAQD,OAAO,yBAC9B62D,UAAsB72D,OAAOK,QAEhBH,QAAQ,wBAAyBb,GAChDc,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,qIC9Kf,MAAA03D,EAAA,WACAp8B,EAAA,QAAAthC,KAAAP,OAGAW,OAAAG,EAAA,SAAAH,CAAAs9D,EAAAp8B,EAAA,SAMAo8B,EAAA/9D,UAAA46C,iBAAA,SAAA5Y,GACA,QAAA9M,EAAA8M,EAAAE,WAA8BhN,EAAGA,IAAAiN,YACjC,GAAAjN,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA+6C,aAAA3lB,GAGA,aAOA6oC,EAAA/9D,UAAA66C,aAAA,SAAA5sC,GACA,MAAA+vD,EAAAC,EAAA,QAAA1uD,mBACAwuD,EAAAG,SAAAjwD,MACA,OAAA+vD,GAAA,MAUAD,EAAAI,aAAA,SAAAlwD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACAwuD,EAAAK,iBAAAnwD,EAAAC,IAUA6vD,EAAAM,mBAAA,SAAApwD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACAwuD,EAAAO,wBAAArwD,EAAAC,IAUA6vD,EAAAQ,gBAAA,SAAAtwD,EAAAC,GACA,MAAA7G,EAAA4G,EAAA2/B,aAAA,QACA,GAAAvmC,EAGA,OAAA42D,EAAA,QAAA1uD,iBAAmClI,QACnC02D,EAAAS,oBAAAvwD,EACAC,IAUA6vD,EAAAU,iBAAA,SAAAxwD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACAwuD,EAAAW,sBAAAzwD,EAAAC,IAUA6vD,EAAAY,SAAA,SAAA1wD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACAwuD,EAAAa,aAAA3wD,EAAAC,IAUA6vD,EAAAc,SAAA,SAAA5wD,EAAAC,GACA,MAAA4wD,EAAAlc,EAAA,EAAAC,SAAA50C,GACA,GAAA6wD,EAGA,OAAAb,EAAA,QAAA1uD,iBAAmCuvD,QACnCf,EAAAgB,wBAAA9wD,EAAAC,IAUA6vD,EAAAiB,UAAA,SAAA/wD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBAAoCwuD,EAAAkB,cACpChxD,EAAAC,IAUA6vD,EAAAmB,eAAA,SAAAjxD,EAAAC,GACA,MAAA7G,EAAA4G,EAAA2/B,aAAA,QACA5iC,EAAAizD,EAAA,QAAA1uD,mBACAwuD,EAAAoB,mBAAAlxD,EAAAC,GACAlD,IAIAkD,IAAAvN,OAAA,GACA0G,GAAA2D,IAUA+yD,EAAAqB,wBAAA,SAAAnxD,EACAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACAwuD,EAAAsB,6BAAApxD,EACAC,IAUA6vD,EAAAuB,WAAA,SAAArxD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACAwuD,EAAAwB,eAAAtxD,EAAAC,IAUA6vD,EAAAyB,2BAAA,SAAAvxD,EACAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACMwuD,EAAA0B,gCAAAxxD,EACNC,IAUA6vD,EAAA2B,oBAAA,SAAAzxD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACMwuD,EAAA4B,yBAAA1xD,EACNC,IAUA6vD,EAAA6B,qBAAA,SAAA3xD,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACMwuD,EAAA8B,0BAAA5xD,EACNC,IAUA6vD,EAAA+B,WAAA,SAAA7xD,EAAAC,GACA,OAAA+gB,EAAA,EAAAkB,WAAAliB,IASA8vD,EAAAgC,iBACA,KACA,kCASAhC,EAAAG,SAAAD,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAC,sBAAA/B,EAAA,QAAA9U,yBACA4U,EAAAyB,4BACAS,gBAAAhC,EAAA,QAAA9U,yBACA4U,EAAA6B,sBACAM,mBAAAjC,EAAA,QAAA9U,yBACA4U,EAAAqB,2BASArB,EAAAK,iBAAAH,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAI,cAAAlC,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAiwC,KAAAnC,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAkwC,mBAAApC,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAmwC,WAAArC,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAowC,QAAAtC,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAqwC,sBAAAvC,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,cASA4tC,EAAAO,wBAAAL,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAU,MAAAxC,EAAA,QAAAyC,yBAAA3C,EAAA+B,cASA/B,EAAAS,oBAAAP,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAY,cAAA1C,EAAA,QAAA9U,yBACA4U,EAAAM,sBASAN,EAAAW,sBAAAT,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAa,MAAA3C,EAAA,QAAA9U,yBAAA4U,EAAAuB,YACAuB,QAAA5C,EAAA,QAAA9U,yBAAA4U,EAAAI,gBASAJ,EAAAa,aAAAX,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAe,KAAA7C,EAAA,QAAA9U,yBAAA4U,EAAAiB,aASAjB,EAAAkB,cAAAhB,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAgB,IAAA9C,EAAA,QAAAyC,yBAAA3C,EAAAc,UACAmC,UAAAp9D,IASAm6D,EAAAoB,mBAAAlB,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAkB,IAAAhD,EAAA,QAAA9U,yBAAA4U,EAAAY,YASAZ,EAAAsB,6BAAApB,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAmB,UAAAnD,EAAAmB,iBASAnB,EAAAwB,eAAAtB,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAoB,MAAAlD,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAixC,UAAAnD,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,cASA4tC,EAAAgB,wBAAAd,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAsB,WAAApD,EAAA,QAAAyC,yBACA3C,EAAAQ,mBASAR,EAAA4B,yBACA1B,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAuB,eAAArD,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAoxC,aAAAtD,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAqxC,YAAAvD,EAAA,QAAA9U,yBACA4U,EAAAU,oBASAV,EAAA0B,gCACAxB,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACA0B,SAAAxD,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAuxC,kBAAAzD,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAwxC,KAAA1D,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACAyxC,MAAA3D,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACA0xC,mBAAA5D,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACA2xC,YAAA7D,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,cASA4tC,EAAA8B,0BACA5B,EAAA,QAAA5uD,gBACA0uD,EAAAgC,iBACAgC,aAAA9D,EAAA,QAAA9U,yBAAAl6B,EAAA,EAAAkB,YACA6xC,aAAA/D,EAAA,QAAA9U,yBAAAvG,EAAA,EAAAC,UACAof,eAAAhE,EAAA,QAAA9U,yBACA4U,EAAA2B,uBAEA,IAAAwC,EAAA,EC1ZA,MAAAC,EAAA,WACAxgC,EAAA,QAAAthC,KAAAP,MAMAA,KAAAsiE,WAAA,IAAAF,GAGAzhE,OAAAG,EAAA,SAAAH,CAAA0hE,EAAAxgC,EAAA,SAWAwgC,EAAAniE,UAAA0yC,KAMAyvB,EAAAniE,UAAA46C,iBAAA,SAAA5Y,GACA,QAAA9M,EAAA8M,EAAAE,WAA8BhN,EAAGA,IAAAiN,YACjC,GAAAjN,EAAAzmB,UAAAC,KAAAC,aACA,OAAA7O,KAAA+6C,aAAA3lB,GAGA,aAOAitC,EAAAniE,UAAA66C,aAAA,SAAA5sC,GACA,MAAAs5C,EAAAt5C,EAAA2/B,aAAA,WAAAxd,OACA,IAAAiyC,EAAAviE,KAAAsiE,WAAAvnB,aAAA5sC,GACA,OAAAo0D,GAGAA,EAAA,QAAA9a,GACA8a,EAAApE,EAAA,QAAA1uD,gBAAA8yD,EACAF,EAAAjE,SAAAjwD,QACA,MALA,MAeAk0D,EAAAG,cAAA,SAAAr0D,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAAI,kBAAAt0D,EAAAC,IAUAi0D,EAAAK,WAAA,SAAAv0D,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAAM,eAAAx0D,EAAAC,IAUAi0D,EAAAO,mBAAA,SAAAz0D,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAAQ,aAAA10D,EAAAC,IAUAi0D,EAAAS,WAAA,SAAA30D,EAAAC,GACA,MAAAnB,EAAAkxD,EAAA,QAAA1uD,mBACA4yD,EAAAU,eAAA50D,EAAAC,GACA,IAAAnB,EACA,OAEA,MAAA+1D,EAAA,SAAA70D,EAAA2/B,aAAA,aAEA,OADA7gC,EAAA,UAAA+1D,EACA/1D,GAWAo1D,EAAAY,uBAAA,SAAA90D,EACAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAAa,mBAAA/0D,EAAAC,IAUAi0D,EAAAc,gBAAA,SAAAh1D,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAAe,mBAAAj1D,EAAAC,IAUAi0D,EAAAgB,iBAAA,SAAAl1D,EAAAC,GACA,MAAA25B,EAAA55B,EAAA2/B,aAAA,UACAj1B,EAAA1K,EAAA2/B,aAAA,YACAw1B,EAAAn1D,EAAA2/B,aAAA,gBACAy1B,KAUA,OATAx7B,IACAw7B,EAAA,OAAAx7B,GAEAlvB,IACA0qD,EAAA,SAAA1qD,GAEAyqD,IACAC,EAAA,aAAAD,GAEAC,GAUAlB,EAAAmB,sBAAA,SAAAr1D,EAAAC,GACA,MAAAue,EAAAwxC,EAAA,QAAA1uD,mBACA4yD,EAAAoB,oBAAAt1D,EAAAC,GACA,MAAAue,EAAA9rB,OAGA,OAAAF,OAAAY,EAAA,eAAAZ,CAAAgsB,IAUA01C,EAAAqB,eAAA,SAAAv1D,EAAAC,GACA,MAAAu1D,KAGA,OAFAA,EAAA,OAAAx1D,EAAA2/B,aAAA,UACA61B,EAAA,KAAA7gB,EAAA,EAAAC,SAAA50C,GACAw1D,GAUAtB,EAAAuB,iBAAA,SAAAz1D,EAAAC,GACA,MAAAue,EAAAwC,EAAA,EAAAkB,WAAAliB,GAAAqH,MAAA,KACA,IAAAmX,GAAA,GAAAA,EAAA9rB,OACA,OAEA,MAAAmkB,GAAA2H,EAAA,GACA1H,GAAA0H,EAAA,GACA,OAAAoD,MAAA/K,IAAA+K,MAAA9K,QAAA,GAGAD,EAAAC,IAUAo9C,EAAAwB,gBAAA,SAAA11D,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAAyB,YAAA31D,EAAAC,IAUAi0D,EAAA0B,0BAAA,SAAA51D,EACAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAA2B,yBAAA71D,EACAC,IAUAi0D,EAAA4B,sBAAA,SAAA91D,EAAAC,GACA,OAAA+vD,EAAA,QAAA1uD,mBACA4yD,EAAA6B,oBAAA/1D,EAAAC,IASAi0D,EAAApC,iBACA,KACA,mCASAoC,EAAA8B,qBACA,KACA,kCASA9B,EAAAjE,SAAAD,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACAmE,SAAAjG,EAAA,QAAA9U,yBACAgZ,EAAAG,iBASAH,EAAAI,kBAAAtE,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACAoE,MAAAlG,EAAA,QAAAyC,yBACAyB,EAAAK,YACA4B,cAAAnG,EAAA,QAAAyC,yBACAyB,EAAAO,sBASAP,EAAAM,eAAAxE,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACAsE,MAAApG,EAAA,QAAAyC,yBACAyB,EAAAS,YACA0B,OAAArG,EAAA,QAAAyC,yBACAzxC,EAAA,EAAAkB,YACAo0C,kBAAAtG,EAAA,QAAAyC,yBACAyB,EAAAY,wBACAyB,UAAAvG,EAAA,QAAAyC,yBACAyB,EAAAc,iBACAwB,YAAAxG,EAAA,QAAAyC,yBACAyB,EAAAgB,mBACGlF,EAAA,QAAA5uD,gBAAA8yD,EAAA8B,qBACHrC,MAAA3D,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAsxC,SAAAxD,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAu0C,iBAAAzG,EAAA,QAAA9U,yBACAgZ,EAAAmB,uBACAqB,WAAA1G,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,eASAgyC,EAAAU,eAAA5E,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACA6E,UAAA3G,EAAA,QAAAyC,yBACAyB,EAAAqB,iBACGvF,EAAA,QAAA5uD,gBAAA8yD,EAAA8B,qBACHrC,MAAA3D,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAw0C,WAAA1G,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,eASAgyC,EAAAa,mBAAA/E,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACAqE,cAAAnG,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACA00C,oBAAA5G,EAAA,QAAA9U,yBACAgZ,EAAA0B,6BAQA1B,EAAA2B,yBAAA7F,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACA+E,iBAAA7G,EAAA,QAAA/uD,gBACAizD,EAAA4B,yBASA5B,EAAA6B,oBAAA/F,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACAgF,WAAA9G,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACA60C,WAAA/G,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,wBACAi1C,WAAAhH,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,wBACAk1C,WAAAjH,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,wBACAm1C,WAAAlH,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,0BASAmyC,EAAAe,mBAAAjF,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACAqF,QAAAnH,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAswC,MAAAxC,EAAA,QAAAyC,yBACAzxC,EAAA,EAAAkB,aACG8tC,EAAA,QAAA5uD,gBAAA8yD,EAAA8B,qBACHU,WAAA1G,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,eASAgyC,EAAAoB,oBAAAtF,EAAA,QAAA5uD,gBACA8yD,EAAA8B,qBACAoB,YAAApH,EAAA,QAAA/uD,gBACAizD,EAAAuB,kBACA4B,YAAArH,EAAA,QAAA/uD,gBACAizD,EAAAuB,oBASAvB,EAAAQ,aAAA1E,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACAwF,kBAAAtH,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACA40C,WAAA9G,EAAA,QAAAyC,yBACAyB,EAAAwB,kBACG1F,EAAA,QAAA5uD,gBAAA8yD,EAAA8B,qBACHuB,aAAAvH,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,YACAw0C,WAAA1G,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,eASAgyC,EAAAyB,YAAA3F,EAAA,QAAA5uD,gBACA8yD,EAAApC,iBACA0F,cAAAxH,EAAA,QAAA9U,yBACAgZ,EAAAuB,kBACAgC,iBAAAzH,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAa,aACA61C,UAAA1H,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,wBACA41C,WAAA3H,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,wBACA61C,YAAA5H,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,wBACA81C,aAAA7H,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAe,yBACGiuC,EAAA,QAAA5uD,gBAAA8yD,EAAA8B,qBACHU,WAAA1G,EAAA,QAAA9U,yBACAl6B,EAAA,EAAAkB,eAEAhqB,EAAA,4FCxdA,QAAAC,EAAA,SACAA,EAAA,MACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,yDARA,IAAMC,GAsBNA,YAAsB,SAAS2K,GAC7B7I,UAAYC,iBAAiB4I,EAAa+0D,WAE1CtlE,OAAOulE,eAAeh1D,EAAa,UACjC+nB,IAAK,kBAAM/nB,EAAYi1D,aACvBzgD,IAAK,SAAC7C,GACJ3R,EAAYk1D,UAAUvjD,OAiB5Btc,MAAgB,SAASmI,GACvBrG,UAAYC,iBAAiBoG,EAAO23D,WAEpC1lE,OAAOulE,eAAex3D,EAAO,WAC3B43D,cAAc,EAIdrtC,IAAK,kBAAMvqB,EAAMomC,cAIjBpvB,IAAK,SAAC7C,GACJnU,EAAMyjC,WAAWtvB,MAIrBliB,OAAOulE,eAAex3D,EAAO,WAC3B43D,cAAc,EAIdrtC,IAAK,kBAAMvqB,EAAM63D,cAIjB7gD,IAAK,SAAC7C,GACJnU,EAAM83D,WAAW3jD,OAmBvBtc,aAAuB,SAASmI,EAAO8vB,GAErC,IAAI9W,SAKA++C,EAAkB,KAKlBC,EAAkB,KAMhBC,EAoDN,SAASC,EAAWl4D,GAClB,IAAIm4D,EAAoCn4D,EAAMuqB,IAAI,cAClD,IAAMplB,EAAuCnF,EAAMuqB,IAAI,gBACvDvqB,EAAMgX,IAAI,eAAgBmhD,GAAY,GAClChzD,GACF+yD,EAAW/yD,IAnDTizD,EA4DN,SAASC,EAAWr4D,GAClB,IAAIm4D,EAAoCn4D,EAAMuqB,IAAI,cAClD,IAAMplB,EAAuCnF,EAAMuqB,IAAI,gBACvDvqB,EAAMgX,IAAI,eAAgBmhD,GAAY,GAClChzD,GACFkzD,EAAWlzD,IAtDf,GATAnF,EAAMgX,IAAI,aAAc,GAAG,GAEvBhX,aAAiB8wB,WACnB9wB,EAAMV,YAAYg5D,GAAG,MAAO,SAACC,GACVA,EAAQj/D,QAChB0d,IAAI,eAAgBhX,KAI7BA,aAAiB6wB,UAAc,CAEjC,GAAe,QADf7X,EAAShZ,EAAM0mC,aAEb,OACS1tB,aAAkBw/C,WAC3BT,GAAmB,iBACnBC,GAAmB,cAAe,kBACzBh/C,aAAkBy/C,WAC3BV,GAAmB,kBACnBC,GAAmB,eAAgB,mBAEnCr+D,UAAYszB,KAAK,2BAGnBjU,EAAOs/C,GAAGP,EAAiB,WACzBE,EAAoBj4D,GACpB8vB,EAAO4oC,gBAGT1/C,EAAOs/C,GAAGN,EAAiB,WACzBI,EAAoBp4D,GACpB8vB,EAAO4oC,gBAIXzmE,OAAOulE,eAAex3D,EAAO,WAC3B43D,cAAc,EACdrtC,IAAK,kBAA6BvqB,EAAMuqB,IAAI,cAAiB,iBAiClD1yB,iGC1Lf,QAAAD,EAAA,QAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,QACAA,EAAA,UAGAA,EAAA,UAEAA,EAAA,SACAA,EAAA,UAGAA,EAAA,OAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,UAGAA,EAAA,QAEAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,IACY6J,IAAZ7J,EAAA,IACYkT,IAAZlT,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,MACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,yUA+BA,IAAMC,EAAU,SAAVA,EAAmB8J,EAAI/E,EAAUhC,EAAYgvB,EAAW+uC,EAAcC,EAC1E59D,EAAkBkwC,GAAc,IAAAtoC,EAAAtR,KAMhCA,KAAKuQ,GAAKF,EAMVrQ,KAAKwQ,WAAalH,EAMlBtJ,KAAK41C,UAAYtqC,EASjBtL,KAAKunE,+BAAiC,KAQtCvnE,KAAKwnE,cAAgBH,EAMrBrnE,KAAKynE,iBAAmBH,EAMxBtnE,KAAK+J,kBAAoBL,EAMzB1J,KAAK0nE,cAAgBpvC,EAAUU,IAAI,gBACjCV,EAAUW,IAAI,gBAAkB,KAMlCj5B,KAAK2nE,wBAA0BrvC,EAAUU,IAAI,0BAC3CV,EAAUW,IAAI,0BAA4B,KAK5C,IAAM9hB,EAAwBmhB,EAAUU,IAAI,yBAC1CV,EAAUW,IAAI,yBAA2B,KAM3Cj5B,KAAK4nE,gBAAkBzwD,EACrBA,EAAsB0mD,oBAAsB,KAM9C79D,KAAK6nE,eAAiBvvC,EAAUU,IAAI,qBAClCV,EAAUW,IAAI,qBAAuB,KAMvCj5B,KAAK8nE,aAAexvC,EAAUU,IAAI,eAChCV,EAAUW,IAAI,eAAiB,KAMjC,IAAM8uC,EAAsBzvC,EAAUU,IAAI,uBACxCV,EAAUW,IAAI,0BA+FhB,IA9F4C,IAAxC8uC,EAAoBC,iBAEtBhoE,KAAK+J,kBAAkBkwC,oBAAmB,GAO5Cj6C,KAAKioE,6BAA+BF,EAAoBG,0BAMxDloE,KAAKmoE,+BACH7vC,EAAUU,IAAI,iCACZV,EAAUW,IAAI,iCAAmC,KAMrDj5B,KAAK4J,WAAa0uB,EAAUU,IAAI,aAAeV,EAAUW,IAAI,aAAe,KAM5Ej5B,KAAKooE,yBAA2B9vC,EAAUU,IAAI,2BAC5CV,EAAUW,IAAI,2BAA6B,KAM7Cj5B,KAAKqoE,iBAAmB/vC,EAAUU,IAAI,mBACpCV,EAAUW,IAAI,mBAAqB,KAMrCj5B,KAAKsoE,cAAgBhwC,EAAUU,IAAI,gBACjCV,EAAUW,IAAI,qBAAkBn1B,EAMlC9D,KAAK8J,gBAAkBwuB,EAAUU,IAAI,kBACnCV,EAAUW,IAAI,kBAAoB,KAQpCj5B,KAAKm5B,cAAgBygB,EAMrB55C,KAAKuoE,kBAAoBjwC,EAAUU,IAAI,oBACrCV,EAAUW,IAAI,oBAAsB,KAMtCj5B,KAAKwoE,SAAWlwC,EAAUU,IAAI,WAC5BV,EAAUW,IAAI,WAAa,KAM7Bj5B,KAAK2Q,KAAO,KAMZ3Q,KAAKyoE,oBAAsBnwC,EAAUU,IAAI,sBACvCV,EAAUW,IAAI,sBAAwB,KAOxCj5B,KAAK0oE,mBAAqB,UACkB5kE,IAAxCikE,EAAoBY,iBAAiC3oE,KAAKyoE,oBAAqB,CACjF,IAAMG,EAAc5oE,KAAKyoE,oBAAoBI,kBAAkBd,EAAoBY,iBAC/EC,EAAY/nE,OAAS,IACvBb,KAAK0oE,mBAAqBE,GAQ9B5oE,KAAK8oE,kBAAoB,KAMzB9oE,KAAK+oE,qBAEsCjlE,IAAvCikE,EAAoBiB,eACtBhpE,KAAK+oE,gBAAkBhB,EAAoBiB,eAE3ChpE,KAAK+oE,iBAAmB,IAAI7nD,WAC1BC,MAAO,IAAI8nD,WACTjoD,OAAQ,IAAIH,WACVD,MAAO,2BACPE,MAAO,IAETqM,OAAQ,EACRlQ,OAAQ,EACRisD,QAAS,EACTC,MAAO,MAEP,IAAIjoD,WACNC,MAAO,IAAI8nD,WACTjoD,OAAQ,IAAIH,WACVD,MAAO,qBACPE,MAAO,IAETqM,OAAQ,EACRlQ,OAAQ,EACRisD,QAAS,EACTC,MAAO,OASbnpE,KAAKopE,YAAc,KAMnBppE,KAAKqpE,mBAAqB,IAAIC,WAC5Bt8D,UAAU,EACV8M,cAAc,EACdQ,gBACEgD,UAAagE,UAA4BygC,MACzCwnB,YAAejoD,UAA4BW,QAC3CxB,UAAaa,UAA4BygC,MACzCvhC,SAAYc,UAA4BY,KACxCsnD,MAASloD,UAA4BgB,aACrC4J,SAAY5K,UAA4Be,UACxConD,QAAWnoD,UAA4BC,QACvCha,KAAQ+Z,UAA4B0gC,KACpCthC,YAAeY,UAA4BY,KAC3CwnD,UAAapoD,UAA4BkB,WACzCmnD,YAAeroD,UAA4BiB,aAC3CzE,YAAewD,UAA4BygC,MAC3C9jC,YAAeqD,UAA4Ba,UAM3CniB,KAAK2nE,yBACP3gE,UAAS4B,OACP5I,KAAK2nE,wBACL,SACA3nE,KAAK4pE,oCACL5pE,MAIJA,KAAKwQ,WAAWwuB,IAAI,uBAAwB,SAAC2iB,EAAOvvC,EAAUkuB,GAC5D,IAAMC,KACN,GAAID,EAAYnyB,KAAK2F,MAAO,CAC1B,IAAMmsB,EAAQ7tB,EAASS,WACvBxK,UAAY0I,OAAiB,OAAVkvB,GAA4B,QAAVA,GACrC,IAAMmS,EAAoB,OAAVnS,EAChB7tB,EAASR,mBAAmB,SAACi4D,GAC3B,QAA2B/lE,IAAvB+lE,EAAK17D,KAAK5D,SAAwB,CACpC,IAAMu/D,EAAQvjE,EAAQwjE,YAAYC,YAAcH,EAAK17D,KAAK5G,KAC1Dg5B,EAASupC,GAAS13B,SAGjB,CACL,IAAM63B,KACN3pC,EAAY1uB,mBAAmB,SAACi4D,QACH/lE,IAAvB+lE,EAAK17D,KAAK5D,UAA8C,OAApBs/D,EAAKh3D,YAC3Co3D,EAAcpjE,KAAKgjE,EAAK17D,KAAK5G,QAGjCg5B,EAASh6B,EAAQwjE,YAAYG,kBAAoB5pC,EAAYnyB,KAAK5G,MAAQ0iE,EAAc71D,KAAK,KAE/F9C,EAAKvH,kBAAkBK,YAAYm2B,KAErCvgC,KAAKwQ,WAAWwuB,IAAI,yBAA0B,SAAC2iB,EAAOvvC,GACpD,IAAMmuB,KACA4pC,EAAU/3D,EAAS1D,MAAM63D,aAI/BhmC,GAHmBnuB,EAASyB,OAAO1F,KAAK2F,MACtCvN,EAAQwjE,YAAYK,aAAe7jE,EAAQwjE,YAAYM,oBACrDj4D,EAASjE,KAAK5G,MACI4iE,EACtB74D,EAAKvH,kBAAkBK,YAAYm2B,KAMrC,IAAM3zB,EAAW5M,KAAKwpB,cAClBxpB,KAAK0nE,gBACP96D,EAAS7F,QAAQ,SAASyF,GACpBxM,KAAK6nE,gBACP7nE,KAAK6nE,eAAe76D,SAASR,GAE/BxM,KAAKsqE,gBAAgB99D,IACpBxM,MAEHA,KAAK0nE,cAAclxD,OAAO5J,GAC1B5F,UAAS4B,OAAO5I,KAAK0nE,cAAe,MAAO1nE,KAAKuqE,uBAAwBvqE,MACxEgH,UAAS4B,OAAO5I,KAAK0nE,cAAe,SAAU1nE,KAAKwqE,0BAA2BxqE,OAG5EA,KAAK6nE,gBACP7nE,KAAKwQ,WAAWwuB,IAAI,uBAAwB,WAC1CpyB,EAAS7F,QAAQ,SAASyF,GACxBxM,KAAK6nE,eAAe76D,SAASR,IAD/B8E,KAMAtR,KAAKqoE,kBACProE,KAAKwQ,WAAWwuB,IAAIyrC,UAAgB5/D,UAAUC,eAAgB,SAAC62C,EAAOp6C,GACpE+J,EAAKo5D,eAAenjE,KAUxBvH,KAAK2qE,oCAAsC,KAEvC3qE,KAAK8nE,cAAgB9nE,KAAKmoE,gCAE5BnoE,KAAK4qE,2BAA2B14D,KAAK,WAGnClL,UAAS4B,OACP0I,EAAK62D,+BAA+B0C,oBACpC,MACAv5D,EAAKw5D,oCAHPx5D,GAMAtK,UAAS4B,OACP0I,EAAK62D,+BAA+B0C,oBACpC,SACAv5D,EAAKy5D,uCAHPz5D,GAMAtK,UAAS4B,OACP0I,EAAK62D,+BAA+B6C,qBACpC,MACA15D,EAAKw5D,oCAHPx5D,GAMAtK,UAAS4B,OACP0I,EAAK62D,+BAA+B6C,qBACpC,SACA15D,EAAKy5D,uCAHPz5D,GArByC,IAAA41B,GAAA,EAAAC,GAAA,EAAAC,OAAAtjC,EAAA,IA8BzC,QAAAujC,EAAAC,EAAuBh2B,EAAK62D,+BAA+B8C,UAA3D1jC,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsE,KAA3DgkC,EAA2D7jC,EAAAn8B,MACpEoG,EAAK65D,yBAAyBD,IA/BS,MAAAtjC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAAA,IAAAkC,GAAA,EAAAC,GAAA,EAAAC,OAAA1lC,EAAA,IAiCzC,QAAA2lC,EAAAC,EAAwBp4B,EAAK62D,+BAA+BiD,WAA5D7jC,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAAwE,KAA7D+hC,EAA6D5hC,EAAAv+B,MACtEoG,EAAK65D,yBAAyBE,IAlCS,MAAAzjC,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,MAuC7CxpC,KAAKsrE,+PAUP/kE,EAAQrG,UAAUqrE,aAAe,WAC/B,IAAMvmD,EAAIhlB,KAAK+J,kBAAkB4wC,sBAAsBxvC,UAAQorC,eAAei1B,OACxEvmD,EAAIjlB,KAAK+J,kBAAkB4wC,sBAAsBxvC,UAAQorC,eAAek1B,OAE9E,IAAK17C,MAAM/K,KAAO+K,MAAM9K,GAAI,CAC1B,IAAM07B,GAAU37B,EAAGC,GACnB,GAAgC,OAA5BjlB,KAAK0oE,oBAA+B1oE,KAAKyoE,oBAAqB,CAChE,IAAMiD,EAAmB1rE,KAAK2Q,KAAKsE,UAAUK,gBACvCq2D,EAAoB3rE,KAAKyoE,oBAAoBmD,4BACjDjrB,EAAQ+qB,EAAiB3iD,YAAa2iD,EACtC1rE,KAAK0oE,oBACP,GAAIiD,EACF,OAAOA,EAGX,OAAOhrB,EAET,OAAO,MASTp6C,EAAQrG,UAAU2rE,WAAa,WAC7B,IAAMjrB,EAAO5gD,KAAK+J,kBAAkB4wC,sBAAsBxvC,UAAQorC,eAAeu1B,OACjF,OAAO/7C,MAAM6wB,QAAQ98C,EAAY88C,GAYnCr6C,EAAQrG,UAAU6rE,gBAAkB,WAClC,IAAMC,EAAYhsE,KAAK+J,kBAAkB6wC,uBAAuBzvC,UAAQorC,eAAe01B,eACvF,YAAqBnoE,IAAdkoE,EAA0BhsE,KAAKioE,2BAA6B+D,GASrEzlE,EAAQrG,UAAUgsE,gBAAkB,SAASC,GAC3C,IAAIC,SAEFA,EADED,GAGoBnsE,KAAK2Q,KAAKsE,UAAUo3D,YAE5ChkE,UAAYikE,YAAYF,GAGpBpsE,KAAK8oE,mBACP9oE,KAAK4nE,gBAAgBn7D,cAAczM,KAAK8oE,mBAG1C9oE,KAAK8oE,kBAAoB,IAAIvjD,UAC3B,IAAIhG,UAAY6sD,IAClBpsE,KAAK8oE,kBAAkB97D,SAAShN,KAAK+oE,iBAGrC/oE,KAAK4nE,gBAAgBr7D,WAAWvM,KAAK8oE,oBAYvCviE,EAAQrG,UAAUqsE,cAAgB,WAChC,OAAOvsE,KAAK+J,kBAAkB2wC,sBAAsBvvC,UAAQorC,eAAei2B,cAS7EjmE,EAAQrG,UAAUusE,cAAgB,SAASC,EAAaP,GACtD,IAAIQ,SAEFA,EADER,GAGgBnsE,KAAK2Q,KAAKsE,UAAUo3D,YAExChkE,UAAYikE,YAAYK,GAExB,IAAMC,EAAM/0D,EAAE,UACZE,MAAS,wBACTwG,KAAQmuD,IACP,GAEsB,OAArB1sE,KAAKopE,aACPppE,KAAK2Q,KAAKoI,cAAc/Y,KAAKopE,aAG/BppE,KAAKopE,YAAc,IAAIyD,WACrB7kE,QAAS4kE,EACTE,SAAUH,IAGZ3sE,KAAK2Q,KAAKo8D,WAAW/sE,KAAKopE,cAY5B7iE,EAAQrG,UAAUspB,YAAc,WAC9B,IAAMwjD,EAAIhtE,KAAK+J,kBAAkB2wC,sBAAsBvvC,UAAQorC,eAAe02B,UAC9E,YAAUnpE,IAANkpE,GAAyB,KAANA,EACd3kE,UAAY0I,OAAO/Q,KAAKqpE,mBAAmBz5D,aAAao9D,QAUnEzmE,EAAQrG,UAAUgtE,cAAgB,SAAStyC,GAGzC,IAHqD,IAAA5oB,EAAAhS,KAE/CuR,EAAOvR,KAAKm5B,cAAc86B,uBAAuB1tD,EAAQwjE,YAAYoD,YAClE3+D,EAAI,EAAGA,EAAI+C,EAAK1Q,OAAQ2N,IAAK,CACpC,IAAM7H,EAAM4K,EAAK/C,GACXtD,EAAQlL,KAAKm5B,cAAcqhB,SAAS7zC,GAC1C0B,UAAY0I,OAAO7F,GACnB0vB,EAAWj0B,EAAIlG,MAAM8F,EAAQwjE,YAAYoD,WAAWtsE,SAAWqK,EAGjElL,KAAKwQ,WAAWkB,iBAAiB,kBAAMkpB,GAAY,SAACA,GAClD,IAAM35B,KACN,IAAK,IAAM0F,KAAOi0B,EAChB35B,EAAOsF,EAAQwjE,YAAYoD,WAAaxmE,GAAOi0B,EAAWj0B,GAE5DqL,EAAKmnB,cAAc6Y,aAAa/wC,MAepCsF,EAAQrG,UAAUmR,OAAS,SAASlJ,GAAK,IAAAu1B,EAAA19B,KAEnCmI,IAAQnI,KAAK2Q,OAIb3Q,KAAK2Q,OACP3Q,KAAKotE,iBACLptE,KAAK2Q,KAAO,MAGVxI,IACFnI,KAAK2Q,KAAOxI,EACRnI,KAAKooE,yBACPpoE,KAAKooE,yBAAyBiF,aAAan7D,KAAK,SAAC1F,GAC/CkxB,EAAK4vC,aAAanlE,EAAKqE,KAGzBxM,KAAKstE,aAAanlE,EAAK,SAa7B5B,EAAQrG,UAAUotE,aAAe,SAASnlE,EAAKolE,GAAW,IAAAh2B,EAAAv3C,KAElDgV,EAAO7M,EAAI8M,UACb0rC,SAKJ,GAAI4sB,GAAaA,EAAUlsD,cAAe,CACxC,IAAMnM,EAAO/M,EAAIgN,UACjB9M,UAAY0I,OAAOmE,GACnBF,EAAKw4D,IAAID,EAAUlsD,cAAc0H,YAAa7T,OACzC,CAEL,IADkBlV,KAAK+J,kBAAkB6wC,uBAAuB6yB,UAAkBC,iBAAiB10D,SACnF,EACd2nC,EAAS3gD,KAAKurE,iBAEZv2D,EAAK24D,UAAUhtB,GAEjB,IAAMC,EAAO5gD,KAAK6rE,kBACL/nE,IAAT88C,GACF5rC,EAAK44D,QAAQhtB,IAQnB5gD,KAAKunE,+BAAiCvgE,UAAS4B,OAC7CoM,EACA,iBACAhV,KAAKwnE,cAAc,WACjB,IAAM7mB,EAAS3rC,EAAKq3D,YACdzrB,EAAO5rC,EAAK64D,UACZ1zC,KACNA,EAAOhvB,UAAQorC,eAAei1B,OAAS9pD,KAAKC,MAAMg/B,EAAO,IACzDxmB,EAAOhvB,UAAQorC,eAAek1B,OAAS/pD,KAAKC,MAAMg/B,EAAO,IACzDxmB,EAAOhvB,UAAQorC,eAAeu1B,OAASlrB,EACvCrJ,EAAKxtC,kBAAkBK,YAAY+vB,IAClC,KAAuB,GAC1Bn6B,MAGEA,KAAK+rE,mBAAqB/rE,KAAK4nE,iBACjC5nE,KAAKksE,gBAAgBvrB,GAIvB,IAAM+rB,EAAc1sE,KAAKusE,gBACrBG,GACF1sE,KAAKysE,cAAcC,EAAa/rB,GAIlC,IAAMmtB,EAAmB9tE,KAAK+tE,uBACL,OAArBD,GAA6B9tE,KAAKuoE,mBACpCvoE,KAAKuoE,kBAAkByF,MAAMF,EAAkB3lE,IASnD5B,EAAQrG,UAAUktE,eAAiB,WACjC/kE,UAAY0I,OACV/Q,KAAKunE,+BAAgC,yBACvCvgE,UAASC,cAAcjH,KAAKunE,gCAC5BvnE,KAAKunE,+BAAiC,MAcxChhE,EAAQrG,UAAU+tE,mBAAqB,SAAStgE,GAC9C,IAAMoB,EAAY/O,KAAK+J,kBAAkB2wC,sBAAsBvvC,UAAQorC,eAAe23B,UACtF,QAAkBpqE,IAAdiL,EAAyB,KAAA86B,GAAA,EAAAC,GAAA,EAAAC,OAAAjmC,EAAA,IAC3B,QAAAkmC,EAAAC,EAAoBt8B,EAApB45B,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAA4B,KAAjBn7B,EAAiBs7B,EAAA9+B,MAC1B,GAAIwD,EAAMuqB,IAAI,WAAalqB,EACzB,OAAOL,GAHgB,MAAAk5B,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,IAO7B,OAAO,MASTxjC,EAAQrG,UAAU0pE,oCAAsC,WACtD,GAAK5pE,KAAK2Q,MAAS3Q,KAAK2nE,wBAAxB,CAKA,IACM54D,EADQ/O,KAAK2nE,wBAAwB1uC,IAAIj5B,KAAK2Q,MAC5BsoB,IAAI,SAC5B5wB,UAAYi3B,aAAavwB,GAGzB,IAAMorB,KACNA,EAAOhvB,UAAQorC,eAAe23B,UAAYn/D,EAC1C/O,KAAK+J,kBAAkBK,YAAY+vB,KAYrC5zB,EAAQrG,UAAUiuE,wBAA0B,WAC1C,GAAKnuE,KAAK8J,gBAAV,CAIA,IACMskE,EADapuE,KAAK8J,gBAAgB6H,SAASxD,KAAK5D,SACtBpC,IAAI,SAAAgG,GAAA,OAAQA,EAAK5G,OAG3C4yB,KACNA,EAAOhvB,UAAQorC,eAAeC,aAAe43B,EAAah6D,KAAK,KAC/DpU,KAAK+J,kBAAkBK,YAAY+vB,KAUrC5zB,EAAQrG,UAAUmuE,YAAc,SAASC,GACvC,IAAMC,EAAeD,EAAa7sD,QAAQ,SAC1C,OAAwB,GAAjB8sD,GAAsBA,GAAgBD,EAAaztE,OAAS,GAQrE0F,EAAQrG,UAAUwqE,eAAiB,SAASrwC,GAC1C,GAAIA,EAAW,CACb,IAAMi0C,EAAetuE,KAAKm5B,cAAc+5B,UAAU19C,MAAM,KACxDnN,UAAY0I,OAAOu9D,EAAaztE,OAAS,GACK,KAA1CytE,EAAaA,EAAaztE,OAAS,IAErCytE,EAAarvC,OAAOqvC,EAAaztE,OAAS,GAExCb,KAAKquE,YAAYC,GACnBA,EAAaA,EAAaztE,OAAS,GAAKw5B,EAExCi0C,EAAaznE,KAAK,QAASwzB,GAE7Br6B,KAAKm5B,cAAcm7B,QAAQga,EAAal6D,KAAK,QAWjD7N,EAAQrG,UAAUsuE,iBAAmB,WAGnC,IAAMF,EAAetuE,KAAKm5B,cAAc+5B,UAAU19C,MAAM,KACxD,GAAIxV,KAAKquE,YAAYC,GACnB,OAAOA,EAAaA,EAAaztE,OAAS,GAI5C,IAAM4tE,EAAKzuE,KAAK+J,kBAAkB2wC,sBAAsB,SACxD,GAAI+zB,EACF,OAAOA,EAGT,IAAMC,EAAe1uE,KAAK2uE,sCAC1B,OAAqB,OAAjBD,EACKA,EAIL1uE,KAAKsoE,cACAtoE,KAAKsoE,cAGP,MAST/hE,EAAQrG,UAAUyuE,oCAAsC,WAEtD,IAAK3uE,KAAKwoE,SACR,OAAO,KAET,IAAMoG,EAAkB5uE,KAAKwoE,SAASoG,gBACtC,GAAIA,GAAmB,kBAAmBA,EAAiB,CACzD,IAAMF,EAAeE,EAAgBC,cACrC,GAAIH,EAAa7tE,OAAS,EACxB,OAAO6tE,EAAa,GAGxB,OAAO,MAOTnoE,EAAQrG,UAAUorE,YAAc,WAAW,IAAA7zB,EAAAz3C,KACpCA,KAAK4J,YAGV5J,KAAK4J,WAAW+yB,kBAAkBzqB,KAAK,SAACunB,GACtC,IAAMY,EAAYod,EAAK+2B,mBACvBnmE,UAAY0I,OAAqB,OAAdspB,GAEfod,EAAK4wB,kBACP5wB,EAAK4wB,iBAAiBh+D,aAAaotC,EAAK4wB,iBAAiBx+D,UAAYwwB,EAAY,IAMnF,IAAIgc,KACAnsC,SAEE4kE,EAAcr3B,EAAKte,cAAcqhB,SAASrvC,UAAQorC,eAAeC,kBACnD1yC,IAAhBgrE,GACFzmE,UAAYi3B,aAAajF,IACzBnwB,EAAQoI,UAAe8nB,gBAAgBX,EAAQY,MAE7Cgc,EAAmBnsC,EAAMK,WAG3BukE,EAAYt5D,MAAM,KAAKzO,QAAQ,SAAC0sC,GAC9B,IAAM/Z,EAAQpnB,UAAeunB,gBAAgBJ,EAAQga,GACjD/Z,GACF2c,EAAiBxvC,KAAK6yB,KAKxB+d,EAAK3tC,iBACP2tC,EAAK3tC,gBAAgBQ,oBAAoB+rC,GAG3CoB,EAAK7B,UAAU,WACR6B,EAAK3tC,iBAAoB2tC,EAAK3tC,gBAAgB6H,WAKnD8lC,EAAK3tC,gBAAgB6H,SAASC,mBAAmB,SAACQ,GAChD,IAAIA,EAASssB,OAAb,CAIA,IAAMyrC,EAAU1yB,EAAK1tC,kBAAkB4wC,uBACrCvoC,EAASyB,OAAO1F,KAAK2F,MACnBvN,EAAQwjE,YAAYK,aACpB7jE,EAAQwjE,YAAYM,oBACpBj4D,EAASjE,KAAK5G,MAIlB,QAHgBzD,IAAZqmE,GAAyB/3D,EAAS1D,OACpC0D,EAAS1D,MAAM83D,WAAW2D,GAExB/3D,EAASyB,OAAO1F,MAAQiE,EAASyB,OAAO1F,KAAK2F,YAAmChQ,GAA1BsO,EAASjE,KAAK5D,SAAuB,CAE7F,IAAMwkE,EAASt3B,EAAK1tC,kBAAkB6wC,uBACpCr0C,EAAQwjE,YAAYC,YAAc53D,EAASjE,KAAK5G,WAEnCzD,IAAXirE,GACF38D,EAAS4tB,SAAS+uC,EAAS,KAAO,OAAO,QAEtC,IAAK38D,EAASjE,KAAK2F,OAA2B,GAAlB1B,EAAS8sB,MAAY,CAEtD,IAAM8vC,EAAcv3B,EAAK1tC,kBAAkB2wC,sBACzCn0C,EAAQwjE,YAAYG,kBAAoB93D,EAASjE,KAAK5G,MAExD,QAAoBzD,IAAhBkrE,EAA2B,CAC7B,IAAMC,EAAmBD,EAAYx5D,MAAM,KAC3CpD,EAASR,mBAAmB,SAACQ,GAC3B,QAA+BtO,IAA3BsO,EAASjE,KAAK5D,SAAwB,CACxC,IAAMwkE,EAASv1D,EAAQiJ,SAASwsD,EAAkB78D,EAASjE,KAAK5G,MAChE6K,EAAS4tB,SAAS+uC,EAAS,KAAO,OAAO,WAM9Bt3B,EAAK3tC,gBAAgB6H,SAASpH,SACtCxD,QAAQ,SAACu5B,GACpBA,EAAY1uB,mBAAmB,SAACQ,GAC9B,GAA4B,kBAAxBA,EAASS,WAEX,OADA4kC,EAAKjnC,WAAWovB,WAAW,uBAAwBxtB,EAAUkuB,GACtDtsB,UAAwBmtB,gBAAgBC,eAgB3D76B,EAAQrG,UAAUqqE,uBAAyB,SAAS5oB,GAClD,IAAMn1C,EAAUm1C,EAAM35C,QACtBK,UAAYC,iBAAiBkE,EAAS+Y,WACtCvlB,KAAKsqE,gBAAgB99D,IAQvBjG,EAAQrG,UAAUsqE,0BAA4B,SAAS7oB,GACrD,IAAMn1C,EAAUm1C,EAAM35C,QACtBK,UAAYC,iBAAiBkE,EAAS+Y,WACtCvlB,KAAKkvE,mBAAmB1iE,IAU1BjG,EAAQrG,UAAUoqE,gBAAkB,SAAS99D,GAC3C,IAAM9F,EAAMyJ,EAAOuC,OAAOlG,GAC1BxM,KAAKynE,iBAAiBhhE,eACpBC,EACAM,UAAS4B,OAAO4D,EAAS,SACvBxM,KAAKwnE,cAAcxnE,KAAKmvE,0BAA2B,KAAK,GAAOnvE,QAUrEuG,EAAQrG,UAAUgvE,mBAAqB,SAAS1iE,GAC9C,IAAM9F,EAAMyJ,EAAOuC,OAAOlG,GAC1BxM,KAAKynE,iBAAiB3gE,iBAAiBJ,GACvC1G,KAAKmvE,6BAUP5oE,EAAQrG,UAAUivE,0BAA4B,WAC5C,GAAKnvE,KAAK0nE,cAAV,CAGA,IAAM96D,EAAW5M,KAAK0nE,cAAc9mC,WAC9BrqB,EAAOvW,KAAKqpE,mBAAmBhuD,cAAczO,GAE7CutB,KACNA,EAAOhvB,UAAQorC,eAAe02B,UAAY12D,EAC1CvW,KAAK+J,kBAAkBK,YAAY+vB,KASrC5zB,EAAQrG,UAAU6tE,qBAAuB,WACvC,IAAMqB,EAAWpvE,KAAKm5B,cAAcqhB,SAASrvC,UAAQorC,eAAe84B,WACpE,IAAKD,EACH,OAAO,KAGT,IAAME,EAAYtvE,KAAKm5B,cAAcw6B,cAAcxoD,UAAQorC,eAAeg5B,aACpEr1B,EAAYl6C,KAAKm5B,cAAc86B,uBAAuB1tD,EAAQwjE,YAAYniB,KAE1E4nB,KACFC,SACJ,QAAkB3rE,IAAdwrE,EAGkB,QADpBG,EAAczvE,KAAK0vE,mBAAmBnpE,EAAQwjE,YAAYniB,IAAK1N,KAE7Ds1B,EAAa3oE,KAAK4oE,QAKpB,IAAK,IAAIjhE,EAAI,EAAGA,EAAI8gE,EAAW9gE,IAET,QADpBihE,EAAczvE,KAAK0vE,mBAAsBnpE,EAAQwjE,YAAYniB,IAAMp5C,EAArD,IAA2D0rC,KAEvEs1B,EAAa3oE,KAAK4oE,GAKxB,GAA2B,GAAvBD,EAAa3uE,OACf,OAAO,KAGT,IAAM8uE,EAAoB3vE,KAAKm5B,cAAcqhB,SAASrvC,UAAQorC,eAAeq5B,mBAG7E,OACEC,QAAST,EACTU,eAJ2C,MAAtBH,GAAmD,UAAtBA,GAKlDH,aAAcA,IAYlBjpE,EAAQrG,UAAUwvE,mBAAqB,SAASviC,EAAQ+M,GAAW,IAAAtB,EAAA54C,KAI3D+vE,KAwBN,OAtBA71B,EAAUnzC,QAAQ,SAACipE,GACjB,GAAIA,GAAY7kE,UAAQorC,eAAe84B,WAAaW,GAAY7kE,UAAQorC,eAAeq5B,mBACnFI,GAAY7kE,UAAQorC,eAAeg5B,aAA2C,GAA5BS,EAASvuD,QAAQ0rB,GADvE,CAIA,IAAMjiC,EAAQ0tC,EAAKzf,cAAcqhB,SAASw1B,GAC1C,GAAK9kE,EAAL,CAIA,IAAIzG,EAAYyG,EACZA,EAAMuW,QAAQ,MAAQ,IACxBhd,EAAYyG,EAAMsK,MAAM,MAG1B,IAAM4V,GACJgiC,SAAU4iB,EAAShhE,QAAQm+B,EAAQ,IACnC1oC,UAAWA,GAEbsrE,EAAQlpE,KAAKukB,OAGP2kD,EAAQlvE,OAAS,GAAMkvE,WAAW,MAY5CxpE,EAAQrG,UAAU0qE,yBAA2B,WAAW,IAAAzxB,EAAAn5C,KAEhDiwE,EAAc5nE,UAAY0I,OAAO/Q,KAAK8nE,cACtCoI,EAAkB7nE,UAAY0I,OAClC/Q,KAAKmoE,gCAEDtsC,KAEAs0C,EAAmBnwE,KAAK+J,kBAAkB0wC,gBAC9CtvC,UAAQorC,eAAe65B,4BACnBC,EAAarwE,KAAK+J,kBAAkB0wC,gBACxCtvC,UAAQorC,eAAe+5B,2BAEzB,GAAIH,GAAoBE,EAKtB,IAHA,IAAMhnC,EAAa8mC,EAAiB36D,MAAMjP,EAAQgqE,eAAeC,MAC3D5hD,EAAOyhD,EAAW76D,MAAMjP,EAAQgqE,eAAeC,MAHnBp2B,EAAA,SAKzB5rC,EAAOC,GAGd,IAAMgiE,EAAwBpnC,EAAW76B,GAEzC,IAAKiiE,EACH,cAGF,IAAMC,EAAkBD,EAAsBj7D,MAC5CjP,EAAQgqE,eAAeI,OACnBt8D,EAAMua,EAAKpgB,GAEXoiE,EAAcC,UAAkBnlC,sBAAsBr3B,GAEtDy8D,EAAuB33B,EAAK5oC,GAAG4F,QACrC0lB,EAASh1B,KAAKiqE,EAAqBz6D,SAE/Bu6D,IAAgBC,UAAkBrsC,KAAKjxB,IACzC08D,EAAYc,mBAAmB18D,GAAKnC,KAClC,SAACkhC,GACC09B,EAAqBh8D,SACnBs+B,eACAs9B,kBACAE,cACAv8D,SAGJ,WAEEy8D,EAAqB3yC,QACnBuyC,kBACAE,cACAv8D,UAIGu8D,IAAgBC,UAAkBrsC,KAAKlG,KAChD2xC,EAAYe,oBAAoB38D,GAAKnC,KACnC,SAACkhC,GACC09B,EAAqBh8D,SACnBs+B,eACAs9B,kBACAE,cACAv8D,SAGJ,WAEEy8D,EAAqB3yC,QACnBuyC,kBACAE,cACAv8D,UAMNy8D,EAAqB3yC,QACnBuyC,kBACAE,cACAv8D,SA7DG7F,EAAI,EAAGC,EAAKmgB,EAAK/tB,OAAQ2N,EAAIC,EAAID,IAAK,cAAA4rC,EAAtC5rC,GAML,MA6DN,OAAOxO,KAAKuQ,GAAG0rB,IAAIJ,GAAU3pB,KAC3B,SAAC++D,GAAc,IAAA9mC,GAAA,EAAAC,GAAA,EAAAC,OAAAvmC,EAAA,IACb,QAAAwmC,EAAAC,EAAuB0mC,EAAvB1pC,OAAAC,cAAA2C,GAAAG,EAAAC,EAAA9C,QAAAC,MAAAyC,GAAA,EAAkC,KAAvB7zB,EAAuBg0B,EAAAp/B,MAIhC,GAAIoL,EAASs6D,cAAgBC,UAAkBrsC,KAAKjxB,IAAK,KAAA83B,GAAA,EAAAC,GAAA,EAAAC,OAAAznC,EAAA,IACvD,QAAA0nC,EAAAC,EAAwBn1B,EAASo6D,gBAAjCnpC,OAAAC,cAAA6D,GAAAG,EAAAC,EAAAhE,QAAAC,MAAA2D,GAAA,EAAkD,KAAvCt8B,EAAuCy8B,EAAAtgC,MAC1CmoC,EAAW48B,EAAYiB,uBAC3B56D,EAAS88B,aAAT,uBACArkC,GAEEskC,GACF68B,EAAgBiB,wCACd99B,EACA/8B,EAAS88B,aACT98B,EAASjC,MAVwC,MAAAuzB,GAAA0D,GAAA,EAAAC,EAAA3D,EAAA,aAAAyD,GAAAI,EAAA5D,QAAA4D,EAAA5D,SAAA,WAAAyD,EAAA,MAAAC,SAiBlD,GAAIj1B,EAASs6D,cAAgBC,UAAkBrsC,KAAKlG,KAAM,KAAA8yC,GAAA,EAAAC,GAAA,EAAAC,OAAAxtE,EAAA,IAI/D,QAAAytE,EAAAC,EAAwBl7D,EAASo6D,gBAAjCnpC,OAAAC,cAAA4pC,GAAAG,EAAAC,EAAA/pC,QAAAC,MAAA0pC,GAAA,EAAkD,KAAvCriE,EAAuCwiE,EAAArmE,MAC1CmoC,EAAW48B,EAAYwB,wBAC3Bn7D,EAAS88B,aAAT,eACArkC,GAEEskC,GACF68B,EAAgBwB,yCACdr+B,EACA/8B,EAAS88B,aACT98B,EAASjC,MAbgD,MAAAuzB,GAAAypC,GAAA,EAAAC,EAAA1pC,EAAA,aAAAwpC,GAAAI,EAAA3pC,QAAA2pC,EAAA3pC,SAAA,WAAAwpC,EAAA,MAAAC,MAtBtD,MAAA1pC,GAAAwC,GAAA,EAAAC,EAAAzC,EAAA,aAAAuC,GAAAI,EAAA1C,QAAA0C,EAAA1C,SAAA,WAAAuC,EAAA,MAAAC,KA4Cf,SAACsnC,OAWLprE,EAAQrG,UAAU4qE,oCAAsC,SAAS59D,GAC/D,IAAMwsB,EAAQxsB,EAAIlF,QAClBK,UAAYC,iBAAiBoxB,EAAOk4C,WACpC5xE,KAAKmrE,yBAAyBzxC,GAC9B15B,KAAK6xE,gCAQPtrE,EAAQrG,UAAUirE,yBAA2B,SAASzxC,GACpD1yB,UAAS4B,OACP8wB,EAAMo4C,sBACN,MACA9xE,KAAK6xE,6BACL7xE,MAEFgH,UAAS4B,OACP8wB,EAAMo4C,sBACN,SACA9xE,KAAK6xE,6BACL7xE,OAWJuG,EAAQrG,UAAU6xE,kBAAoB,SAASrjE,EAAOnH,GACpD,GAAImH,aAAiB8wB,UAAc,KAAAwyC,GAAA,EAAAC,GAAA,EAAAC,OAAApuE,EAAA,IACjC,QAAAquE,EAAAC,EAAgB1jE,EAAMV,YAAY4yB,WAAlC2G,OAAAC,cAAAwqC,GAAAG,EAAAC,EAAA3qC,QAAAC,MAAAsqC,GAAA,EAA8C,KAAnC5tD,EAAmC+tD,EAAAjnE,MAE5C,GADA7C,UAAY0I,OAAOqT,GACfpkB,KAAK+xE,kBAAkB3tD,EAAG7c,GAC5B,OAAO,GAJsB,MAAAqgC,GAAAqqC,GAAA,EAAAC,EAAAtqC,EAAA,aAAAoqC,GAAAI,EAAAvqC,QAAAuqC,EAAAvqC,SAAA,WAAAoqC,EAAA,MAAAC,GAOjC,OAAO,EAEP,OAAOxjE,EAAMuqB,IAAI,kBAAoB1xB,GASzChB,EAAQrG,UAAU6qE,uCAAyC,SAAS79D,GAClE,IAAMwsB,EAAQxsB,EAAIlF,QAClBK,UAAYC,iBAAiBoxB,EAAOk4C,WACpC5xE,KAAKqyE,2BAA2B34C,GAChC15B,KAAK6xE,gCAQPtrE,EAAQrG,UAAUmyE,2BAA6B,SAAS34C,GACtD1yB,UAAS6F,SACP6sB,EAAMo4C,sBACN,MACA9xE,KAAK6xE,6BACL7xE,MAEFgH,UAAS6F,SACP6sB,EAAMo4C,sBACN,SACA9xE,KAAK6xE,6BACL7xE,OASJuG,EAAQrG,UAAU2xE,6BAA+B,WAAW,IAAAn4B,EAAA15C,KAEtDA,KAAK2qE,qCACP3qE,KAAK41C,UAAU7pC,OAAO/L,KAAK2qE,qCAG7B3qE,KAAK2qE,oCAAsC3qE,KAAK41C,UAAU,WAAM,IAAA08B,EACxD78B,KACA7mB,KAFwD2jD,GAAA,EAAAC,GAAA,EAAAC,OAAA3uE,EAAA,IAK9D,QAAA4uE,EAAAC,EAAuBj5B,EAAKyuB,+BAA+B8C,UAA3D1jC,OAAAC,cAAA+qC,GAAAG,EAAAC,EAAAlrC,QAAAC,MAAA6qC,GAAA,EAAsE,KAA3DrH,EAA2DwH,EAAAxnE,MAGpE0jB,EAAK/nB,KAAKqkE,EAAS72D,KAGnB,IAAMu+D,KAN8DC,GAAA,EAAAC,GAAA,EAAAC,OAAAjvE,EAAA,IAOpE,QAAAkvE,EAAAC,EAA4B/H,EAASjc,YAArC1nB,OAAAC,cAAAqrC,GAAAG,EAAAC,EAAAxrC,QAAAC,MAAAmrC,GAAA,EAAkD,KAAvCK,EAAuCF,EAAA9nE,MAChD7C,UAAYC,iBAAiB4qE,EAAerC,WAK5C,IAAM9hE,EAAYmkE,EAAchpC,mBAAmB,GACnD0oC,EAAmB/rE,KAAKkI,IAd0C,MAAA64B,GAAAkrC,GAAA,EAAAC,EAAAnrC,EAAA,aAAAirC,GAAAI,EAAAprC,QAAAorC,EAAAprC,SAAA,WAAAirC,EAAA,MAAAC,GAgBpEt9B,EAAM5uC,KAAK+rE,EAAmBx+D,KAAK7N,EAAQgqE,eAAeI,SArBE,MAAA/oC,GAAA4qC,GAAA,EAAAC,EAAA7qC,EAAA,aAAA2qC,GAAAI,EAAA9qC,QAAA8qC,EAAA9qC,SAAA,WAAA2qC,EAAA,MAAAC,GAAA,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAAvvE,EAAA,IAyB9D,QAAAwvE,EAAAC,EAAwB75B,EAAKyuB,+BAA+BiD,WAA5D7jC,OAAAC,cAAA2rC,GAAAG,EAAAC,EAAA9rC,QAAAC,MAAAyrC,GAAA,EAAwE,KAA7D9H,EAA6DiI,EAAApoE,MAGtE0jB,EAAK/nB,KAAKwkE,EAAUh3D,KAGpB,IAAMm/D,KANgEC,GAAA,EAAAC,GAAA,EAAAC,OAAA7vE,EAAA,IAOtE,QAAA8vE,EAAAC,EAA6BxI,EAAUpc,YAAvC1nB,OAAAC,cAAAisC,GAAAG,EAAAC,EAAApsC,QAAAC,MAAA+rC,GAAA,EAAoD,KAAzCK,EAAyCF,EAAA1oE,MAClD7C,UAAY0I,OAAO+iE,EAAe/sC,WAClCysC,EAAoB3sE,KAAKitE,EAAe/sC,YAT4B,MAAAa,GAAA8rC,GAAA,EAAAC,EAAA/rC,EAAA,aAAA6rC,GAAAI,EAAAhsC,QAAAgsC,EAAAhsC,SAAA,WAAA6rC,EAAA,MAAAC,GAWtEl+B,EAAM5uC,KAAK2sE,EAAoBp/D,KAAK7N,EAAQgqE,eAAeI,SApCC,MAAA/oC,GAAAwrC,GAAA,EAAAC,EAAAzrC,EAAA,aAAAurC,GAAAI,EAAA1rC,QAAA0rC,EAAA1rC,SAAA,WAAAurC,EAAA,MAAAC,GAwC9D35B,EAAK3vC,kBAAkBK,aAAvB2pE,EAAAzB,KACGnnE,UAAQorC,eAAe65B,2BAA6B36B,EAAMrhC,KACzD7N,EAAQgqE,eAAeC,OAF3BuD,EAAAzB,EAIGnnE,UAAQorC,eAAe+5B,0BAA4B1hD,EAAKxa,KACvD7N,EAAQgqE,eAAeC,OAL3B8B,IAUA54B,EAAKixB,oCAAsC,QAS/CpkE,EAAQrG,UAAU82C,YAAc,SAASF,GAAQ,IAAAk9B,EAAAh0E,KACzCuR,EAAOlJ,UAAY0I,OAAO/Q,KAAKm5B,cAAcghB,gBADJ85B,GAAA,EAAAC,GAAA,EAAAC,OAAArwE,EAAA,IAE/C,QAAAswE,EAAAC,EAAkB9iE,EAAlBg2B,OAAAC,cAAAysC,GAAAG,EAAAC,EAAA5sC,QAAAC,MAAAusC,GAAA,EAAwB,KAAbttE,EAAaytE,EAAAlpE,MACtB,GAAIvE,EAAI2tE,WAAW/tE,EAAQwjE,YAAYG,mBAAoB,CACzD,IAAMh/D,EAAQvE,EAAI6X,UAAUjY,EAAQwjE,YAAYG,kBAAkBrpE,QADT0zE,GAAA,EAAAC,GAAA,EAAAC,OAAA3wE,EAAA,IAEzD,QAAA4wE,EAAAC,EAAoB79B,EAApBvP,OAAAC,cAAA+sC,GAAAG,EAAAC,EAAAltC,QAAAC,MAAA6sC,GAAA,EAA4B,CAC1B,GAD0BG,EAAAxpE,MAChB3D,MAAQ2D,EAAO,CACvBlL,KAAK+J,kBAAkBusC,YAAY3vC,GACnC,QALqD,MAAAihC,GAAA4sC,GAAA,EAAAC,EAAA7sC,EAAA,aAAA2sC,GAAAI,EAAA9sC,QAAA8sC,EAAA9sC,SAAA,WAAA2sC,EAAA,MAAAC,IAS3D,GAAI9tE,EAAI2tE,WAAW/tE,EAAQwjE,YAAYM,oBAAqB,CAC1D,IAAMn/D,EAAQvE,EAAI6X,UAAUjY,EAAQwjE,YAAYM,mBAAmBxpE,QADT+zE,GAAA,EAAAC,GAAA,EAAAC,OAAAhxE,EAAA,IAE1D,QAAAixE,EAAAC,EAAoBl+B,EAApBvP,OAAAC,cAAAotC,GAAAG,EAAAC,EAAAvtC,QAAAC,MAAAktC,GAAA,EAA4B,CAC1B,GAD0BG,EAAA7pE,MAChB3D,MAAQ2D,EAAO,CACvBlL,KAAK+J,kBAAkBusC,YAAY3vC,GACnC,QALsD,MAAAihC,GAAAitC,GAAA,EAAAC,EAAAltC,EAAA,aAAAgtC,GAAAI,EAAAntC,QAAAmtC,EAAAntC,SAAA,WAAAgtC,EAAA,MAAAC,MAZf,MAAAltC,GAAAssC,GAAA,EAAAC,EAAAvsC,EAAA,aAAAqsC,GAAAI,EAAAxsC,QAAAwsC,EAAAxsC,SAAA,WAAAqsC,EAAA,MAAAC,GAsB/Cn0E,KAAK41C,UAAU,WACb,GAAKo+B,EAAKrjE,KAAV,CAGA,IAAMjC,EAAQslE,EAAKrjE,KAAK+iC,gBACxBrrC,UAAY0I,OAAOrC,GALA,IAAAumE,GAAA,EAAAC,GAAA,EAAAC,OAAArxE,EAAA,IAMnB,QAAAsxE,EAAAC,EAAkB9jE,EAAlBg2B,OAAAC,cAAAytC,GAAAG,EAAAC,EAAA5tC,QAAAC,MAAAutC,GAAA,EAAwB,KAAbtuE,EAAayuE,EAAAlqE,MACtB,GAAIvE,EAAI2tE,WAAW/tE,EAAQwjE,YAAYC,aAAc,CACnD,IAAM9+D,EAAQvE,EAAI6X,UAAUjY,EAAQwjE,YAAYC,YAAYnpE,QACvDmzE,EAAKjC,kBAAkBrjE,EAAOxD,IACjC8oE,EAAKjqE,kBAAkBusC,YAAY3vC,GAGvC,GAAIA,EAAI2tE,WAAW/tE,EAAQwjE,YAAYK,cAAe,CACpD,IAAMl/D,EAAQvE,EAAI6X,UAAUjY,EAAQwjE,YAAYK,aAAavpE,QACxDmzE,EAAKjC,kBAAkBrjE,EAAOxD,IACjC8oE,EAAKjqE,kBAAkBusC,YAAY3vC,KAhBtB,MAAAihC,GAAAstC,GAAA,EAAAC,EAAAvtC,EAAA,aAAAqtC,GAAAI,EAAAxtC,QAAAwtC,EAAAxtC,SAAA,WAAAqtC,EAAA,MAAAC,QAwBvB5uE,EAAQW,OAASC,QAAQD,OAAO,gBAC9BouE,UAAuB/tE,KACvB+K,UAAepL,OAAOK,KACtBkjE,UAAgBvjE,OAAOK,KACvBguE,UAAiBhuE,KACjBiuE,UAAoBtuE,OAAOK,KAC3ByM,UAAwB9M,OAAOK,OAGjC4D,UAAQjE,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,MAE5ChB,EAAQW,OAAOE,QAAQ,eAAgBb,GAMvCA,EAAQkvE,2BACNxzD,QAAS,WAMX1b,EAAQwjE,aACNoD,WAAY,OACZnD,YAAa,eACbE,kBAAmB,qBACnBG,mBAAoB,sBACpBD,aAAc,gBACdxiB,IAAK,QAQPrhD,EAAQgqE,gBACNC,KAAM,IACNG,MAAO,KAITpqE,EAAQW,OAAOgE,MAAM,0BAKrB,WACE,IAAMwqE,KACN,IAAK,IAAMC,KAAQpvE,EAAQwjE,YACzB2L,EAAO7uE,KAAK,IAAIg0C,OAAUt0C,EAAQwjE,YAAY4L,GAAlC,OAEd,IAAK,IAAMC,KAAQzqE,UAAQorC,eACzBm/B,EAAO7uE,KAAK,IAAIg0C,OAAOt0C,EAAQwjE,YAAY6L,KAE7CvuE,UAASH,OAAOgE,MAAM,oBAAqBwqE,GAR7C,aAYenvE,oGC9hDf,QAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,KACY6J,0JAAZ7J,EAAA,uDAgBA,IAAMC,EAAU,SAAS+E,GAEvBgtC,UAAmB/3C,KAAKP,MAMxBA,KAAKyQ,SAAWnF,EAEhB,IAAMuqE,EAAY1uE,QAAQa,QAAQ,yCAClCb,QAAQa,QAAQ8tE,SAASC,MAAM79D,OAAO29D,GAMtC71E,KAAKg2E,WAAaH,EAMlB71E,KAAK0Q,yDAIPP,EAAOiI,SAAS7R,EAAS+xC,WAQzB/xC,EAAQ0vE,eAAiB,IAazB1vE,EAAQrG,UAAUm4C,OAAS,SAASle,GAClCn6B,KAAKmiD,KAAKhoB,IAQZ5zB,EAAQrG,UAAUwM,MAAQ,WACxB,IAAK,IAAMhG,KAAO1G,KAAK0Q,OACrB1Q,KAAKk2E,yBAAyBl2E,KAAK0Q,OAAO0f,SAAS1pB,EAAK,OAQ5DH,EAAQrG,UAAUgiD,YAAc,SAAS9mB,GAAS,IAAA9pB,EAAAtR,KAC1CqT,EAAO+nB,EAAQ/nB,KACrBhL,UAAYi3B,aAAajsB,EAAM,uBAE/B,IAAM8iE,GAAc,QAAS,QAC7B,OAAQ9iE,GACN,KAAKilC,UAAmB9T,KAAK6d,MAC3B8zB,EAAWtvE,KAAK,gBAChB,MACF,KAAKyxC,UAAmB9T,KAAK+T,YAC3B49B,EAAWtvE,KAAK,cAChB,MACF,KAAKyxC,UAAmB9T,KAAKge,QAC3B2zB,EAAWtvE,KAAK,iBAChB,MACF,KAAKyxC,UAAmB9T,KAAKie,QAC3B0zB,EAAWtvE,KAAK,iBAMpB,IAAMuvE,EAAKjvE,QAAQa,QAAR,eAA+BmuE,EAAW/hE,KAAK,KAA/C,aAGPgnB,EAAQi7C,OACElvE,QAAQa,QAAQozB,EAAQi7C,QAExBr2E,KAAKg2E,YAGT99D,OAAOk+D,GACjBA,EAAGp+D,KAAKojB,EAAQgd,KAAKk+B,SAAS,MAE9B,IAAMC,OAA0BzyE,IAAlBs3B,EAAQm7C,MAAsBn7C,EAAQm7C,MAClDhwE,EAAQ0vE,eAEJjlE,GACJolE,MAKI1vE,EAAMyJ,EAAOuC,OAAO0jE,GAC1BplE,EAAKqF,QAAUrW,KAAKyQ,SAAS,WAC3B2lE,EAAGn4C,MAAM,gBACF3sB,EAAKZ,OAAOhK,IAClB6vE,GAEHv2E,KAAK0Q,OAAOhK,GAAOsK,GASrBzK,EAAQrG,UAAUg2E,yBAA2B,SAASllE,GACpD,IAAMolE,EAAKplE,EAAKolE,GACV//D,EAAUrF,EAAKqF,QACf3P,EAAMyJ,EAAOuC,OAAO0jE,GAG1BA,EAAGn4C,MAAM,SAITj+B,KAAKyQ,SAAS1E,OAAOsK,UAGdrW,KAAK0Q,OAAOhK,KAgBrBH,EAAQW,OAASC,QAAQD,OAAO,wBAGjBE,QAAQ,mBAAoBb,GAE3Cc,UAASH,OAAOI,SAAST,KAAKN,EAAQW,OAAOK,gBAG9BhB,6kBCrLfD,EAAA,SACAA,EAAA,MACAA,EAAA,OACAA,EAAA,UACAA,EAAA,KACYkT,0JAAZlT,EAAA,uDAEA,IAAMC,cAaJ,SAAAA,EAAY+G,gGAASs1B,CAAA5iC,KAAAuG,GAAA,IAAA+K,mKAAAuxB,CAAA7iC,MAAAuG,EAAAu8B,WAAAniC,OAAAoiC,eAAAx8B,IAAAhG,KAAAP,KAEbsN,IAEAkpE,EAAWlpE,EAAQkpE,SAJN,OAanBllE,EAAK+rD,OAML/rD,EAAKmlE,iBAAmBD,EAASv9C,IAAI,mBAMrC3nB,EAAKd,WAAagmE,EAASv9C,IAAI,cAQ/B3nB,EAAKolE,4BAGLplE,EAAKqlE,QApCcrlE,EAbjB,gUAAAm3B,CAAAliC,EAAwBqwE,WAAxBjuC,EAAApiC,IAAAI,IAAA,QAAAuE,MAAA,WAwDF7C,UAAY0I,OACV/Q,KAAKivD,YAAYpuD,OAAQ,yCAFrB,IAAAqmC,GAAA,EAAAC,GAAA,EAAAC,OAAAtjC,EAAA,IAIN,QAAAujC,EAAAC,EAAyBtnC,KAAKivD,YAA9B1nB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2C,KAAhCjG,EAAgCoG,EAAAn8B,MACzC7C,UAAYC,iBAAiB24B,EAAY4vC,WACzC7wE,KAAK62E,oBAAoB51C,IANrB,MAAA2G,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,OAvDJzgC,IAAA,UAAAuE,MAAA,WAoEM,IAAAo+B,GAAA,EAAAC,GAAA,EAAAC,OAAA1lC,EAAA,IACR,QAAA2lC,EAAAC,EAAyB1pC,KAAKivD,YAA9B1nB,OAAAC,cAAA8B,GAAAG,EAAAC,EAAAjC,QAAAC,MAAA4B,GAAA,EAA2C,KAAhCrI,EAAgCwI,EAAAv+B,MACzC7C,UAAYC,iBAAiB24B,EAAY4vC,WACzC7wE,KAAK82E,sBAAsB71C,IAHrB,MAAA2G,GAAA2B,GAAA,EAAAC,EAAA5B,EAAA,aAAA0B,GAAAI,EAAA7B,QAAA6B,EAAA7B,SAAA,WAAA0B,EAAA,MAAAC,GAKRZ,EAAAriC,EAAArG,UAAA4iC,WAAAniC,OAAAoiC,eAAAx8B,EAAArG,WAAA,UAAAF,MAAAO,KAAAP,SAzEE2G,IAAA,gBAAAuE,MAAA,SAiGU+1B,GACZ2H,EAAAriC,EAAArG,UAAA4iC,WAAAniC,OAAAoiC,eAAAx8B,EAAArG,WAAA,gBAAAF,MAAAO,KAAAP,KAAoBihC,GACpB54B,UAAYC,iBAAiB24B,EAAY4vC,WACzC7wE,KAAK62E,oBAAoB51C,MApGvBt6B,IAAA,sBAAAuE,MAAA,SA2GgB+1B,GAElB,IAAMoR,EAAKpR,EAAWoR,GAEtBryC,KAAK02E,yBAAyBrkC,GAAMryC,KAAKwQ,WAAWoC,OAClD,kBAAMquB,EAAWmR,SACjBpyC,KAAK+2E,+BAA+B3xE,KAAKpF,OAGtCA,KAAKq9D,QAKRr9D,KAAKq9D,OAAOpkC,IAAI,kBAAkBpyB,KAAKwrC,GACvCryC,KAAKg3E,gBALLh3E,KAAKq9D,OAASr9D,KAAKy2E,iBAAiBvkC,kCAClCjR,MAtHFt6B,IAAA,iCAAAuE,MAAA,SAmI2BA,EAAO+rE,QACtBnzE,IAAVoH,GAAuBA,IAAU+rE,GACnCj3E,KAAKg3E,kBArILrwE,IAAA,eAAAuE,MAAA,WA6IF,IAAMwD,EAAQ1O,KAAK0O,MACf26B,KAFSQ,GAAA,EAAAC,GAAA,EAAAC,OAAAjmC,EAAA,IAKb,QAAAkmC,EAAAC,EAAyBjqC,KAAKivD,YAA9B1nB,OAAAC,cAAAqC,GAAAG,EAAAC,EAAAxC,QAAAC,MAAAmC,GAAA,EAA2C,KAAhC5I,EAAgC+I,EAAA9+B,MACzC7C,UAAYC,iBAAiB24B,EAAY4vC,WACrC5vC,EAAWmR,UACb/I,EAAaA,EAAWnoC,OAAO+/B,EAAWiJ,sBARjC,MAAAtC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,aAAAiC,GAAAI,EAAApC,QAAAoC,EAAApC,SAAA,WAAAiC,EAAA,MAAAC,GAab/pC,KAAKy2E,iBAAiBjhC,oBAAoB9mC,EAAO26B,EAAWj1B,KAAK,SAzJ/DzN,IAAA,mBAAAuE,MAAA,SA+Ja+1B,GACf2H,EAAAriC,EAAArG,UAAA4iC,WAAAniC,OAAAoiC,eAAAx8B,EAAArG,WAAA,mBAAAF,MAAAO,KAAAP,KAAuBihC,GACvB54B,UAAYC,iBAAiB24B,EAAY4vC,WACzC7wE,KAAK82E,sBAAsB71C,MAlKzBt6B,IAAA,wBAAAuE,MAAA,SAyKkB+1B,GAEpB,IAAMoR,EAAKpR,EAAWoR,GAChB3jC,EAAQ1O,KAAK0O,OAInBwoE,EADmBl3E,KAAK02E,yBAAyBrkC,aAE1CryC,KAAK02E,yBAAyBrkC,GAGrC74B,EAAQ0Q,OAAOlqB,KAAKivD,YAAahuB,GAGjC,IAAMpG,EAAM76B,KAAKy2E,iBAAiB/gC,kBAAkBhnC,GAChDmsB,GACFrhB,EAAQ0Q,OAAO2Q,EAAKwX,GAGlBryC,KAAKivD,YAAYpuD,QACnBb,KAAKg3E,kBA7LLrwE,IAAA,QAAAsyB,IAAA,WAsFF,OAAOj5B,KAAKq9D,WAtFV92D,eAmMSA,kVC1MfD,EAAA,MACAA,EAAA,yDAEA,IAAMC,cAQJ,SAAAA,EAAY+G,gGAASs1B,CAAA5iC,KAAAuG,GAAA,IAAA+K,mKAAAuxB,CAAA7iC,MAAAuG,EAAAu8B,WAAAniC,OAAAoiC,eAAAx8B,IAAAhG,KAAAP,KAEbsN,IAFa,OAQnBgE,EAAKwzC,KAAOx3C,EAAQ+G,IARD/C,EARjB,gUAAAm3B,CAAAliC,EAAwBqrE,WAAxBjpC,EAAApiC,IAAAI,IAAA,MAAAsyB,IAAA,WAwBF,OAAOj5B,KAAK8kD,SAxBVv+C,eA6BSA","file":"simple.c2a96a323583a3ea0afc.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\nngeoBase.module.requires.push(exports.name);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nngeoBase.module.requires.push(exports.name);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\ngmfBase.module.requires.push(exports.name);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoBase.module.name, // Change me when all dependencies are in a module.\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\nexports.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\ngmfBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module gmfapp.simple\n */\nconst exports = {};\n\nimport './simple.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfBase.module.name,\n  gmfMapComponent.name,\n]);\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [0, 0],\n      zoom: 4\n    })\n  });\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/simple.js","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\ngmfBase.module.requires.push(exports.module.name);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoBase.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\nngeoBase.module.requires.push(exports.module.name);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}