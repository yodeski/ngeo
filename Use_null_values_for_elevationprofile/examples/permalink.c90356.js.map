{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./examples/permalink.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","32","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","FeatureHashStyleType","LINE_STRING","POINT","POLYGON","FeatureHash_exports","opt_options","TextFeature","this","options","undefined","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","defaultValues_","defaultValues","util","StyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","feature","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","goog_asserts_prod","assert","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","Circle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","color","fillColorHex","utils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","split","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","ii","readPointGeometry_","readMultiPointGeometry_","readPolygonGeometry_","rings","end","readMultiPolygonGeometry_","endss","polygons","jj","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","Fill","Stroke","width","fill","stroke","Text","Style","image","setStyleProperties_","geometry","getGeometry","FeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","array","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","join","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","Feature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","_this","features","forEach","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","replace","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","FeatureHash","permalink_exports","angular","map_module","debounce","statemanager_module","mapComponent","controller","bindings","map","template","component","MapComponentController","ngeoLocation","ngeoDebounce","ngeoLocation_","ngeoDebounce_","$onInit","view","getView","zoom","getParam","center","setCenter","setZoom","updateParams","z","on","e","getCenter","params","getZoom","drawComponent","layer","DrawComponentController","$scope","scope_","featureSeq_","interaction","_this2","vectorSource","getSource","Draw","type","source","setActive","addInteraction","decorate","fhFormat","getFeatures","encodedFeatures","$applyAsync","addFeatures","clearLayer","clear","deleteParam","MainController","Map","layers","Tile","OSM","source_Vector","vectorLayer","Vector","setMap","__webpack_exports__"],"mappings":"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","file":"permalink.c90356.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t32: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([497,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) && options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  return new olGeomLineString(flatCoordinates, olGeomGeometryLayout.XY);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  return new olGeomMultiLineString(flatCoordinates, olGeomGeometryLayout.XY, ends);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  return new olGeomPoint(flatCoordinates, olGeomGeometryLayout.XY);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  return new olGeomMultiPoint(flatCoordinates, olGeomGeometryLayout.XY);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  return new olGeomPolygon(flatCoordinates, olGeomGeometryLayout.XY, ends);\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  return new olGeomMultiPolygon(flatCoordinates, olGeomGeometryLayout.XY, endss);\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module app.permalink\n */\nconst exports = {};\n\nimport './permalink.css';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\n\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport olMap from 'ol/Map.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name,\n  ngeoMiscDebounce.name,\n  ngeoStatemanagerModule.name,\n]);\n\n/**\n * An application-specific map component that updates the URL in the browser\n * address bar when the map view changes. It also sets the initial view based\n * on the URL query params at init time.\n *\n * This component gets a reference to the map instance through the \"app-map\"\n * attribute.\n *\n * @type {!angular.Component}\n */\nexports.mapComponent = {\n  controller: 'AppMapController as ctrl',\n  bindings: {\n    'map': '=appMap'\n  },\n  template: '<div ngeo-map=ctrl.map></div>'\n};\n\n\nexports.module.component('appMap', exports.mapComponent);\n\n\n/**\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @ngInject\n */\nexports.MapComponentController = function(ngeoLocation, ngeoDebounce) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n};\n\nexports.module.controller('AppMapController', exports.MapComponentController);\n\nexports.MapComponentController.prototype.$onInit = function() {\n  const view = this.map.getView();\n\n  let zoom = this.ngeoLocation_.getParam('z');\n  zoom = zoom !== undefined ? +zoom : 4;\n\n  const x = this.ngeoLocation_.getParam('x');\n  const y = this.ngeoLocation_.getParam('y');\n  const center = (x !== undefined) && (y !== undefined) ?\n    [+x, +y] : [0, 0];\n\n  view.setCenter(center);\n  view.setZoom(zoom);\n\n  this.ngeoLocation_.updateParams({\n    'z': zoom,\n    'x': Math.round(center[0]),\n    'y': Math.round(center[1])\n  });\n\n  view.on('propertychange',\n    this.ngeoDebounce_(\n      /**\n       * @param {ol.Object.Event} e Object event.\n       */\n      (e) => {\n        const center = view.getCenter();\n        const params = {\n          'z': view.getZoom(),\n          'x': Math.round(center[0]),\n          'y': Math.round(center[1])\n        };\n        this.ngeoLocation_.updateParams(params);\n      }, 300, /* invokeApply */ true));\n};\n\n/**\n * A draw component that adds a simple draw tool.\n *\n * @type {!angular.Component}\n */\nexports.drawComponent = {\n  controller: 'AppDrawController as ctrl',\n  bindings: {\n    'map': '=appDrawMap',\n    'layer': '=appDrawLayer'\n  },\n  template:\n      '<label>Enable drawing:' +\n      '<input type=\"checkbox\" ng-model=\"ctrl.interaction.active\" />' +\n      '</label><br>' +\n      '<button ng-click=\"ctrl.clearLayer()\">Clear layer</button>'\n};\n\n\nexports.module.component('appDraw', exports.drawComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @constructor\n * @export\n * @ngInject\n */\nexports.DrawComponentController = function($scope, ngeoLocation) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   */\n  this.layer;\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.featureSeq_ = 0;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.interaction;\n};\n\nexports.DrawComponentController.prototype.$onInit = function() {\n  const vectorSource = this.layer.getSource();\n\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: vectorSource\n  });\n\n  this.interaction.setActive(false);\n  this.map.addInteraction(this.interaction);\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  this.interaction.on('drawend', function(e) {\n    e.feature.set('id', ++this.featureSeq_);\n  }, this);\n\n  // Deal with the encoding and decoding of features in the URL.\n\n  const fhFormat = new ngeoFormatFeatureHash();\n\n  vectorSource.on('addfeature', (e) => {\n    const feature = e.feature;\n    feature.setStyle(new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: [255, 0, 0, 1],\n        width: 2\n      })\n    }));\n    const features = vectorSource.getFeatures();\n    const encodedFeatures = fhFormat.writeFeatures(features);\n    this.scope_.$applyAsync(() => {\n      this.ngeoLocation_.updateParams({'features': encodedFeatures});\n    });\n  });\n\n  const encodedFeatures = this.ngeoLocation_.getParam('features');\n  if (encodedFeatures !== undefined) {\n    const features = fhFormat.readFeatures(encodedFeatures);\n    this.featureSeq_ = features.length;\n    vectorSource.addFeatures(features);\n  }\n};\n\n\n/**\n * Clear the vector layer.\n * @export\n */\nexports.DrawComponentController.prototype.clearLayer = function() {\n  this.layer.getSource().clear(true);\n  this.featureSeq_ = 0;\n  this.ngeoLocation_.deleteParam('features');\n};\n\nexports.module.controller('AppDrawController', exports.DrawComponentController);\n\n\n/**\n * @constructor\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ]\n  });\n\n\n  const vectorSource = new olSourceVector();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  this.vectorLayer.setMap(this.map);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n"],"sourceRoot":""}