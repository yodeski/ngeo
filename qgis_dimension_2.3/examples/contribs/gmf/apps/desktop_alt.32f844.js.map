{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/rule/Rule.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./src/CustomEvent.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./src/misc/filters.js","webpack:///./src/query/MapQuerent.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/statemanager/Location.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/print/Utils.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/search/searchDirective.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/googlestreetview/component.js","webpack:///./src/googlestreetview/module.js","webpack:///./src/routing/NominatimService.js","webpack:///./src/routing/RoutingService.js","webpack:///./src/routing/NominatimInputComponent.js","webpack:///./src/routing/RoutingFeatureComponent.js","webpack:///./src/routing/RoutingComponent.js","webpack:///./src/routing/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/desktop_alt/Controller.js","webpack:///./src/routing/routing.html","webpack:///./src/routing/routingfeature.html","webpack:///./src/routing/nominatiminput.html","webpack:///./src/googlestreetview/component.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","assert","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","service","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","_createClass","key","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","time","range","lower","upper","end","start","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","stroke","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","radius","fill","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","line","getRadiusLine","getFormattedLength","geometry","angle","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","points","innerMultiCoordinates","multiCoordinates","coordinates","getCoordinates","concat","supported","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","export_","fileName","opt_mimeType","mimeType","clones","clone","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","toolContext","activePropertyName","getActive","setActive","newVal","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","appendPoint","appendLineString","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","source_","useSpatialIndex","layer_","source","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","getLayer","getFeatureOverlay","styleFunction","init","setMap","defaultFunction","resolution","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","opt_customOptions","FORMAT","LAYERS","olServerType","replace","assign","serverType","crossOrigin","updateParams","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","preload","read","updateDimensions","setSource","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","sublayers","sublayer","getFlatLayers_","computedOpacity","getOpacity","getLayerByName","found","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","round","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","dataSource_","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","c2","point","opt_template","dragging","helpMsg","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","decimal","unit","str_number","groups","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","$","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this9","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","$applyAsync","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","ngeoWMSTime","RuleHelper_classCallCheck","ngeoFeatureHelper_","ngeoWMSTime_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","field","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","run","$templateCache","put","component_","scope","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","directive","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","scope_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","modify_","modifyToolActivate","menu_","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","getFeaturesCollection","deleteCondition","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","handleFeatureAdd_","handleMapSelectActiveChange_","newValue","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","refresh","close","checkForModifications_","scopeApply","$apply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","mask","geomAttr","getGeometryAttribute","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","registerTool","unregisterTool","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","hitTolerance","buffer","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","open","preventDefault","stopPropagation","_this10","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterGroup","activateTool","deactivateTool","hasActiveTool","btnGroupComponent_","$parse","restrict","link","attrs","buttons_","buttonModel","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","setGeometryType","setAttributeByXsdType_","enumerations","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","complexType","complexContent","Querent","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","http_","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","hash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","bbox","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","extend","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","centerFeatures_","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","getGeometryCenterPoint_","centerFeature","keyCode","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","getDefaultModifyStyleFunction","handleDown_","handleDragEvent","handleDrag_","handleUp_","getCenterCoordinate_","willModifyFeatures_","f","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","char","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","iPart","iSec","vYear","vDigit","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","getScale","opt_rotation","frameState","viewState","viewportWidth","pixelRatio","viewportHeight","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","fillStyle","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","y1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","max","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","br","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","handleDimensionsChange_","layerIds","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","dimensions_filters","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","_source$updateParams","Tile","layersList","hasFilter","dsLayer","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","WfsPermalink","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","gmfExternalDataSourcesManager_","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","serviceType","startWorking_","stopWorking_","load","opt_hasError","nameAndSize","fileSize","importdatasourceComponent","module_exports","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayersUrl","promises_","handleGetAttributes_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","getFeaturesWithComparisonFilters","layerId","geoJSON","writeFeature","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","ol_format_filter_js__WEBPACK_IMPORTED_MODULE_2__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_3__","WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","proj4__WEBPACK_IMPORTED_MODULE_0__","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","Proj","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","defs","setExtent","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","query","empty","datasetsempty","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","radius2","mapTooltip_","featureHashFormat_","encodeStyles","propertiesType","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","getCapabilitiesDefer","responses","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","OpenLayersLayerProperties","regexp","key1","key2","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","opt_cancelP","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","mapViewConfig","mapPixelRatio","controls","mapControls","getElementById","zoomInTipLabel","zoomOutTipLabel","tipLabel","mapInteractions","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","editFeatureActivate","googleStreetViewActivate","scaleSelectorOptions","profileLine","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","MultiLineString","MultiPoint","MultiPolygon","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","getStyleFunction","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","geometryType","featureStyleProp","styleId","encodeVectorStyle","geoJson","styleType","styleObject","symbolizers","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","getColor","rgbArrayToHex","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","getWidth","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontStyle","getFont","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","fillColorRgba","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","getOpacityOrInherited_","useNativeAngle","href","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","editFeatureSelectorComponent","EditFeature","XSDAttributes","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","encodedStyles","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","fillColorHex","strokeColorHex","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","searchDirective","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","optionsLegendType","optionsType","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","gmfLegendOptions_","useBbox","legend","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","dpis","rawType","simpleAttributes","previousAttributes","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","icons","getMetadataLegendImage_","serverType_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","filter_","interaction_","handleDrawEnd_","toMulti","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","gmfSyncLayertreeMap_","groupNodeStates_","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","ngeoGooglestreetviewTemplateUrl","featureStyle","noDataAtLocation","panorama_","google","maps","StreetViewPanorama","pov","heading","pitch","panoramaListener_","point_","streetViewService_","StreetViewService","panoramaPositionChanging_","handleLocationChange_","hasLocation","handleReadyChange_","hasData","oldShow","addListener","handlePanoramaPositionChange_","removeListener","oldLocation","lonLat","toLonLat_","getPanorama","lat","lng","handleStreetViewServiceGetPanorama_","ready","oldReady","panorama","StreetViewStatus","OK","latLng","getPosition","fromLonLat_","googlestreetview_module","NominatimService_exports","nominatimUrl_","searchDefaultParams_","typeaheadDebounceDelay_","typeaheadSourceDebounced","typeaheadSource_","option","syncResults","asyncResults","lon","display_name","NominatimService","RoutingService_exports","routingOptions_","ngeoOsrmBackendUrl_","backendUrl","protocolVersion_","getRoute","getNearest","RoutingService","NominatimInputComponent_exports","ngeoRoutingNominatimInputComponentTemplateUrl","ngeoNominatimService","onSelect","NominatimInputComponent_component","NominatimInputComponent","RoutingFeatureComponent_exports","ngeoRoutingFeatureTemplateUrl","ngeoNominatimService_","featureLabel","onChange","vectorFeatures_","modifyFeature_","draw_","onSelect_","errorMessage","snapFeature_","onFeatureChange_","setFeature_","transformedCoordinate","newCoordinates","getLonLatFromPoint_","onSuccess","onError","RoutingFeatureComponent","RoutingComponent_exports","ngeoRoutingTemplateUrl","ngeoRoutingService","ngeoRoutingService_","routingProfiles","profiles","selectedRoutingProfile","calculateRoute","startFeature_","targetFeature_","viaArray","start.fill","start.stroke","destination.fill","destination.stroke","via.fill","via.stroke","routeSource_","routeLayer_","routeDistance","routeDuration","regexIsFormattedCoord","handleChange","clearRoute","reverseRoute","tmpFeature","parseRoute_","route","parsedRoutes","formatConfig","legs","leg","steps","step","coordFrom","coordTo","vias","via","onSuccess_","routes","startRoute","endRoute","startToRoute","routeToEnd","routeConnections","onError_","addVia","deleteVia","RoutingComponent","routing_module","epsg2056def","somerc","lib","proj4","AbstractDesktopController","resolutions","searchCoordinatesProjections","searchDelay","showInfobar","scaleSelectorValues","elevationLayers","profileLinesconfiguration","srtm","mousePositionProjections","gridMergeTabs","OSM_time_merged","transport (merged)","Learning [merged]","bgOpacityOptions","raven_default","addPlugin","angular_default","install","onKeydown","import_module"],"mappings":"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","file":"desktop_alt.32f844.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([361,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin, opt_customOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              dimensionsFilter\n            ]\n          );\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n      this.gmfSnapping_.refresh();\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensions_filters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (let i = 0, ii = layersList.length; i < ii; i++) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layersList[i] === dataSource.name)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minValue = newVal;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minValue = newVal;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxValue = newVal;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.hasError = false;\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file, (success) => {\n      if (!success) {\n        this.hasError = true;\n      }\n    });\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer, url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer The layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, layer, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: this.getOpacityOrInherited_(layer),\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: this.getOpacityOrInherited_(layer),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer, source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n/**\n * Return an opacity value for the specified layer.\n * @param {ol.layer.Base} layer Layer.\n * @returns {number} opacity Opacity value.\n * @private\n */\nexports.prototype.getOpacityOrInherited_ = function(layer) {\n  if (layer.get('inheritedOpacity') !== undefined) {\n    return layer.get('inheritedOpacity');\n  }\n  return layer.getOpacity();\n};\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n/**\n * @typedef {{\n *     useBbox: (boolean|undefined),\n *     label: (Object.<string, boolean>),\n *     params: (Object.<string, Object.<string, string>>)\n * }}\n */\nexports.optionsLegendType;\n\n/**\n * @typedef {{\n *     scaleInput: (boolean|undefined),\n *     legend: (optionsLegendType|undefined)\n * }}\n */\nexports.optionsType;\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    /**\n     * @type optionsLegendType\n     * @private\n     */\n    this.gmfLegendOptions_ = {\n      useBbox: true,\n      label: {},\n      params: {},\n    };\n\n    if ($injector.has('gmfPrintOptions')) {\n      /**\n       * @type optionsType\n       */\n      const options = $injector.get('gmfPrintOptions');\n      if (options.scaleInput) {\n        this.scaleInput = options.scaleInput;\n      }\n      if (options.legend) {\n        Object.assign(this.gmfLegendOptions_, options.legend);\n      }\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const center = this.map.getView().getCenter();\n      const deltaX = this.paperSize_[0] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const deltaY = this.paperSize_[1] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const bbox = [\n        center[0] - deltaX,\n        center[1] - deltaY,\n        center[0] + deltaX,\n        center[1] + deltaY,\n      ];\n      const legend = this.getLegend_(scale, this.layoutInfo.dpi, bbox);\n      if (legend !== null) {\n        customAttributes['legend'] = legend;\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @param {number} dpi The DPI.\n   * @param {Array.number} bbox The bbox.\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale, dpi, bbox) {\n    const legend = {'classes': []};\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      const classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          const layerName = `${layer.get('layerNodeName')}`;\n          let icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          const layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            let icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale, undefined, undefined, undefined, source.serverType_, dpi,\n                this.gmfLegendOptions_.useBbox ? bbox : undefined,\n                this.map.getView().getProjection().getCode(),\n                this.gmfLegendOptions_.params[layer.getSource().serverType_]\n              );\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push(Object.assign({\n                'name': this.gmfLegendOptions_.label[layer.getSource().serverType_] === false ? '' :\n                  gettextCatalog.getString(name),\n                'icons': [icons]\n              }, layer.getSource().serverType_ === 'qgis' ? {\n                'dpi': dpi,\n              } : {}));\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetview', [\n  ngeoMapFeatureOverlayMgr.module.name\n]);\n\n\nexports.value('ngeoGooglestreetviewTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGooglestreetviewTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/googlestreetview';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/googlestreetview', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGooglestreetviewTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGooglestreetviewTemplateUrl($attrs, ngeoGooglestreetviewTemplateUrl) {\n  return ngeoGooglestreetviewTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoGooglestreetviewController\n   */\n  constructor($element, $scope, ngeoFeatureOverlayMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * Style for the feature.\n     * @type {ol.style.Style|Array.<ol.style.Style>|\n     *     ol.FeatureStyleFunction|ol.StyleFunction|undefined}\n     * @export\n     */\n    this.featureStyle;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {number|undefined}\n     * @export\n     */\n    this.radius;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n\n    // Inner properties\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature();\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The current location in the OpenLayers' map view projection.\n     * @type {?ol.Coordinate}\n     * @private\n     */\n    this.location = null;\n\n    /**\n     * Flag that determines whether there's data at a given location or not.\n     * @type {boolean}\n     * @export\n     */\n    this.noDataAtLocation = false;\n\n    /**\n     * @type {!google.maps.StreetViewPanorama}\n     * @private\n     */\n    this.panorama_ = new google.maps.StreetViewPanorama(\n      $element[0],\n      {\n        pov: {\n          heading: 0,\n          pitch: 0\n        },\n        visible: false,\n        zoom: 1\n      }\n    );\n\n    /**\n     * @type {?google.maps.MapsEventListener}\n     * @private\n     */\n    this.panoramaListener_ = null;\n\n    /**\n     * @type {ol.geom.Point}\n     * @private\n     */\n    this.point_ = new olGeomPoint([0, 0]);\n\n    this.feature_.setGeometry(this.point_);\n\n    /**\n     * @type {google.maps.StreetViewService}\n     * @private\n     */\n    this.streetViewService_ = new google.maps.StreetViewService();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panoramaPositionChanging_ = false;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n\n    // === Watchers ===\n\n    // (1) Watch for any change in the location\n    this.scope_.$watch(\n      () => this.location,\n      this.handleLocationChange_.bind(this)\n    );\n\n    // (2) Watch for both the active and location. When we have both, the\n    //     state is considered 'ready'.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        return isActive && hasLocation;\n      },\n      this.handleReadyChange_.bind(this)\n    );\n\n    // (3) Watcher to manage the visibility of the panorama.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        const hasData = this.noDataAtLocation === false;\n        return isActive && hasLocation && hasData;\n      },\n      (show, oldShow) => {\n        if (show === oldShow) {\n          return;\n        }\n\n        this.panorama_.setVisible(show);\n\n        if (show) {\n          this.panoramaListener_ = google.maps.event.addListener(\n            this.panorama_,\n            'position_changed',\n            this.handlePanoramaPositionChange_.bind(this)\n          );\n        } else if (this.panoramaListener_) {\n          google.maps.event.removeListener(this.panoramaListener_);\n          this.panoramaListener_ = null;\n        }\n      }\n    );\n\n\n    // Other initialization\n    if (this.featureStyle) {\n      this.feature_.setStyle(this.featureStyle);\n    }\n\n  }\n\n  /**\n   * Called when the 'active' property of this component changes.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n\n    const keys = this.listenerKeys_;\n\n    if (active) {\n      keys.push(\n        olEvents.listen(this.map, 'click', this.handleMapClick_, this)\n      );\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n    }\n  }\n\n  /**\n   * Called when the 'location' property of this component changes.\n   * @param {?ol.Coordinate} location Location, in OL map view projection.\n   * @param {?ol.Coordinate} oldLocation The previous location.\n   * @private\n   */\n  handleLocationChange_(location, oldLocation) {\n\n    // (1) No need to do anything if the old value equals the new value\n    if (location === oldLocation || (\n      Array.isArray(location) && Array.isArray(oldLocation) &&\n        olArray.equals(location, oldLocation)\n    )) {\n      return;\n    }\n\n    // (2) Update point coordinates\n    this.point_.setCoordinates(location);\n\n    // (3) Update StreetView location\n    if (location && !this.panoramaPositionChanging_) {\n      const lonLat = this.toLonLat_(location);\n      this.streetViewService_.getPanorama({\n        location: {\n          lat: lonLat[1],\n          lng: lonLat[0]\n        },\n        radius: this.radius\n      }, this.handleStreetViewServiceGetPanorama_.bind(this));\n    }\n  }\n\n  /**\n   * Called when the map is clicked while this component is active. Update the\n   * location accordingly.\n   * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n   * @private\n   */\n  handleMapClick_(evt) {\n    this.location = evt.coordinate;\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the component 'virtual ready' state changes.\n   *\n   * When ready:\n   *  - add the feature to the overlay\n   *\n   * When not ready:\n   *  - remove the feature from the overlay\n   *\n   * @param {boolean} ready Whether the component is ready or not.\n   * @param {boolean} oldReady Previous ready value.\n   * @private\n   */\n  handleReadyChange_(ready, oldReady) {\n\n    if (ready === oldReady) {\n      return;\n    }\n\n    if (ready) {\n      this.featureOverlay_.addFeature(this.feature_);\n    } else {\n      this.featureOverlay_.removeFeature(this.feature_);\n    }\n  }\n\n  /**\n   * @param {google.maps.StreetViewPanoramaData} data Data.\n   * @param {google.maps.StreetViewStatus} status Status.\n   * @private\n   */\n  handleStreetViewServiceGetPanorama_(data, status) {\n\n    const panorama = this.panorama_;\n\n    if (status === google.maps.StreetViewStatus.OK) {\n      this.noDataAtLocation = false;\n      panorama.setPosition(data.location.latLng);\n    } else {\n      this.noDataAtLocation = true;\n    }\n\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the panorama position changes. Update the location.\n   * @private\n   */\n  handlePanoramaPositionChange_() {\n    this.panoramaPositionChanging_ = true;\n    const position = this.panorama_.getPosition();\n    const lonLat = [position.lng(), position.lat()];\n    const location = this.fromLonLat_(lonLat);\n    this.location = location;\n    this.scope_.$apply();\n    this.panoramaPositionChanging_ = false;\n  }\n\n\n  // Utility methods\n\n  /**\n   * @param {!ol.Coordinate} lonLat LonLat coordinate.\n   * @return {ol.Coordinate} Map view projection coordinate.\n   */\n  fromLonLat_(lonLat) {\n    return olProj.fromLonLat(\n      lonLat,\n      this.map.getView().getProjection()\n    );\n  }\n\n  /**\n   * @param {!ol.Coordinate} coordinate Map view projection coordinate.\n   * @return {ol.Coordinate} LonLat coordinate.\n   */\n  toLonLat_(coordinate) {\n    return olProj.toLonLat(\n      coordinate,\n      this.map.getView().getProjection()\n    );\n  }\n};\n\n\nexports.component('ngeoGooglestreetview', {\n  bindings: {\n    'active': '<',\n    'featureStyle': '<?',\n    'map': '<',\n    'radius': '<?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoGooglestreetviewTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.module\n */\nimport ngeoGooglestreetviewComponent from 'ngeo/googlestreetview/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetviewModule', [\n  ngeoGooglestreetviewComponent.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimService\n */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\n/**\n * Service to provide access to Nominatim, which allows to search for\n * OSM data by name and address.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoNominatimService\n * @see https://wiki.openstreetmap.org/wiki/Nominatim\n */\nconst exports = function($http, $injector, ngeoDebounce) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * URL for Nominatim backend\n   * Defaults openstreetmap instance.\n   * @type {string}\n   * @private\n   */\n  this.nominatimUrl_ = 'https://nominatim.openstreetmap.org/';\n\n  if ($injector.has('ngeoNominatimUrl')) {\n    this.nominatimUrl_ = $injector.get('ngeoNominatimUrl');\n\n    // the url is expected to end with a slash\n    if (this.nominatimUrl_.substr(-1) !== '/') {\n      this.nominatimUrl_ += '/';\n    }\n  }\n\n  /**\n   * @type {Object<string, string>}\n   * @private\n   */\n  this.searchDefaultParams_ = {};\n\n  if ($injector.has('ngeoNominatimSearchDefaultParams')) {\n    this.searchDefaultParams_ = $injector.get('ngeoNominatimSearchDefaultParams');\n  }\n\n  /**\n   * Delay (in milliseconds) to avoid calling the API too often.\n   * Only if there were no calls for that many milliseconds,\n   * the last call will be executed.\n   * @type {number}\n   * @private\n   */\n  this.typeaheadDebounceDelay_ = 500;\n\n  /**\n   * @export\n   * @type {function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))}\n   */\n  this.typeaheadSourceDebounced =\n    /** @type{function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))} */\n    (this.ngeoDebounce_(/** @type {function(?)} */ (this.typeaheadSource_.bind(this)), this.typeaheadDebounceDelay_, true));\n};\n\n/**\n * Search by name\n * @param {string} query Search query\n * @param {?Object} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Search\n * @export\n */\nexports.prototype.search = function(query, params) {\n  let url = `${this.nominatimUrl_}search?q=${query}`;\n\n  params = params || {};\n  params = Object.assign({}, this.searchDefaultParams_, params);\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '&';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Reverse Geocoding\n * @param {ol.Coordinate} coordinate Search coordinate in LonLat projection\n * @param {(Object|undefined)} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Reverse_Geocoding\n * @export\n */\nexports.prototype.reverse = function(coordinate, params) {\n  let url = `${this.nominatimUrl_}reverse`;\n\n  params = Object.assign({}, params);\n\n  // coordinate\n  params['lon'] = coordinate[0];\n  params['lat'] = coordinate[1];\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * @param {string} query Search query\n * @param {function(Array.<BloodhoundDatum>)} syncResults Callback for synchronous execution, unused\n * @param {function(Array.<ngeox.NominatimSearchResult>)} asyncResults Callback for asynchronous execution\n * @private\n */\nexports.prototype.typeaheadSource_ = function(query, syncResults, asyncResults) {\n  const onSuccess_ = function(resp) {\n    /**\n     * Parses result response.\n     * @param {ngeox.NominatimSearchResponseResult} result Result\n     * @return {ngeox.NominatimSearchResult} Parsed result\n     */\n    const parse = function(result) {\n      return /** @type{ngeox.NominatimSearchResult} */({\n        coordinate: [result.lon, result.lat],\n        name: result.display_name\n      });\n    };\n    asyncResults(resp.data.map(parse));\n  };\n\n  const onError_ = function(resp) {\n    asyncResults([]);\n  };\n\n  this.search(query, {}).then(onSuccess_, onError_);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoNominatimService', [\n  ngeoMiscDebounce.name\n]);\n\nexports.module.service('ngeoNominatimService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingService\n */\n/**\n * Service to provide access to a [Open Source Routing Machine (OSRM) backend](https://github.com/Project-OSRM/osrm-backend)\n * of version 5.8 and higher and its features.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoRoutingService\n */\nconst exports = function($http, $injector) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * URL for OSRM backend API.\n   * Defaults to demo backend.\n   * @type {string}\n   * @private\n   */\n  this.ngeoOsrmBackendUrl_ = this.routingOptions_.backendUrl || 'https://router.project-osrm.org/';\n\n  // the url is expected to end with a slash\n  if (this.ngeoOsrmBackendUrl_.substr(-1) !== '/') {\n    this.ngeoOsrmBackendUrl_ += '/';\n  }\n\n  /**\n   * Version of the protocol implemented by the service.\n   * see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md\n   * @type {string}\n   * @private\n   */\n  this.protocolVersion_ = 'v1';\n\n};\n\n/**\n * Route request\n * @param {Array.<ol.Coordinate>} coordinates coordinates of the route (at least two!)\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n */\nexports.prototype.getRoute = function(coordinates, config) {\n\n  config = config || {};\n\n  // Service\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  if (!config['service']) {\n    config['service'] = 'route'; // default to route\n  }\n\n  // Mode of transportation,\n  // can be: car, bike, foot\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  //\n  // As of version 5.8.0, OSRM (server) does not support multiple profiles simultaneously.\n  // This means the value actually does not matter.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [ [a,b] , [c,d] ] -> 'a,b;c,d'\n  const coordinateString = coordinates.map(c => c.join(',')).join(';');\n\n  url += coordinateString;\n\n  // look for route service options\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#route-service\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Snaps a coordinate to the street network and returns the nearest match\n * @param {ol.Coordinate} coordinate coordinate to query\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n * @see https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#nearest-service\n */\nexports.prototype.getNearest = function(coordinate, config) {\n  config = config || {};\n\n  // service is always nearest\n  config['service'] = 'nearest';\n\n  // Mode of transportation\n  // If used in combination with a getRoute request, choose the same profile.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [a,b] -> 'a,b'\n  const coordinateString = coordinate.join(',');\n  url += coordinateString;\n\n  // look for nearest service options\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingService', [\n]);\n\nexports.module.service('ngeoRoutingService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimInputComponent\n */\nconst exports = {};\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingNominatimInputComponent', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoRoutingNominatimService.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/nominatiminput', require('./nominatiminput.html'));\n});\n\n\nexports.module.value('ngeoRoutingNominatimInputComponentTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingNominatimInputComponentTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/nominatiminput';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingNominatimInputComponentTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingNominatimInputComponentTemplateUrl($attrs, ngeoRoutingNominatimInputComponentTemplateUrl) {\n  return ngeoRoutingNominatimInputComponentTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoNominatimInputController\n */\nexports.Controller = function($element, $injector, $scope, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @export\n   */\n  this.ngeoNominatimService = ngeoNominatimService;\n\n  /**\n   * @type {(function(Object)|undefined)}\n   * @export\n   */\n  this.onSelect;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.inputValue;\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.options = /** @type {TypeaheadOptions} */ ({\n  });\n\n  /**\n   * @type {Array.<TypeaheadDataset>}\n   * @export\n   */\n  this.datasets = [/** @type {TypeaheadDataset} */({\n    name: 'nominatim',\n    display: 'name',\n    source: this.ngeoNominatimService.typeaheadSourceDebounced\n  })];\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.listeners = /** @type {ngeox.SearchDirectiveListeners} */({\n    select: this.select_.bind(this)\n  });\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.placeholder = '';\n\n};\n\n/**\n * @param {jQuery.Event} event Event.\n * @param {ngeox.NominatimSearchResult} suggestion Suggestion.\n * @param {TypeaheadDataset} dataset Dataset.\n * @this {ngeo.routing.NominatimInputComponent.Controller}\n * @private\n */\nexports.Controller.prototype.select_ = function(event, suggestion, dataset) {\n  if (this.onSelect) {\n    this.onSelect(suggestion);\n  }\n};\n\n/**\n * Input form field which provides Nominatim typeahead lookup using {@link ngeo.routing.NominatimService}.\n *\n * Example:\n *\n *     <ngeo-nominatim-input\n *         ngeo-nominatim-input-value=\"ctrl.label\"\n *         ngeo-nominatim-input-placeholder=\"type to search\"\n *         ngeo-nominatim-input-on-select=\"ctrl.onSelect\">\n *\n * Is used in in the partial of {@link ngeo.routingFeatureComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example to see it in action.\n *\n * @htmlAttribute {function(ngeox.NominatimSearchResult)} ngeo-nominatim-input-on-select\n *  Event fired when user selects a new suggestion.\n * @htmlAttribute {string} ngeo-nominatim-input-value\n *  Value of input field, will be set to the label of the search result.\n * @htmlAttribute {string} ngeo-nominatim-input-placeholder\n *  Placeholder text, when field is empty.\n * @ngdoc directive\n * @ngname ngeoNominatimInput\n */\nconst component = {\n  controller: exports.Controller,\n  bindings: {\n    'onSelect': '=?ngeoNominatimInputOnSelect',\n    'inputValue': '=?ngeoNominatimInputValue',\n    'placeholder': '@?ngeoNominatimInputPlaceholder'\n  },\n  templateUrl: ngeoRoutingNominatimInputComponentTemplateUrl\n};\n\nexports.module.component('ngeoNominatimInput', component);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingFeatureComponent\n */\nconst exports = {};\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingNominatimInputComponent from 'ngeo/routing/NominatimInputComponent.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingFeatureComponent', [\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingNominatimInputComponent.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routingfeature', require('./routingfeature.html'));\n});\n\n\nexports.module.value('ngeoRoutingFeatureTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingFeatureTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routingfeature';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingFeatureTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingFeatureTemplateUrl($attrs, ngeoRoutingFeatureTemplateUrl) {\n  return ngeoRoutingFeatureTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.$q} $q Angular q service\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingFeatureController\n */\nexports.Controller = function($scope, $timeout, $q, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.featureLabel = '';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fillColor;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.strokeColor;\n\n  /**\n   * @type {function(ol.Feature)}\n   * @export\n   */\n  this.onChange;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.vectorFeatures_ = new olCollection();\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: (function(feature, resolution) {\n      return [new olStyleStyle({\n        text: new olStyleText({\n          fill: new olStyleFill({\n            color: this.fillColor || '#000000'\n          }),\n          font: 'normal 30px FontAwesome',\n          offsetY: -15,\n          stroke: new olStyleStroke({\n            width: 3,\n            color: this.strokeColor || '#000000'\n          }),\n          text: '\\uf041'\n        })\n      })];\n    }).bind(this)\n  });\n\n  /**\n   * Interaction for moving start and end.\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modifyFeature_ = new olInteractionModify({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  /**\n   * @param {ngeox.NominatimSearchResult} selected Selected result.\n   * @export\n   */\n  this.onSelect = this.onSelect_.bind(this);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n};\n\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.vectorLayer_);\n\n  // setup modify interaction\n  this.modifyFeature_.setActive(true);\n  this.map.addInteraction(this.modifyFeature_);\n\n  this.modifyFeature_.on('modifyend', (event) => {\n    const feature = event.features.getArray()[0];\n    this.vectorSource_.clear();\n    this.snapFeature_(feature);\n  });\n\n  this.scope_.$watch(\n    () => this.feature,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.onFeatureChange_();\n      }\n      if (newVal === null) {\n        this.vectorSource_.clear();\n        this.featureLabel = '';\n      }\n    }\n  );\n};\n\n/**\n * Cleanup, mostly relevant for vias.\n */\nexports.Controller.prototype.$onDestroy = function() {\n  this.map.removeLayer(this.vectorLayer_);\n  this.modifyFeature_.setActive(false);\n  this.map.removeInteraction(this.modifyFeature_);\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.set = function() {\n  if (this.draw_) {\n    this.map.removeInteraction(this.draw_);\n  }\n\n  this.draw_ = new olInteractionDraw({\n    features: this.vectorFeatures_,\n    type: /** @type {ol.geom.GeometryType} */ ('Point')\n  });\n\n  this.draw_.on('drawstart', () => {\n    if (this.feature) {\n      this.vectorSource_.removeFeature(this.feature);\n    }\n  });\n\n  this.draw_.on('drawend', (event) => {\n    if (this.draw_) {\n      this.map.removeInteraction(this.draw_);\n    }\n    this.snapFeature_(event.feature);\n    this.modifyFeature_.setActive(true);\n  });\n\n  this.modifyFeature_.setActive(false);\n  this.map.addInteraction(this.draw_);\n};\n\n/**\n * @param {ol.Coordinate} coordinate LonLat coordinate.\n * @param {string} label Feature name/label.\n * @private\n */\nexports.Controller.prototype.setFeature_ = function(coordinate, label) {\n  const transformedCoordinate = olProj.fromLonLat(coordinate, this.map.getView().getProjection());\n  if (label === '') {\n    label = transformedCoordinate.join('/');\n  }\n  this.feature = new olFeature({\n    geometry: new olGeomPoint(transformedCoordinate),\n    name: label\n  });\n};\n\nexports.Controller.prototype.onFeatureChange_ = function() {\n  // update label\n  this.featureLabel = /** @type{string} */(this.feature.get('name') || '');\n\n  //update vector source\n  this.vectorSource_.clear();\n  this.vectorSource_.addFeature(this.feature);\n\n  // notify others\n  if (this.onChange) {\n    this.timeout_(() => {\n      this.onChange(this.feature);\n    });\n  }\n};\n\n/**\n * @param {ngeox.NominatimSearchResult} selected Selected result.\n * @private\n */\nexports.Controller.prototype.onSelect_ = function(selected) {\n  const coordinate = selected.coordinate.map(parseFloat);\n  const label = selected.label;\n  this.setFeature_(coordinate, label);\n  const newCoordinates = /** @type{ol.geom.Point} */(this.feature.getGeometry()).getCoordinates();\n  this.map.getView().setCenter(newCoordinates);\n};\n\n/**\n * Snaps a feature to the street network using the getNearest\n * function of the routing service. Replaces the feature.\n * @param {ol.Feature} feature Feature to snap\n * @private\n */\nexports.Controller.prototype.snapFeature_ = function(feature) {\n  const coord = this.getLonLatFromPoint_(feature);\n  const config = {};\n\n  const onSuccess = (function(resp) {\n    const lon = parseFloat(resp['data']['lon']);\n    const lat = parseFloat(resp['data']['lat']);\n    const coordinate = [lon, lat];\n    const label = resp['data']['display_name'];\n    this.setFeature_(coordinate, label);\n  }).bind(this);\n\n  const onError = (function(resp) {\n    this.errorMessage = 'Error: nominatim server not responding.';\n    console.log(resp);\n  }).bind(this);\n\n  this.$q_.when(this.ngeoNominatimService_.reverse(coord, config))\n    .then(onSuccess.bind(this), onError.bind(this));\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n\n/**\n * Provides a text input and draw interaction to allow a user to create and modify a ol.Feature (point geometry).\n *\n * The text input is provided by {@link ngeo.nominatimInputComponent} and includes Nominatim search.\n *\n * Example:\n *\n *     <ngeo-routing-feature\n *         ngeo-routing-feature-map=\"ctrl.map\"\n *         ngeo-routing-feature-feature=\"ctrl.feature\"\n *         ngeo-routing-feature-fill-color=\"#6BE62E\"\n *         ngeo-routing-feature-stroke-color=\"#4CB01E\"\n *         ngeo-routing-feature-on-change=\"ctrl.handleChange\">\n *\n * Is used in in the partial of {@link ngeo.routingComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} ngeo-routing-feature-map The map.\n * @htmlAttribute {ol.Feature} ngeo-routing-feature-feature The feature.\n * @htmlAttribute {string} ngeo-routing-feature-fill-color The marker fill color.\n * @htmlAttribute {string} ngeo-routing-feature-stroke-color The marker stroke color.\n * @htmlAttribute {function(ol.Feature)} ngeo-routing-feature-on-change Event fired when feature changes.\n * @ngdoc directive\n * @ngname ngeoRoutingFeature\n */\nexports.component_ = {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingFeatureMap',\n    'feature': '=ngeoRoutingFeatureFeature',\n    'fillColor': '<?ngeoRoutingFeatureFillColor',\n    'strokeColor': '<?ngeoRoutingFeatureStrokeColor',\n    'onChange': '=?ngeoRoutingFeatureOnChange'\n  },\n  templateUrl: ngeoRoutingFeatureTemplateUrl\n};\n\nexports.module.component('ngeoRoutingFeature', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingComponent\n */\nconst exports = {};\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingRoutingService from 'ngeo/routing/RoutingService.js';\nimport ngeoRoutingRoutingFeatureComponent from 'ngeo/routing/RoutingFeatureComponent.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport 'font-awesome/css/font-awesome.css';\n\nexports.module = angular.module('ngeoRoutingComponent', [\n  ngeoMiscDebounce.name,\n  ngeoMiscFilters.name,\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingRoutingService.module.name,\n  ngeoRoutingRoutingFeatureComponent.module.name\n]);\n\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routing', require('./routing.html'));\n});\n\n\nexports.module.value('ngeoRoutingTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routing';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingTemplateUrl($attrs, ngeoRoutingTemplateUrl) {\n  return ngeoRoutingTemplateUrl($attrs);\n}\n\n\n/**\n * The controller for the routing directive.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.RoutingService} ngeoRoutingService service for OSRM routing\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @param {!angular.$q} $q Angular q service\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingController\n */\nexports.Controller = function($injector, $scope, ngeoRoutingService, ngeoNominatimService, $q, ngeoDebounce) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.RoutingService}\n   * @private\n   */\n  this.ngeoRoutingService_ = ngeoRoutingService;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * Available routing profiles.\n   * Example: [\n   *            {\n   *              label: 'Car', // used as label in the UI\n   *              profile: 'routed-car' // used as part of the query\n   *            }\n   *          ]\n   * @type {Array<ngeox.RoutingProfile>}\n   * @export\n   */\n  this.routingProfiles = this.routingOptions_.profiles || [];\n\n  /**\n   * @type {?ngeox.RoutingProfile}\n   * @export\n   */\n  this.selectedRoutingProfile = this.routingProfiles.length > 0 ? this.routingProfiles[0] : null;\n\n  $scope.$watch(\n    () => this.selectedRoutingProfile,\n    this.calculateRoute.bind(this)\n  );\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.startFeature_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.targetFeature_ = null;\n\n  /**\n   * @type {Array.<ngeox.RoutingVia>}\n   * @export\n   */\n  this.viaArray = [];\n\n  /**\n   * @type {Object<string, string>}\n   * @export\n   */\n  this.colors = {\n    'start.fill': '#6BE62E',\n    'start.stroke': '#4CB01E',\n    'destination.fill': '#FF3E13',\n    'destination.stroke': '#CD3412',\n    'via.fill': '#767676',\n    'via.stroke': '#000000'\n  };\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.routeSource_ = new olSourceVector({\n    features: []\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.routeLayer_ = new olLayerVector({\n    source: this.routeSource_,\n    style: new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(16, 112, 29, 0.6)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(16, 112, 29, 0.6)',\n        width: 5\n      })\n    })\n  });\n\n  /**\n   * Distance of route in meters\n   * @type {number}\n   * @export\n   */\n  this.routeDistance = 0;\n\n  /**\n   * Duration of route in minutes.\n   * @type {?number}\n   * @export\n   */\n  this.routeDuration = null;\n\n  /**\n   * @type {RegExp}\n   * @private\n   */\n  this.regexIsFormattedCoord = /\\d+\\.\\d+\\/\\d+\\.\\d+/;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  const debounceDelay = 200; // in milliseconds\n\n  /**\n   * Debounced because in some cases (reverse route) multiple changes are done\n   * at once and spam this function.\n   * @export\n   * @type {function()}\n   */\n  this.handleChange = /** @type {function()} */\n          (ngeoDebounce(\n            /** @type {function(?)} */ (this.calculateRoute.bind(this)),\n            debounceDelay,\n            true));\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.routeLayer_);\n};\n\n/**\n * Clears start, end and vias. Removes features from map.\n * @export\n */\nexports.Controller.prototype.clearRoute = function() {\n  this.startFeature_ = null;\n  this.targetFeature_ = null;\n  this.viaArray = [];\n  this.routeDistance = 0;\n  this.routeDuration = null;\n  this.routeSource_.clear();\n  this.errorMessage = '';\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n/**\n * Flip start and target and re-calculate route.\n * @export\n */\nexports.Controller.prototype.reverseRoute = function() {\n  // swap start and target\n  const tmpFeature = this.startFeature_;\n  this.startFeature_ = this.targetFeature_;\n  this.targetFeature_ = tmpFeature;\n\n  // reverse vias\n  this.viaArray = this.viaArray.reverse();\n\n  // recalculation is done by the debounced handleChange\n};\n\n/**\n * @param {Object} route Routes of OSRM response\n * @returns {Array<ol.Feature>} parsed route features\n * @private\n */\nexports.Controller.prototype.parseRoute_ = function(route) {\n  let parsedRoutes = [];\n  const format = new olFormatGeoJSON();\n  const formatConfig = {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.map.getView().getProjection()\n  };\n  // if there are is useful \"legs\" data, parse this\n  if (route.legs) {\n    parsedRoutes = route.legs.map(leg => leg.steps.map(step => new olFeature({geometry: format.readGeometry(step.geometry, formatConfig)})));\n    // flatten\n    parsedRoutes = [].concat(...parsedRoutes);\n  } else if (route.geometry) {\n  // otherwise parse (overview) geometry\n    parsedRoutes.push(new olFeature({geometry: format.readGeometry(route.geometry, formatConfig)}));\n  }\n  return parsedRoutes;\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.calculateRoute = function() {\n  if (this.startFeature_ && this.targetFeature_) {\n    // remove rendered routes\n    this.routeSource_.clear();\n\n    const coordFrom = this.getLonLatFromPoint_(this.startFeature_);\n    const coordTo = this.getLonLatFromPoint_(this.targetFeature_);\n    const vias = this.viaArray.filter(via => via.feature !== null).map(via => this.getLonLatFromPoint_(via.feature));\n    const route =  [coordFrom].concat(vias, [coordTo]);\n\n    const onSuccess_ = (function(resp) {\n      const features = this.parseRoute_(resp.data.routes[0]);\n      if (features.length === 0) {\n        console.log('No route or not supported format.');\n        return;\n      }\n      this.routeSource_.addFeatures(features);\n\n      // recenter map on route\n      this.map.getView().fit(this.routeSource_.getExtent());\n\n      this.routeDistance = parseInt(resp.data.routes[0].distance, 10);\n      this.routeDuration = resp.data.routes[0].duration;\n\n      // get first and last coordinate of route\n      const startRoute = /** @type{ol.geom.LineString} */(features[0].getGeometry()).getCoordinateAt(0);\n      const endRoute = /** @type{ol.geom.LineString} */(features[features.length - 1].getGeometry()).getCoordinateAt(1);\n\n      // build geometries to connect route to start and end point of query\n      const startToRoute = [/** @type {ol.geom.Point} */(this.startFeature_.getGeometry()).getCoordinates(), startRoute];\n      const routeToEnd = [endRoute, /** @type {ol.geom.Point} */(this.targetFeature_.getGeometry()).getCoordinates()];\n      const routeConnections = [\n        new olFeature(new olGeomLineString(startToRoute)),\n        new olFeature(new olGeomLineString(routeToEnd))\n      ];\n\n      // add them to the source\n      this.routeSource_.addFeatures(routeConnections);\n    }).bind(this);\n\n    const onError_ = (function(resp) {\n      this.errorMessage = 'Error: routing server not responding.';\n      console.log(resp);\n    }).bind(this);\n\n    const options = {};\n    options['steps'] = true;\n    options['overview'] = false;\n    options['geometries'] = 'geojson';\n\n    const config = {};\n    config['options'] = options;\n\n    if (this.selectedRoutingProfile) {\n      config['instance'] = this.selectedRoutingProfile['profile'];\n    }\n\n    this.$q_.when(this.ngeoRoutingService_.getRoute(route, config))\n      .then(onSuccess_.bind(this), onError_.bind(this));\n  }\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.addVia = function() {\n  this.viaArray.push(/** @type{ngeox.RoutingVia} */({\n    feature: null,\n    onSelect: null\n  }));\n};\n\n/**\n * @param {number} index Array index.\n * @export\n */\nexports.Controller.prototype.deleteVia = function(index) {\n  if (this.viaArray.length > index) {\n    this.viaArray.splice(index, 1);\n    this.calculateRoute();\n  }\n};\n\n\nexports.module.component('ngeoRouting', {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingMap'\n  },\n  templateUrl: ngeoRoutingTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.module\n */\nimport ngeoRoutingRoutingComponent from 'ngeo/routing/RoutingComponent.js';\n\nimport './routing.less';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRoutingModule', [\n  ngeoRoutingRoutingComponent.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.desktop_alt.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport ngeoGooglestreetviewModule from 'ngeo/googlestreetview/module.js';\nimport ngeoRoutingModule from 'ngeo/routing/module.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeo.misc.File} ngeoFile The file service.\n * @param {gettext} gettext The gettext service\n * @param {angular.$q} $q Angular $q.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, ngeoFile, gettext, $q) {\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.searchDelay = 500;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showInfobar = true;\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['srtm'];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'srtm': {}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: 'EPSG:2056',\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:21781',\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  /**\n   * @type {gmfx.GridMergeTabs}\n   * @export\n   */\n  this.gridMergeTabs = {\n    'OSM_time_merged': ['osm_time', 'osm_time2'],\n    'transport (merged)': ['fuel', 'parking'],\n    'Learning [merged]': ['information', 'bus_stop']\n  };\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('OSM_time_merged');\n  gettextCatalog.getString('OSM_time (merged)');\n  gettextCatalog.getString('Learning [merged]');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.bgOpacityOptions = 'Test aus Olten';\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\n\n/**\n * @param {jQuery.Event} event keydown event.\n * @export\n */\nexports.prototype.onKeydown = function(event) {\n  if (event.ctrlKey && event.key === 'p') {\n    this.printPanelActive = true;\n    event.preventDefault();\n  }\n};\n\n\nexports.module = angular.module('Appdesktop_alt', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfImportModule.name,\n  ngeoRoutingModule.name,\n  ngeoGooglestreetviewModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\nexports.module.controller('AlternativeDesktopController', exports);\n\nexport default exports;\n","module.exports = \"<div class=ngeo-routing> <div class=\\\"ngeo-routing-start form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.startFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['start.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['start.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"ngeo-routing-vias form-group\\\" ng-repeat=\\\"(index, via) in $ctrl.viaArray\\\"> <div class=form-inline> <div class=form-group> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=via.feature ngeo-routing-feature-fill-color=\\\"$ctrl.colors['via.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['via.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <button type=button class=\\\"btn btn-primary delete-via\\\" ng-click=$ctrl.deleteVia(index)> <span class=\\\"fa fa-trash-o\\\"></span> </button> </div> </div> <div class=\\\"ngeo-routing-destination form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.targetFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['destination.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['destination.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"form-group pull-right\\\"> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.clearRoute()> <span class=\\\"fa fa-trash-o\\\"></span> <span translate>Clear</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.reverseRoute()> <span class=\\\"fa fa-exchange\\\"></span> <span translate>Reverse</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.addVia()> <span class=\\\"fa fa-plus\\\"></span> <span translate>Add via</span> </button> </div> <div class=clearfix></div> <div class=form-horizontal ng-if=\\\"$ctrl.routingProfiles.length > 1\\\"> <div class=form-group> <label class=\\\"control-label col-md-4\\\" translate>Profile</label> <div class=col-md-8> <select class=form-control ng-model=$ctrl.selectedRoutingProfile> <option ng-repeat=\\\"profile in $ctrl.routingProfiles\\\" ng-value=profile>{{profile.label}}</option> </select> </div> </div> </div> <div class=\\\"ngeo-routing-error form-group clearfix\\\" ng-hide=\\\"$ctrl.errorMessage === ''\\\"> {{$ctrl.errorMessage}} </div> <div class=clearfix></div> <div class=form-horizontal ng-hide=\\\"$ctrl.routeDuration === null && $ctrl.routeDistance <= 0\\\"> <div class=row> <div class=col-md-12> <strong translate>Route statistics</strong> </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDuration === null\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Duration </div> <div class=col-md-8> {{$ctrl.routeDuration | ngeoDuration}} </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDistance <= 0\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Distance </div> <div class=col-md-8> {{$ctrl.routeDistance | ngeoUnitPrefix:'m'}} </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-routing-feature> <div class=input-group> <ngeo-nominatim-input ngeo-nominatim-input-value=$ctrl.featureLabel ngeo-nominatim-input-placeholder=\\\"{{'Search...' | translate}}\\\" ngeo-nominatim-input-on-select=$ctrl.onSelect> </ngeo-nominatim-input> <div class=\\\"input-group-addon btn\\\" ng-click=$ctrl.set()> <span class=\\\"fa fa-map-marker\\\"></span> </div> </div> </div> \";","module.exports = \"<div class=ngeo-nominatim-input> <input type=text class=form-control placeholder={{$ctrl.placeholder}} ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> </div> \";","module.exports = \"<div class=ngeo-googlestreetview-instructions ng-if=\\\"$ctrl.location === null\\\" translate> Click on a road on the map to start StreetView. </div> <div class=ngeo-googlestreetview-nodata ng-if=$ctrl.noDataAtLocation translate> Street View data not found for this location. </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\" ng-click=\\\"$ctrl.hasError = false\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=input-group> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined || $ctrl.hasError\\\"> <span ng-if=!$ctrl.hasError>{{'Load local file' | translate}}</span> <span ng-if=$ctrl.hasError>{{'Unable to load the file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}